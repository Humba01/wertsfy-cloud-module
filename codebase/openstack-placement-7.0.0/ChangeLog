CHANGES
=======

7.0.0
-----

* Add microversion 1.39 to support any-trait queries
* Remove unused compatibility code
* Add any-traits support for allocation candidates
* Add any-traits support for listing resource providers
* Extend the RP tree DB query to support any-traits
* Enhance doc of \_get\_trees\_with\_traits
* DB layer should only depend on trait id not names
* Extend the RP db query to support any-traits
* Refactor trait normalization
* Extra tests around required traits
* update placement for os-traits 2.7.0 release
* disable traits count check to allow os-traits 2.7.0
* Updating python testing as per Yoga testing runtime
* Spec: support mixing required traits with any traits
* Spec: support any trait in allocation candidates
* Add yoga spec directory
* Use 'functional-without-sample-db-tests' tox env for placement nova job
* Bump min decorator to 4.0.0
* Add Python3 yoga unit tests
* Update master for stable/xena

6.0.0.0rc1
----------

* Narrow scope of set allocations database transaction
* Call Engine.execute() in func tests for oslo.db 11.0.0
* Add reproducer for Project creation race bug
* Fix adding 'unknown' to the ConsumerTypeCache
* Reproduce 404 when allocation queried with 1.38
* Refactor consumer type methods for readability
* Bump os-traits to latest 2.6.0
* Switch ConsumerType to use an AttributeCache
* Microversion 1.38: API support for consumer types
* Add consumer\_types migration, database and object changes
* Enable HTTPProxyToWSGI middleware to find actual client ips
* placement-status: check only consumers in allocation table
* Fix SQL query counting the number of individual consumers having allocations by only selecting the aggregated consumer\_id column
* Bump os-resource-classes requirements
* Add support for RP re-parenting and orphaning
* Move placement specs from nova
* Fix oslo policy DeprecatedRule warnings
* Bump os-resource-classes deps to 1.0.0
* [doc] Redirect people to #openstack-nova
* Fix webchat link in the doc
* Update doc after freenode -> OFTC move
* Add periodic-stable-jobs template
* Adapt to SQLAlchemy 1.4
* Add weekly jobs
* Make sure the policy upgrade check get a valid config
* Add 'cryptography' package to test-requirements.txt
* Add a reproduction test for bug story/2008831
* Add Python3 xena unit tests
* Update master for stable/wallaby
* Correctly handle integrity errors on MySQL 8.x

5.0.0
-----

* Update traits in tests and requirements
* Move policy deprecation to base rules
* policy: Add releasenote for RBAC work
* Implement secure RBAC for reshaper
* policy: Add note about keystone's expansion of roles
* policy: Deprecate 'admin\_api' rule
* policy: Remove the deprecated 'placement' rule
* Implement secure RBAC for usage
* Implement secure RBAC for traits
* Implement secure RBAC for resource classes
* Implement secure RBAC for inventories
* Implement secure RBAC for allocation candidates
* Implement secure RBAC for allocations
* Implement secure RBAC for aggregates
* Implement secure RBAC for resource providers
* policy: Don't persist default rule changes in tests
* policy: Suppress policy deprecation warnings
* Pass context objects to oslo.policy directly
* [goal] Deprecate the JSON formatted policy file
* Bump oslo.log version to 4.3.0
* Remove deprecated [placement]/policy\_file config option
* Fix l-c job and move to latest hacking 4.0.0
* Remove unused test helper
* Fix Placement Doc
* Add functional-py3[89] tox targets
* Add Python3 wallaby unit tests
* Update master for stable/victoria

4.0.0
-----

* Adds py38 functional tests to gate
* Bump default tox env from py37 to py38
* Correct spell error from \`seperate\` to \`separate\`
* [goal] Migrate testing to ubuntu focal
* Cap jsonschema 3.2.0 as the minimal version
* Remove translation sections from setup.cfg
* Replace assertItemsEqual with assertCountEqual
* Update perfload jobs for python3
* Add DEBUG logs to help troubleshoot no allocation candidates
* Update for os-traits 2.4.0
* Update verification for Python3
* Remove all usage of six library
* drop mock from lower-constraints
* Stop to use the \_\_future\_\_ module
* Switch to newer openstackdocstheme and reno versions
* Switch to new grenade job name
* Use unittest.mock instead of third party mock
* Add py38 package metadata
* Add Python3 victoria unit tests
* Update master for stable/ussuri
* [Community goal] Update contributor documentation

3.0.0
-----

* Cleanup py27 support
* Provide more accurate links in doc/source/user/provider-tree.rst
* Update for os-traits 2.2.0
* Add check-requirements to project template
* Update for os-traits 2.1.0
* Update for os-traits 2.0.0
* Remove py2 specific requirement for docs
* Start README.rst with a better title
* Add allocation\_conflict\_retry\_count conf setting
* Drop support for python 2
* Clarify GET /allocations/$c for nonexistent $c
* Update for os-traits 1.1.0
* api-ref: note GET /resource\_providers?resources amount constraints
* Remove unused import statement
* Add --skip-locks flag to mysql-migrate-db.sh
* Fix domain name in install doc (2)
* Fix domain name in install doc
* Update READMEs for sample policy/config generation
* Update master for stable/train

2.0.0.0rc1
----------

* Add Train upgrade notes
* Add train-prelude release note
* Clean up contributor document
* Clean up document's index
* Update the constraints url
* Fix section structure for pdf docs
* Build pdf docs
* Un-cap jsonschema for python3.6/3.7 support
* Deprecate [placement]/policy\_file config option
* Update nested-magic spec for root\_member\_of
* Move nested magic spec to implemented
* Update setup.cfg to include project\_urls
* Fix misspell word
* Fix typo in microversion sequence test
* Fix links to migration scripts
* Clarify the NOTE associated with ordering of middleware
* Refactor exclude\_nested\_providers()
* Get usages in \_build\_provider\_summaries()
* Add place-held \_static dir for Sphinx 2.2.0
* api-ref: fix typo in aggregates note
* Avoid duplicate ProviderSummary in \_merge\_candidates
* Add a rw\_ctx.psum\_res\_by\_rp\_rc, for clarity
* Use rp.id instead of uuid in \_rp\_rc\_key
* Add rw\_ctx.parent\_uuid\_by\_rp\_uuid, for clarity
* Add gabbits using a DeepNUMANetworkFixture
* gabbi test for same\_subtree with an ancestry hole
* Add tests demonstrating overlapping same\_subtreeZ
* Fix allocation bug in NUMANetworkFixture
* Use expanding bindparam in get\_traits\_by\_provider\_tree
* Copy AllocationRequestResource only when necessary
* Add \_\_copy\_\_ method to AllocationRequest{,Resource}
* Correct SQL docstring on \_get\_usages\_by\_provider\_trees
* Use another expanding bindparam in \_get\_usages\_by\_provider\_trees
* Move provider\_ids\_from\_rp\_ids to allocation\_candidate and fix
* Optimize trait creation to check existence first
* Improve docs and comments for provider\_ids\_from\_rp\_ids
* Remove double join in provider\_ids\_from\_rp\_ids
* Clean up the extend\_usages\_by\_provider\_tree method
* Trivial: Remove duplicate usage of db context
* Use expanding bindparam in extend\_usages\_by\_provider\_tree
* Make \_get\_trees\_with\_traits return a set
* Track usage info on RequestWideSearchContext
* Further optimize \_build\_provider\_summaries
* Add RequestWideSearchContext.summaries\_by\_id
* Add apache benchmark (ab) to end of perfload jobs
* Implement a more complex nested-perfload topology
* Run nested-perfload parallel correctly
* Make placement base API return version without auth
* Use expanding bindparam in provider\_ids\_from\_rp\_ids in\_
* Use \_\_slots\_\_ in commonly used objects
* Remove ProviderIds namedtuple
* \_get\_all\_by\_filters\_from\_db do not cast to list of dict
* Bump os-traits minimum to 0.16.0
* Blacklist sphinx 2.1.0 (autodoc bug)
* Use TraitCache for Trait.get\_by\_name
* Extra gabbi tests for same\_subtree
* Use integrated-gate-placement zuul template
* Make a TraitCache similar to ResourceClassCache
* Further simplify microversion utils
* Update api-ref to point to API-SIG microversion spec
* Update api-ref location
* Run 'tempest-ipv6-only' job in gate
* Bump os-resource-classes requirements
* Extract a \_get\_schema from list\_allocation\_candidates
* Move rc\_cache onto RequestContext
* Make placement testing easier on osx
* Simplify placement.microversion:\_fully\_qualified\_name
* api-ref: Document generations
* Add placement.query.missing\_value in api-ref
* Add Python 3 Train unit tests
* Doc \`same\_subtree\` queryparam
* Add query.duplicate\_key and .bad\_value in api-ref
* Follow up fix for same\_subtree documentation
* Trivial: Fix docs for functions
* Support \`same\_subtree\` queryparam
* tox: Stop building api-ref docs with the main docs
* Add whereto for testing redirect rules
* Update implemented spec and spec document handling
* Correct variable use and naming in mappings tests
* Manage mappings on AllocationRequest object
* Recreate: incorrect mappings with group\_policy=none
* Fix up some inaccuracies in perfload comments and logs
* Spec: Support Consumer Types
* Bump os-traits minimum to 0.15.0
* Remove gate/post\_test\_hook.sh
* Centralize and clarify pip in the docs
* Mention OsProfiler in the testing doc
* Add OsProfiler config options to generated reference
* Trivial: Update document for Request IDs
* Add a test for granular member\_of not flowing down
* Miscellaneous doc/comment/log cleanups
* Microversion 1.35: root\_required
* RequestWideParams and RequestWideSearchContext
* Refactor anchors\_for\_sharing\_providers
* research\_context.\_get\_roots\_with\_traits()
* Spec for nested magic 1
* Add support for osprofiler in wsgi
* Move non-nested perfload shell commands to script
* Nested provider performance testing
* Update SUSE install documentation
* Remove overly-verbose allocation request log
* Uniquify allocation mappings
* Remove a redundant test
* Add missing suffix-related docstrings
* Implement allocation candidate mappings
* Prepare objects for allocation request mappings
* Remove incomplete consumer inline migrations
* Add a blocker migration for missing consumer records
* Correctly limit provider summaries when nested
* Add NUMANetworkFixture for gabbits
* Stabilize AllocationRequest hash
* perfload with written allocations
* Bump os-traits to latest release (0.14.0)
* Optionally run a wsgi profiler when asked
* Bump os-traits requirements
* Resource provider - request group mapping in allocation candidate
* Bump openstackdocstheme to 1.30.0
* Reuse cache result for sharing providers capacity
* Move seek providers with resource to context
* Remove normalize trait map func
* Cache provider ids in requested aggregates
* Move search functions to the research context file
* Add RequestGroupSearchContext class
* Modernize CORS config and setup
* Add olso.middleware.cors to conf generator
* Don't run functional.db tests in nova functional run
* Trivial: Fix comment for LEFT join
* Use trait strings in ProviderSummary objects
* Avoid traversing summaries in \_check\_traits\_for\_alloc\_request
* Canary test for os-traits version
* Fix typo in usage.yaml and usage-policy.yaml
* Bump os-resource-classes requirements
* Fixups from removing null provider protections
* Remove null root provider protections
* Add blocker alembic migration for null root\_provider\_ids
* Change "Missing Root Provider IDs" upgrade check to a failure
* Allow [a-zA-Z0-9\_-]{1,64} for request group suffix
* Add 'docs' worklist to worklist table
* Cap sphinx for py2 to match global requirements
* Enhance debug logging in allocation candidate handling
* Skip \_exclude\_nested\_providers() if not nested
* Raise os-traits os-resource-classes constraints
* Package db migration scripts in placement pypi dist
* Skip notification sample tests when running nova functional
* Run nova-tox-functional-py36 in the placement gate
* Update worklist information for contributors
* Remind people to use postgresql-migrate-db.sh when migrating data
* Replace git.openstack.org URLs with opendev.org URLs
* Dropping the py35 testing
* OpenDev Migration Patch
* Add links to storyboard worklists to contributing.rst
* api-ref: fix formatting in member\_of param for 1.21
* Fix arg typos in contributing.rst
* Remove dead code
* Correct task status when a task is under review
* Rename api-ref parameters
* FUP on negative-aggregate-membership series
* Fix a broken link in a release note
* Refactor aggregate \_get\_trees\_matching\_all()
* Refactor ResourceProviderListTestCase
* Negative member\_of query with microversion 1.32
* Prepare for negative member queryparam 2
* Fill in the Writing Code section of contributing.rst
* Fill in the New Features section of contributing.rst
* Fill in reviewing section of contributing.rst
* Fill in the bugs section of contributing.rst
* Fix debug log getting allocation\_candidates
* Remove fake resource class from fake\_ensure\_cache
* s/rc\_cache.ensure\_rc\_cache/rc\_cache.ensure/
* Add initial framing for a contributing doc
* Remove use of oslo.i18n and translation
* Replace openstack.org git:// URLs with https://
* Initial structure for in-tree specs
* Add register\_opts param to PlacementFixture
* Revert "Centralize registration of logging options"
* Update master for stable/stein

1.0.0.0rc1
----------

* Group API versions by release
* Flesh out the post-install verify doc
* Address followups in the upgrade from nova doc
* Fix bullet format from I580fa4394cb93b8e8141ee2d546543c174356a47
* Link to more info on service user and endpoints from deployment
* Add prelude to release notes
* Upgrade from rocky-nova docs
* Update the from-pypi install instructions
* Rename and restructure install docs
* Centralize registration of logging options
* Add oslo.log to genconfig
* Slightly improve usage documentation
* Update install docs for single database
* Spec: Support filtering by forbidden aggregates 2
* Spec: Support filtering by forbidden aggregates 1
* Reuse common get\_providers\_with\_resource()
* Prepare for negative member\_of queryparam
* Add link to case studies in alloc\_cands api-ref
* Document alloc-candidates-in-tree
* Get rid of backslash continuations in code
* Refactor tests of \_get\_trees\_matching\_all()
* Note removal of OVO in contrib docs
* Create ProviderTreeDBHelperTestCase
* Move TestAllocation into test\_allocation
* Extract user and endpoint creation install doc
* Remove unused table constants from allocation\_candiate.py
* Move set\_traits tests back to test\_resource\_provider
* Remove ResourceProviderList class
* Remove InventoryList class
* Move Inventory and InventoryList to own file
* Reorder classes and methods in allocation\_candidate
* Move allocation candidate classes and methods
* Remove the TraitList class
* Update get trait and traits calls that were writers to reader
* Move Trait and TraitList to own module
* Clean up the intro to the REST API section
* Clean up around links to database migrations scripts
* Indicate existince of \`sync\_on\_startup\` option
* Link to install docs from deployment overview
* Remove NAME in placement/deploy.py
* Make policy init more threadsafe
* Be explicit about which conf is being used by policy enforcer
* Rename global \_ENFORCER\_PLACEMENT to \_ENFORCER
* Update docs bug links to storyboard
* Update CONTRIBUTING and HACKING
* Remove extraction warning from README
* Update bug tracker link in README and CONTRIBUTING
* Add missing ws seperator between words
* Do not separately configure logging for alembic
* Use sync\_on\_startup in placement-perfload job
* Trivial: Update doc for \_set\_traits()
* Remove the ResourceClassList class
* Move ResourceClass and ResourceClassList to own module
* Trivial: pull \_normalize\_trait\_map() out
* Use oslo\_utils.excutils for reraise exception
* Add explicit short-circuit in get\_all\_by\_consumer\_id
* Stop yelling the 1.11 and 1.25 microversion history at people
* Remove pep8 whitespace ignores
* Fix typo in db-auto-sync release note
* Make the PlacementFixture usable without intercept
* Docs: extract testing info to own sub-page
* Inline Consumer.increment\_generation()
* Use native list for lists of Allocation
* Move Allocation and AllocationList to own module
* ResourceProvider.increment\_generation()
* Move reshape() into placement.objects.reshaper
* Make base test case file for object unit tests
* Use native list for lists of Usage
* Move RC\_CACHE in resource\_class\_cache
* Clean up ObjectList.\_set\_objects signature
* Move \*List.\_\_repr\_\_ into ObjectList
* Move \_set\_objects into ObjectList
* Factor listiness into an ObjectList base class
* Adds debug log in allocation candidates
* Refactor \_get\_trees\_matching\_all()
* Retry new transaction on failure
* FUPs for improve-debug-log series
* Remove NOTEs about \_RE\_INV\_IN\_USE
* Use set instead of list
* Remove redundant second cast to int
* Don't use OVO with ResourceProvider and ResourceProviderList
* Cast Usage.usage to int
* Test for multiple limit/group\_policy qparams
* Add second shared provider to SharedStorageFixture
* Optionally migrate database at service startup
* in\_tree[N] alloc\_cands with microversion 1.31
* Prepare in\_tree allocation candidates
* Fix a bad granular gabbi test
* Add DISK\_GB to compute in SharedStorageFixture
* Adds check for duplicate alloc\_cands
* Don't use OVO for Inventory and InventoryList
* Don't use OVO in Trait and TraitList objects
* Adds tests for granular single shared rp request
* Add a vision-reflection
* Set timestamps in Allocation objects
* Don't use OVO in ResourceClass and ResourceClassList
* Don't use OVO in User object
* Don't use OVO in Project object
* Don't use OVO in Consumer object
* Don't use OVO for Usage and UsageList
* Don't use OVO for Allocation and AllocationList
* Don't use OVO with allocation candidates
* Update the doc in \_get\_provider\_ids\_matching()
* Downgrade os-traits/os-resource-classes sync log level to DEBUG
* Use one ConfigOpts in placement-status
* Use tox 3.1.1 fixes
* tox: Don't write byte code (maybe)
* Trivial: return empty set instead of list
* Also time placeload when doing perfload
* Add upgrade status check for missing root ids
* Use local config for placement-status CLI
* Adjust database connection pool config in perfload tests
* Increase loop size on \_ensure\_aggregate
* Update standard resource class counts in tests
* Update placement-status-checks history
* Configure database api in upgrade check
* Add upgrade status check for incomplete consumers
* Copy create\_incomplete\_consumers online data migration from nova
* Set root\_provider\_id in the database
* Add online-data-migration DB commands
* Placement install documentation
* Add release-notes-jobs-python3 job
* Trim the release notes to just stein/master
* Add provider UUID to reshaper gen conflict error
* Add irrelevant-files for integrated-gate-py35 jobs
* Update the incorrect url

0.1.0
-----

* Correct link rest api history
* Use os-resource-classes in placement
* Document API error codes
* Add irrelevant files list to perfload job
* Add stamp DB version to the migration script
* Retry \_ensure\_aggregates a limited number of times
* Remove dead code in objects/resource\_provider.py
* Add python3.7 unit test job
* Remove writer context from \_ensure\_aggregates
* Fix a format of the API version history doc
* Don't create placement.conf in perfload.yaml
* Update author-email in setup.cfg
* Add alembic version stamp capability to the DB
* Use oslo\_db fixtures
* Update the goals doc to reflect non-global-config
* Use a smaller base job for the perfload run
* Add a perfload job
* Stop using global oslo\_config
* Allow placement to start without a config file
* Fix typo
* Remove [keystone] config options from placement
* Remove keystoneauth1 opts from placement config group
* Correct lower-constraints.txt and the related tox job
* Start a contributor goals document
* Add a doc describing a quick live environment
* Add integrated-gate-py35 template to .zuul.yaml
* Documentation cleanup: front page
* Add assertions to verify placement-manage error output
* manage: Do not use set\_defaults on parent parsers with py2
* Fix a bug tag for placement doc
* Add placement-status upgrade check command
* Consider root id is None in the database case
* Adapt placement fixtures for external use
* Add a placement-manage CLI
* Add missing ws seperator between words
* Remove sqlalchemy-migrate from requirements.txt
* Fix comment in earlier patch
* Add a document for creating DB revisions
* Remove build-openstack-api-ref jobs
* Delete the old migrations
* Added alembic environment
* Add recreate test for bug 1799892
* Harden placement init under wsgi
* Make tox -ereleasenotes work
* Clean up and clarify tox.ini
* Add bandwidth related standard resource classes
* Move ensure\_consumer to a new placement.handlers.util
* fix wrong spelling of "explicit"
* Fix the error package name in comment
* Add a link to "Add Generation to Consumers" spec
* Publish placement documents
* De-nova-ify doc/source/index.rst
* De-nova-ify doc/README.rst
* Clean up .gitignore file
* Fix genpolicy tox job
* Add nova database migration script for postgresql
* Use unique consumer\_id when doing online data migration
* Add recreate test for bug 1798163
* Remove support for multiple database from migration.py
* Remove redundant \`where\` for forbidden traits
* Placement: Remove usage of get\_legacy\_facade()
* Remove placement.db.migration
* Remove placement.db.base
* Follow up for placement usage document
* Fix member\_of doc in RequestGroup.dict\_from\_request
* wsgi: Always reset conf.CONF when starting the application
* Add nova database migration script
* Add a document for allcation candidates constraint
* Fix aggregate members in nested alloc candidates
* Add alloc cands test with nested and aggregates
* Fix missing specifying doctrees directory
* Fix link from root doc to contributor guide
* Reduce max-complexity to 15
* nova.exception -> placement.exception in docstrings and comment
* nova.context -> placement.context in doc strings
* Sort openstack\_projects in doc conf
* De-nova-ify and reformat contributor guide
* Refactor: separate limiting GET /a\_c results
* DRY trait/aggregate prefetch
* DRY trait existence check
* DRY usage and capacity SQL clauses
* max-complexity=>16: refactor GET /a\_c qs parsing
* Move qs parsing to placement.lib.RequestGroup
* Test for missing database configuration message
* Put stestr group\_regex in .stestr.conf
* Add a zuul check job for coverage
* Use both unit and functional for coverage testing
* oslo\_config fixture in policy tests and 'placement' in policy
* de-novify wsgi application to expect placement config
* Rationalize and clarify database configuration
* Update code and opts in conf/paths.py for placement
* Make config docs build
* s/placement-config-generator/config-generator/
* Link to tempest doc in tests/README.rst
* Set upper bound on max-complexity in pep8
* Update the HACKING.rst file
* Name arguments to \_get\_provider\_ids\_matching
* Remove unused conf opts
* Update and move test README.rst
* Set the name of the package to openstack-placement
* config: Add oslo-config-generator config
* Remove multiple database scaffolding
* Add logging\_error\_fixture to functional tests
* Update README to warn of status
* Refresh maximum version info in rest history doc
* Remove uuidsentinel.py
* Remove redundant reference to nova ConfFixture
* Rename files to remove 'placement'
* Add lower-constraints job
* Use templates in .zuul.yaml
* Make docs build
* Add api-ref job
* Rename PlacementPolicyFixture to PolicyFixture
* Unify utils.py and util.py
* Use uuidsentinel from oslo.utils
* Update requirements and test-requirements
* Fix aesthetic issues from I4974a28de541aace043504f
* Removing non-existent job from tox envlist
* Add python 3.6 test jobs
* Make pep8 tests voting
* Remove unused fixtures in placement/tests/fixtures.py
* Remove placement/db/api.py
* Fix line length and whitespace issues
* Remove unused imports as identified by pep8
* Fix alpha-ordering of imports for pep8
* Remove placement/test.py
* Make unit tests voting
* Turn on logging for the request log test
* Fix configuration handling in policy unit test
* Trim placement/utils.py to the single method used
* Make functional tests voting and gating
* Use absolute import in gabbi fixture
* Import placement, not nova, in rp db tests
* Make a basic working DatabaseFixture
* Establish an importable 'conf' package
* Tidy up use of policy\_fixture
* Remove unused CheatingSerializer
* Use placement.uuidsentinel
* Remove the PlacementFixture from fixtures
* Remove more unused imports from fixtures
* Remove unused db functionality and files
* Remove some imports from test/fixtures that will not be used
* Empty \_\_init\_\_.py files that should be empty
* Correct several nova.tests and nova.tests.functional imports
* Mechanically correct import of functional base class
* Update i18n handling to be placement oriented
* Inspect and correct tox.ini, .stestr.conf and setup.cfg
* Update nova.db import paths
* Replace the nova import paths with placement
* Remove the import pathing for the old structure
* Update the functional test import paths
* Move the unit tests
* Move the functional test directories
* Move the placement code to the base
* Remove the Nova aggregate files
* Move the api-ref directories
* Rename the 'nova' directories to 'placement'
* Apply placement.rst change from Idf8997d5efdfdfca6
* Fix race condition in reshaper handler
* Set up initial .zuul.yaml
* Removed the zuul config file
* (Re)start caching scheduler after starting computes in tests
* [placement] Make \_ensure\_aggregate context not independent
* Mention (unused) RP generation in POST /allocs/{c}
* reshaper gabbit: Nix comments re doubled max\_unit
* Revert "Don't use '\_TransactionContextManager.\_async'"
* Don't use '\_TransactionContextManager.\_async'
* Make monkey patch work in uWSGI mode
* [placement] split gigantor SQL query, add logging
* Make instance\_list perform per-cell batching
* Document no content on POST /reshaper 204
* Fix create\_resource\_provider docstring
* reshaper: Look up provider if not in inventories
* [placement] Add functional test to verify presence of policy
* Normalize dashless 'resource provider create' uuid
* [placement] Add /reshaper handler for POST
* [placement] Regex consts for placement schema
* Set policy\_opt defaults in placement deploy unit test
* Set policy\_opt defaults in placement gabbi fixture
* Remove ChanceScheduler
* Making consistent used of GiB and MiB in API ref
* placement: use single-shot INSERT/DELETE agg
* Add trait query to placement perf check
* Add explanatory prefix to post\_test\_perf output
* Remove blacklisted py3 xen tests
* Add placement perf info gathering hook to end of nova-next
* [placement] api-ref: Add missing aggregates example
* placement: use simple code paths when possible
* Test case for multiple forbidden traits
* Adds a test for \_get\_provider\_ids\_matching()
* placement: ignore policy scope check failures if not enforcing scope
* Remove patching the mock lib
* Add additional info to resource provider aggregates update API
* Nix 'new in 1.19' from 1.19 sections for rp aggs
* [placement] api-ref: add description for 1.29
* Add the guideline to write API reference
* get provider IDs once when building summaries
* [placement] Avoid rp.get\_by\_uuid in allocation\_candidates
* Add explicit functional-py36 tox target
* api-ref: fix min\_version for parent\_provider\_uuid in responses
* [placement] Add version directives in the history doc
* Use common functions in granular fixture
* Define irrelevant-files for tempest-full-py3 job
* Add tempest-slow job to run the tempest slow tests
* Not use project table for user table
* Adds a test for getting allocations API
* [placement] ensure\_rc\_cache only at start of process
* [placement] Move resource\_class\_cache into placement hierarchy
* [placement] Debug log per granular request group
* Fix nits in resource\_provider.py
* Scrub hw:cpu\_model from API samples
* Improve NeutronFixture and remove unncessary stubbing
* tox: Ensure reused envdirs share the same deps
* Fix a typo in comment in resource\_provider.py
* Refactor AllocationFixture in placement test
* Increase max\_unit in placement test fixture
* Use common functions in NonSharedStorageFixture
* Fix comments in \_anchors\_for\_sharing\_providers and related test
* Ensure the order of AllocationRequestResources
* Don't poison Host.\_init\_events if it's already mocked
* Remove redundant join in \_anchors\_for\_sharing\_providers
* [placement] Retry allocation writes server side
* [placement] api-ref: add traits parameter
* [placement] Use a simplified WarningsFixture
* [placement] Use a non-nova log capture fixture
* [placement] Use oslotest CaptureOutput fixture
* [placement] Use own set\_middleware\_defaults
* Add additional functional tests for NUMA networks
* Add description for placement 1.26
* Fix create\_all() to replace\_all() in comments
* [placement] Use base test in placement functional tests
* [placement] Extract base functional test case from test\_direct
* Use placement context in placement functional tests
* doc: remove rocky-specific nova-scheduler min placement version
* Add nova-manage placement sync\_aggregates
* Add functional tests for numa-aware-vswitches
* tox: Silence psycopg2 warnings
* Blacklist greenlet 0.4.14
* Enhance doc to guide user to use nova user
* doc: link to AZ talk from the Rocky summit
* Online data migration for queued\_for\_delete flag
* Rename auth\_uri to www\_authenticate\_uri
* perform reshaper operations in single transaction
* In Python3.7 async is a keyword [1]
* [placement] disallow additional fields in allocations
* [placement] cover bad content-length header
* [placement] Add gabbi coverage for inv of missing rp
* [placement] Add gabbi coverage for an inventory change
* update tox venv env to install all requirements
* Escalate UUID validation warning to error in test
* Move legacy-tempest-dsvm-nova-os-vif in repo
* Use ThreadPoolExecutor for max\_concurrent\_live\_migrations
* Replace support matrix ext with common library
* Add UUID validation for consumer\_uuid
* Address nits in server group policy series
* z/VM Driver: Initial change set of z/VM driver
* Transform aggregate.update\_prop notification
* do not assume 1 consumer in AllocList.delete\_all()
* Add policy to InstanceGroup object
* Add placement.concurrent\_udpate to generation pre-checks
* Test for unsanitized consumer UUID
* Revert "docs: Disable smartquotes"
* [placement] add error.code on a ConcurrentUpdateDetected
* Update some placement docs to reflect modern times
* Remove unused variable in migration
* Address nits from consumer generation
* update project/user for consumer in allocation
* Use nova.db.api directly
* Update root providers in same tree
* Add queued for delete to instance\_mappings table
* placement: delete auto-created consumers on fail
* delete consumers which no longer have allocations
* make incomplete\_consumer\_project\_id a valid UUID
* Refactor policies to policy in InstanceGroup DB model
* Add rules column to instance\_group\_policy table
* Handle compare in test\_pre\_live\_migration\_volume\_backed\* directly
* Resource\_provider API handler does not return specific error codes
* Use valid UUID in the placement gabbits
* Update install guide for placement database configuration
* move lookup of provider from \_new\_allocations()
* Prevent updating an RP's parent to form a loop
* Handle nested serialized json entries in assertJsonEqual
* conf: Resolve Sphinx errors
* Convert 'placement\_api\_docs' into a Sphinx extension
* Regression test for bug 1779635
* Regression test for bug 1779818
* [placement] fix allocation handler docstring typo
* Fix placement incompatible with webob 1.7
* Define common variables for irrelevant-files
* Fix nits in placement-return-all-resources series
* Add microversion for nested allocation candidate
* Use ironic-tempest-dsvm-ipa-wholedisk-bios-agent\_ipmitool-tinyipa in tree
* tox: Reuse envdirs
* tox: Document and dedupe mostly everything
* trivial: Remove 'tools/releasenotes\_tox.sh'
* Make nova-lvm run in check on libvirt changes and compute API tests
* Remove remaining legacy DB API instance\_group\* methods
* Remove unused DB API instance\_group\_member\* methods
* Remove unused DB API instance\_group\_delete method
* [placement] demonstrate part of bug 1778591 with a gabbi test
* Handle CannotDeleteParentResourceProvider to 409 Conflict
* [placement] Fix capacity tracking in POST /allocations
* Update scheduler to use image-traits
* [placement] Add test demonstrating bug 1778743
* Fix the duplicated config options of api\_database and placement\_database
* network: Rename 'create\_pci\_requests\_for\_sriov\_ports'
* [placement] Demonstrate bug in consumer generation handling
* Test alloc\_cands with indirectly sharing RPs
* Switch to oslo\_messaging.ConfFixture.transport\_url
* Adapter raise\_exc=False by default
* Bump keystoneauth1 minimum to 3.9.0
* conf: Deprecate 'network\_manager'
* [placement] Extract create\_allocation\_list
* placement: s/None/null/ in consumer conflict msg
* Cleanup nits in placement database changes
* Fix nits from change Id609789ef6b4a4c745550cde80dd49cabe03869a
* Add a microversion for consumer generation support
* Ensure that os-traits sync is attempted only at start of process
* Isolate placement database config
* Optimize member\_of check for nested providers
* Clarify placement DB schema migration
* Nix unused raise\_if\_custom\_resource\_class\_pre\_v1\_1
* placement: Make API history doc more consistent
* Return all nested providers in tree
* Add osprofiler config options to generated reference
* Fix retrying lower bound in requirements.txt
* Optional separate database for placement API
* Add certificate validation docs
* [placement] Add status and links fields to version document at /
* rework allocation handler \_allocations\_dict()
* placement: Allocation.consumer field
* Ignore UserWarning for scope checks during test runs
* [placement] replace deprecated accept.best\_match
* Update nova-status & docs: require placement 1.25
* XenAPI: define a new image handler to use vdi streaming
* add consumers generation field
* Provide a direct interface to placement
* libvirt: Don't report DISK\_GB if sharing
* Remove nova dependencies from test\_resource\_provider
* Adjust db using allocation unit tests
* Move db using provider unit tests to functional
* Use oslo.messaging per-call monitoring
* placement: always create consumer records
* Extract part of PlacementFixture to placement
* fix tox python3 overrides
* Change consecutive build failure limit to a weigher
* Do not use nova.test in placement.test\_deploy
* Do not use nova.test in placement.test\_microversion
* Do not use nova.test in placement.test\_handler
* Do not use nova.test in placement.test\_fault\_wrap
* Do not use nova.test in placement.test\_requestlog
* Do not use nova.test in placement.handlers.test\_aggregate
* Do not use nova.test in placement.test\_util
* Ensure resource class cache when listing usages
* api-ref: mention that you can't re-parent a resource provider
* Re-base placement object unit tests on NoDBTestCase
* [placement] Do not import oslo\_service for log\_options
* Fix some inconsistencies in doc
* Add nova-manage placement heal\_allocations CLI
* mirror nova host aggregate members to placement
* Set scope for remaining placement policy rules
* Update overriden to overridden
* Adding NVMEoF for libvirt driver
* Fix doc mistakes
* Remove unused function
* Fix nits in nested provider allocation candidates(2)
* Fix the file name of development-environment.rst
* Return all resources in provider\_summaries
* placement: Use INNER JOIN for requied traits
* Delete duplicate functions in placement test
* Use list instead of set for duplicate check
* Support nested alloc cands with sharing providers
* Fix nits in nested provider allocation candidates
* Follow up changes to granular placement policy reviews
* Add granular policy rules for allocation candidates
* Add granular policy rules for placement allocations
* Add granular policy rules for traits in placement
* Add granular placement policy rules for aggregates
* Add granular policy rules for usages
* Honor availability\_zone hint via placement
* Add traits check in nested provider candidates
* Return nested providers in get\_by\_request
* Expand tests for multiple shared resources case
* Update placement upgrade docs for nova-api dependency on placement
* Placement: allow to set reserved value equal to total for inventory
* Update nova-status and docs for required placement 1.24
* Expose instance\_get\_all\_uuids\_by\_host() from DB API and use it
* Update the deprecate os\_region\_name option
* Fix inconsistency in docs
* Add granular policy rules for resource providers inventories
* Add granular policy rules for /resource\_classes\*
* Implement granular policy rules for placement
* Deduplicate config/policy reference docs from main index
* Remove deprecated monkey\_patch config options
* Debug logs for allocation\_candidates filters
* Cleanup ugly stub in TestLocalDeleteAllocations
* Add retrying to requirements.txt
* [placement] default to accept of application/json when \*/\*
* We don't need utils.trycmd any more
* Move image conversion to privsep
* Add INVENTORY\_INUSE to DELETE /rp/{u}/inventories
* placement: Fix HTTP error generation
* \_\_str\_\_ methods for RequestGroup, ResourceRequest
* add lower-constraints job
* Flexibly test keystonmiddleware in placement stack
* Fix irrelevant-files in nova-dsvm-multinode-base
* Add connection\_parameters to list of items copied from database
* update scheduler to use image-traits
* Remove support for /os-fping REST API
* Address feedback from instance\_list smart-cell behavior
* Remove remaning log translation in scheduler
* Make get\_instance\_objects\_sorted() be smart about cells
* Followup for multiple member\_of qparams support
* Add tests for alloc cands with poor local disk
* placement: Granular GET /allocation\_candidates
* Migrate tempest-dsvm-multinode-live-migration job in-tree
* Fix typos in Host aggregates documentation
* placement: Object changes for granular
* Use helpers in test\_resource\_provider (func)
* Use test\_base symbols directly
* Base test module/class for functional placement db
* Deprecate the nova-consoleauth service
* Remove [scheduler]/host\_manager config option
* doc: Start using openstackdoctheme's extlink extension
* support multiple member\_of qparams
* [doc]remove nova-cert leftover in doc
* Fix the request context in ServiceFixture
* Get anchors for sharing providers
* Remove IronicHostManager and baremetal scheduling options
* Remove stale pip-missing-reqs tox test
* Make service all-cells min version helper use scatter-gather
* placement: resource requests for nested providers
* Handle deprecation of inspect.getargspec
* Bump pypowervm minimum to 1.1.15
* Address issues raised in adding member\_of to GET /a-c
* xenapi: Documents update for XAPI pool shared SR migration
* Remove deprecated [placement] opts
* Fix link in placement contributor doc
* Update docs for [keystone\_authtoken] changes since Queens
* Add root and parent provider uuid to group by clause
* Improve check capacity sql
* tests for alloc candidates with nested and traits
* Address nits in I00d29e9fd80e6b8f7ba3bbd8e82dde9d4cb1522f
* Extract generate\_hostid method into utils.py
* Provide framework for setting placement error codes
* [placement] Support forbidden traits in API
* [placement] Filter allocation candidates by forbidden traits in db
* [placement] Filter resource providers by forbidden traits in db
* [placement] Parse forbidden traits in query strings
* Use Queens UCA for nova-multiattach job
* Remove the branch specifier from the nova-multiattach job
* Make the nova-multiattach job non-voting temporarily
* uncap eventlet in nova
* Make ResourceClass.normalize\_name handle sharp S
* PowerVM: Add proc\_units\_factor conf option
* Move test\_report\_client out of placement namespace
* doc: add a link in the install guides about configuring neutron
* [placement] Fix incorrect exception import
* update\_provider\_tree devref and docstring updates
* Support extending attached ScaleIO volumes
* Transform aggregate.update\_metadata notification
* Default to py3 for the pep8 tox env because it's stricter
* Remove a outdated warning
* [placement] api-ref: Fix parameters
* Add tests for \_get\_trees\_matching\_all() function
* Move pypowervm requirement to 1.1.12
* Use an independent transaction for \_trait\_sync
* Test case: traits don't sync if first access fails
* Expand member\_of functional test cases
* Fix member\_of with sharing providers
* Add tests for alloc\_cands with member\_of
* Make generation optional in ProviderTree
* SchedulerReportClient.update\_from\_provider\_tree
* Complement tests in allocation candidates
* trivial: Fix nits in code comments
* [placement] Add test for provider summaries
* Remove unnecessary code encoding specification
* [placement] Add to contributor docs about handler testing
* Add trusted\_certs to instance\_extra
* Documentation for tenant isolation with placement
* [placement] Fix bad management of \_TRAITS\_SYNCED flag
* Add require\_tenant\_aggregate request filter
* Add AggregateList.get\_by\_metadata() query method
* Add an index on aggregate\_metadata.value
* tox: Make everything work with Python 3
* Fix spelling mistake of HTTPNotFound exception
* tests: fixes mock autospec usage
* Fix allocation\_candidates not to ignore shared RPs
* remove unnecessary short cut in placement
* Fix comments in get\_all\_with\_shared()
* tox: Remove unnecessary configuration
* tox: Fix indentation
* Updated from global requirements
* Docs: modernise links
* Updated from global requirements
* Use microversion parse 0.2.1
* Updated from global requirements
* Move placement test cases from db to placement
* Remove translate and a TODO
* Add more functional test for placement.usage
* deprecate fping\_path config option
* Add disabled field to CellMapping object
* Move placement exceptions into the placement package
* Add disabled column to cell\_mappings table
* Add placeholder migrations for Queens backports
* Updated from global requirements
* conf: Remove 'db\_driver' config opt
* Add 'member\_of' param to GET /allocation\_candidates
* Follow the new PTI for document build
* docs: Disable smartquotes
* Updated from global requirements
* placement: Return new provider from POST /rps
* placement: generation in provider aggregate APIs
* Update contributor/placement.rst to contemporary reality
* Updated from global requirements
* Reparent placement objects to oslo\_versionedobjects
* Move resource provider objects into placement hierarchy
* Move resource class fields
* Updated from global requirements
* New-style \_set\_inventory\_for\_provider
* conf: Fix indentation of database options
* conf: Remove deprecated 'allow\_instance\_snapshots' opt
* Updated from global requirements
* Make nova build reproducible
* Migrate tempest-dsvm-cells job to an in-tree job definition
* Make nova-manage db purge take --all-cells
* conf: Remove 'nova.crypto' opts
* ca: Remove 'nova/CA' directory
* Add simple db purge command
* Run post-test archive against cell1
* Removed unnecessary parantheses in yield statements
* Refactor WSGI apps and utils to limit imports
* Add more functional test for placement.aggregates
* Updated from global requirements
* Make the nova-next job voting and gating
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Move db MAX constants to own file
* [placement] use simple FaultWrapper
* Move makefs to privsep
* Remove unused LOG variables
* Add check for redundant import aliases
* Check for leaked server resource allocations in post\_test\_hook
* rp: GET /resource\_providers?required=<traits>
* Clarify \`resources\` query param for /r\_p and /a\_c
* [placement] api-ref: Fix a missing response code
* [placement] Add functional tests for traits API
* Updated from global requirements
* Remove single quotes from posargs on stestr run commands
* Only pull associated \*sharing\* providers
* Add a nova-caching-scheduler job to the experimental queue
* api-ref: Further clarify placement aggregates
* Add functional tests to ensure BDM removal on delete
* Drop extra loop which modifies Cinder volume status
* Remove deprecated aggregate DB compatibility
* Remove old flavor\_create db api method
* Remove old flavor\_get\_all db api method
* Remove old flavor\_get db api method
* Remove old flavor\_get\_by\_name db api method
* Remove old flavor\_get\_by\_flavor\_id db api method
* Remove old flavor\_destroy db api method
* Remove old flavor\_access\_get\_by\_flavor\_id db api method
* Test websocketproxy with TLS in the nova-next job
* Updated from global requirements
* install-guide: Wrap long console command
* install-guide: Make formatting of console consistent
* Clarify the help text for [scheduler]periodic\_task\_interval
* Move the nova-next job in-tree and update it
* [placement] annotate loadapp as public interface
* doc: merge numa.rst to cpu-topologies.rst
* [placement] Add sending global request ID in get
* [placement] Add sending global request ID in put (3)
* Ensure resource classes correctly
* [placement] Move body examples to an isolated directory
* Bindep does not catch missing libpcre3-dev on Ubuntu
* Remove a duplicate colon
* fix link
* Address comments from I51adbbdf13711e463b4d25c2ffd4a3123cd65675
* Test case: new standard resource class unusable
* placement doc: Conflict caveat for DELETE APIs
* [placement] Add sending global request ID in put (1)
* [placement] Add sending global request ID in post
* Zuul: Remove project name
* Doc: Nix os-traits link from POST resource\_classes
* Reset the \_RC\_CACHE between tests
* doc: placement upgrade notes for queens
* Add functional tests for traits-based scheduling
* Migrate "launch instance" user guide docs
* doc: mark the max microversions for queens
* Updated from global requirements
* Remove old flavor\_access\_add db api methods
* Remove old flavor\_access\_remove db api method
* Remove old flavor\_extra\_specs\_get db api method
* Remove old flavor\_extra\_specs\_delete db api method
* Remove old flavor\_access\_get\_by\_flavor\_id db api method
* Fix nits in support traits changes
* Log options at debug when starting API services under wsgi
* set\_{aggregates|traits}\_for\_provider: tolerate set
* ProviderTree.get\_provider\_uuids: Top-down ordering
* SchedulerReportClient.\_delete\_provider
* report client: get\_provider\_tree\_and\_ensure\_root
* [Placement] Invalid query parameter could lead to HTTP 500
* Use util.validate\_query\_params in list\_traits
* Add functional tests for virt driver get\_traits() method
* Implement get\_traits() for the ironic virt driver
* [placement] Separate API schemas (resource\_provider)
* Fix invalid UUIDs in remaining tests
* Add the nova-multiattach job
* api-ref: provide more detail on what a provider aggregate is
* Updated from global requirements
* Bumping functional test job timeouts
* Reduce policy deprecation warnings in test runs
* Fix SUSE Install Guide: Placement port
* Fix missing marker functions
* Handle TZ change in iso8601 >=0.1.12
* Updated from global requirements
* Fix nits in allocation candidate limit handling
* [api] Allow multi-attach in compute api
* placement: support traits in allocation candidates API
* [placement] Add sending global request ID in delete (3)
* Fix 500 in test\_resize\_server\_negative\_invalid\_state
* Generalize DB conf group copying
* Updated from global requirements
* Cleanup redundant want\_version assignment
* trivial: Remove crud from 'conf.py'
* Fix openstackdocstheme options for api-ref
* Updated from global requirements
* [placement] Add functional tests for resource class API
* correct referenced url in comments
* Deduplicate aggregate notification samples
* Make sure that functional test triggered on sample changes
* Add taskflow to requirements
* Updated from global requirements
* Enable py36 unit tests in tox
* Transform rescue/unrescue instance notifications
* Track provider traits in report client
* Update links in documents
* [placement] Add sending global request ID in delete (2)
* Add cross cell sort support for get\_migrations
* Add reference to policy sample
* Updated from global requirements
* Qualify the Placement 1.15 release note
* Add migration db and object pagination support
* Fix OpenStack capitalization
* Optionalize instance\_uuid in console\_auth\_token\_get\_valid()
* Use method validate\_integer from oslo.utils
* Use volume shared\_targets to lock during attach/detach
* zuul: Move legacy jobs to project
* Move aggregates from report client to ProviderTree
* setup.cfg: Explicitly set [build\_sphinx] builder
* [placement] Add sending global request ID in delete
* Updated from global requirements
* Add retry\_on\_deadlock decorator to action\_event\_start
* [placement] Enable limiting GET /allocation\_candidates
* Provide example for placement last-modified header of now
* Remove extensions module
* Updated from global requirements
* [placement] Add x-openstack-request-id in API ref
* [placement] Separate API schemas (allocation\_candidate)
* [placement] Separate API schemas (allocation)
* Add uuid column to BlockDeviceMapping
* [placement] Separate API schemas (resource\_class)
* Updated from global requirements
* Make request\_spec.spec MediumText
* SchedulerReportClient.\_get\_providers\_in\_aggregates
* [placement] Separate API schemas (inventory)
* [placement] Separate API schemas (aggregate)
* [placement] Separate API schemas (trait)
* [placement] Separate API schemas (usage)
* Pass mountpoint to volume attachment\_create with connector
* Pass mountpoint to volume attachment\_update
* Update nova-status and docs for nova-compute requiring placement 1.14
* [placement] Add info about last-modified to contrib docs
* [placement] Add cache headers to placement api requests
* placement: skip authentication on root URI
* Add instance action db and obj pagination support
* Update Instance action's updated\_at when action event updated
* [placement] Fix API reference for microversion 1.14
* Follow up on removing old-style quotas code
* Add API and nova-manage tests that use the NoopQuotaDriver
* [placement] add name to resource provider create error
* [placement] Add 'Location' parameters in API ref
* Implement new attach Cinder flow
* SchedulerReportClient.\_get\_providers\_in\_tree
* Updated from global requirements
* Deprecate configurable Hide Server Address Feature
* placement: adds REST API for nested providers
* archive\_deleted\_instances is not atomic for insert/delete
* Updated from global requirements
* Fix wrong argument order in functional test
* [placement] Fix an error message in API validation
* [placement] Add aggregate link note in API ref
* Add regression test for rebuilding a volume-backed server
* Updated from global requirements
* Add description for resource class creation
* [placement] re-use existing conf with auth token middleware
* Use ksa adapter for keystone conf & requests
* [placement]Enhance doc for placement allocation list
* Refactor placement version check
* Remove old-style quotas code
* [placement] Fix format in placement API ref
* qemu-img do not use cache=none if no O\_DIRECT support
* Updated from global requirements
* Updated from global requirements
* placement: add nested resource providers
* Deprecate the IronicHostManager
* Remove deprecated TrustedFilter
* [placement] Fix GET PUT /allocations nits
* [placement] POST /allocations to set allocations for >1 consumers
* Refined fix for validating image on rebuild
* Fix the format file name
* Updated from global requirements
* Finish stestr migration
* [placement] Add 'CUSTOM\_' prefix description in API ref
* [placement] Fix parameter order in placement API ref
* Don't overwrite binding-profile
* Update bindep.txt for doc builds
* [placement] Symmetric GET and PUT /allocations/{consumer\_uuid}
* Service token is not experimental
* Get auth from context for glance endpoint
* vgpu: add enabled white list
* cleanup mapping/reqspec after archive instance
* Update document related to host aggregate
* Add migration\_get\_by\_uuid in db api
* placement: Document request headers in api-ref
* placement: Document \`in:\` prefix for ?member\_of=
* Updated from global requirements
* Fix docstring for GET /os-migrations and related DB API
* doc: fix link to creating unit tests in contributor guide
* placement: AllocCands.get\_by\_{filters => requests}
* Updated from global requirements
* Revert "Don't overwrite binding-profile"
* Don't overwrite binding-profile
* [placement] set accept to application/json if accept not set
* [placement] Fix a wrong redirection in placement doc
* Add Flavor.description attribute
* Updated from global requirements
* placement: Parse granular resources & traits
* RequestGroup class for placement & consumers
* conf: Validate '[api] vendordata\_providers' options
* conf: Remove 'vendordata\_driver' opt
* Fix warning on {'cell\_id': 1} is an invalid UUID
* placement: Contributor doc microversion checklist
* [placement] avoid case issues microversions in gabbits
* add whereto for testing redirect rules
* Use ksa adapter for placement conf & requests
* Update placement api-ref: allocations link in 1.11
* rp: Remove RP.get\_traits() method
* conf: Move additional nova-net opts to 'network'
* trivial: Rename 'policy\_check' -> 'policy'
* test: Store the OutputStreamCapture fixture
* Move project\_id and user\_id to Allocation object
* VGPU: Define vgpu resource class
* Import user-data page from openstack-manuals
* Import the config drive docs from openstack-manuals
* Move the idmapshift binary into privsep
* Include /resource\_providers/uuid/allocations link
* Remove duplicate error info
* [placement] Clean up TODOs in allocations.yaml gabbit
* Move restart\_compute\_service to a common place
* [placement] Confirm that empty resources query causes 400
* [placement] add coverage for update of standard resource class
* Add 'done' to migration\_get\_in\_progress\_by\_host\_and\_node filter
* rp: fix up AllocList.get\_by\_resource\_provider\_uuid
* rp: streamline InventoryList.get\_all\_by\_rp\_uuid()
* Nix bug msg from ConfGroupForServiceTypeNotFound
* Updated from global requirements
* Fix minor input items from previous patches
* nova.utils.get\_ksa\_adapter()
* Fix instance\_get\_by\_sort\_filters() for multiple sort keys
* Make setenv consistent for unit, func, and api-samples
* Remove doc todo related to bug/1506667
* [placement] gabbi tests for shared custom resource class
* Fix CellDatabases fixture swallowing exceptions
* Ensure instance can migrate when launched concurrently
* [placement] Update the placement deployment instructions
* Do not monkey patch eventlet in unit tests
* Support qemu >= 2.10
* doc: make host aggregates examples more discoverable
* Add slowest command to tox.ini
* Make TestRPC inherit from the base nova TestCase
* Live Migration sequence diagram
* Deprecate idle\_timeout in api\_database
* cleanup test-requirements
* Add 400 as error code for resource class delete
* fix nova accepting invalid availability zone name with ':'
* Remove useless periodic task that expires quota reservations
* docs: Rename cellsv2\_layout -> cellsv2-layout
* Updated from global requirements
* Add default configuration files to data\_files
* Add fault-filling into instance\_get\_all\_by\_filters\_sort()
* Add db.instance\_get\_by\_sort\_filters()
* Add instance.interface\_attach notification
* Updated from global requirements
* doc: Split flavors docs into admin and user guides
* Enable custom certificates for keystone communication
* Move the dac\_admin privsep code to a new location
* Updated from global requirements
* doc: rename the Indices and Tables section
* [placement] Unregister the ResourceProvider object
* [placement] Unregister the ResourceProviderList object
* [placement] Unregister the Inventory object
* [placement] Unregister the InventoryList object
* [placement] Unregister the Allocation object
* [placement] Unregister the AllocationList object
* [placement] Unregister the UsageList object
* [placement] Unregister the ResourceClass object
* [placement] Unregister the ResourceClassList object
* [placement] Unregister the Trait object
* [placement] Unregister the TraitList object
* Add single quotes for posargs on jobs
* Target context when setting instance to ERROR when over quota
* Cleanup running of osprofiler tests
* Fix test runner config issues with os-testr 1.0.0
* Fix missed chown call
* Updated from global requirements
* Revert "Revert "Fix AZ related API docs""
* Revert "Fix AZ related API docs"
* [placement] correct error on bad resource class in allocation
* api-ref: note the microversions for GET /resource\_providers query params
* Fix AZ related API docs
* Transform aggregate.remove\_host notification
* Transform aggregate.add\_host notification
* Typo error about help resource\_classes.inc
* Set regex flag on ostestr command for osprofiler tests
* Fix broken URLs
* Allow setting up multiple cells in the base TestCase
* First attempt at adding a privsep user to nova itself
* doc: Add configuration index page
* doc: Add user index page
* Remove usage of kwarg retry\_on\_request in API
* Updated from global requirements
* conf: Rename two VNC options
* doc: link to versioned notification samples from main index
* doc: link to placement api-ref and history docs from main index
* [placement] Update user doc with api-ref link
* [placement] api-ref GET /traits name:startswith
* [placement] Require at least one resource class in allocation
* Updated from global requirements
* [placement] Add test for empty resources in allocation
* Add uuid online migration for migrations
* Add placeholder migrations for Pike backports
* Deprecate CONF.monkey\_patch
* Monkey patch the blockdiag extension
* docs: Document the scheduler workflow
* Updated from global requirements
* trivial: Remove some single use function from utils
* doc: Address review comments for main index
* trivial: Remove dead function, variable
* Updated from global requirements
* Resource tracker compatibility with Ocata and Pike
* [placement] Make placement\_api\_docs.py failing
* [placement] Add api-ref for allocation\_candidates
* [placement] Add api-ref for RP usages
* [placement] Add api-ref for usages
* Add documentation for documentation contributions
* doc: Import configuration reference
* update policy UT fixtures
* rework index intro to describe nova
* doc: provide more details on scheduling with placement
* Add For Operators section to front page
* Create For End Users index section
* Create reference subpage
* Fix all >= 2 hit 404s
* [placement] Add api-ref for RP allocations
* Updated from global requirements
* Add Contributor Guide section page
* Update install guide to clearly define between package installs
* doc: Import administration guide
* doc: Import installation guide
* doc: Start using oslo\_policy.sphinxext
* doc: Start using oslo\_config.sphinxext
* doc: Rework README to reflect new doc URLs
* fix list rendering in aggregates
* [placement] Avoid error log on 405 response
* sort redirectmatch lines
* add top 404 redirect
* [placement] Require at least one allocation when PUT
* Add redirect for api-microversion-history doc
* Fix 409 handling in report client when deleting inventory
* add redirects for existing broken docs urls
* Add some more cellsv2 doc goodness
* Test resize with placement api
* Updated from global requirements
* do not pass proxy env variables by tox
* Add description on maximum placement API version
* Updated from global requirements
* Updated from global requirements
* add a redirect for the old cells landing page
* Remove unnecessary code
* Fix example in \_serialize\_allocations\_for\_consumer
* deprecate \`\`wsgi\_log\_format\`\` config variable
* Updated from global requirements
* Improve assertJsonEqual error reporting
* Move the last\_bytes util method to libvirt
* Use wsgi-intercept in OSAPIFixture
* Suppress some test warnings
* [placement] Use wsgi\_intercept in PlacementFixture
* [placement] Flush RC\_CACHE after each gabbit sequence
* Updated from global requirements
* Using plain routes for the microversions test
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* doc: Switch to openstackdocstheme
* Remove the unittest for plugin framework
* Use plain routes list for versions instead of stevedore
* Removed unused 'wrap' property
* Remove check\_detach
* Remove improper LOG.exception() calls in placement
* Updated from global requirements
* Fix and optimize external\_events for multiple cells
* Updated from global requirements
* Update URL home-page in documents according to document migration
* Consider instance flavor resource overrides in allocations
* Use plain routes list for extension\_info instead of stevedore
* Use plain routes list for os-snapshots instead of stevedore
* doc: Populate the 'user' section
* doc: Populate the 'reference' section
* doc: Populate the 'contributor' section
* doc: Populate the 'configuration' section
* [placement] Add api-ref for allocations
* [placement] Add api-ref for RP traits
* [placement] Add api-ref for traits
* Remove translation of log messages
* Consistent policies
* [placement] fix 500 error when allocating to bad class
* [placement] Update allocation-candidates.yaml for gabbi 1.35
* [placement] cover deleting a custom resource class in use
* [placement] cover deleting standard trait
* Updated from global requirements
* Updated from global requirements
* Remove 'create\_rule\_default'
* doc: Populate the 'cli' section
* Add BDM to InstancePayload
* doc: Enable pep8 on doc generation code
* doc: Remove dead plugin
* Use plain routes list for os-baremetal-nodes endpoint instead of stevedore
* Use plain routes list for os-security-group-default-rules instead of stevedore
* Use plain routes list for os-security-group-rules instead of stevedore
* Use plain routes list for image-metadata instead of stevedore
* Use plain routes list for images instead of stevedore
* doc: Use consistent author, section for man pages
* Use plain routes list for os-networks instead of stevedore
* doc: Remove cruft from conf.py
* Fix a missing classifier
* Trivial: Remove unnecessary format specifier
* Updated from global requirements
* [placement] Improve allocation\_candidates coverage
* Reset the traits sync flag in the placement fixtures
* Use plain routes list for os-cells endpoint instead of stevedore
* placement: support GET /allocation\_candidates
* Updated from global requirements
* Add scatter gather utilities for cells
* Handle version for PUT and POST in PlacementFixture
* Add a reset for traits DB sync
* Updated from global requirements
* Add python 3.5 in classifier
* return 400 Bad Request when empty string resources
* Add missing microversion documentation
* Remove translation of log messages
* placement: separate normalize\_resources\_qs\_param
* Updated from global requirements
* Count floating ips to check quota
* Count networks to check quota
* Use plain routes list for os-remote-consoles instead of stevedore
* Remove multiple create from stevedore
* Use plain routes list for os-tenant-networks instead of stevedore
* Use plain routes list for os-cloudpipe endpoint instead of stevedore
* Use plain routes list for os-quota-classes endpoint instead of stevedore
* placement: Add GET /usages to placement API
* placement project\_id, user\_id in PUT /allocations
* Updated from global requirements
* Only auto-disable new nova-compute services
* Updated from global requirements
* Use plain routes list for os-server-groups endpoint instead of stevedore
* Use plain routes list for user\_data instead of stevedore
* Use plain routes list for block\_device\_mapping instead of stevedore
* Use plain routes list for os-consoles, os-console-auth-tokens endpoint instead of stevedore
* [placement] Increase test coverage
* [placement] Add api-ref for aggregates
* [placement] Use util.extract\_json in allocations handler
* [placement] Disambiguate resource provider conflict message
* Remove \*\*kwargs passing in payload \_\_init\_\_
* Fix html\_last\_updated\_fmt for Python3
* Remove unused CONF import from placement/auth.py
* Add service\_token for nova-glance interaction
* Adopts keystoneauth with glance client
* placement: use separate tables for projects/users
* Use plain routes list for os-services endpoint instead of stevedore
* use plain routes list for os-virtual-interfaces
* use plain routes list for hypervisor endpoint instead of stevedore
* Use plain routes list for os-fping endpoint
* Use plain routes list for hosts endpoint instead of stevedore
* Use plain routes list for instance actions endpoint
* Use plain routes list for server ips endpoint
* Revert "Remove Babel from requirements.txt"
* Remove Babel from requirements.txt
* Sync os-traits to Traits database table
* Replace messaging.get\_transport with get\_rpc\_transport
* Updated from global requirements
* [placement] Add api-ref for resource classes
* Updated from global requirements
* placement: Specific error for inventory in use
* Updated from global requirements
* Add database migration and model for consumers
* add new test fixture flavor with extra\_specs
* Updated from global requirements
* Use plain routes list for server diagnostics endpoint
* Use plain routes list for os-server-external-events endpoint
* Use plain routes list for server-migrations endpoint instead of stevedore
* Use plain routes list for server-tags instead of stevedore
* Use plain routes list for os-interface endpoint instead of stevedore
* Updated from global requirements
* [placement] adjust resource provider links by microversion
* [placement] Add api-ref for DELETE resource provider
* [placement] Add api-ref for PUT resource provider
* [placement] Add api-ref for GET resource provider
* [placement] Add api-ref for POST resource provider
* [placement] Add api-ref for DELETE RP inventory
* [placement] Add api-ref for PUT RP inventory
* [placement] Add api-ref for GET RP inventory
* [placement] Add api-ref for DELETE RP inventories
* [placement] Add api-ref for PUT RP inventories
* [placement] Add api-ref for GET RP inventories
* Use plain routes list for os-migrations endpoint instead of stevedore
* Updated from global requirements
* Migrate to oslo request\_id middleware - mv 2.46
* Send request\_id on cinder calls
* re-Allow adding computes with no ComputeNodes to aggregates
* Exclude deleted service records when calling hypervisor statistics
* [placement] Fix placement-api-ref check tool
* Use plain routes list for limits endpoint instead of stevedore
* Updated from global requirements
* Updated from global requirements
* trivial: Remove dead code
* Use plain routes list for os-quota-sets endpoint instead of stevedore
* Use plain routes list for os-certificates endpoint instead of stevedore
* Updated from global requirements
* Cache database and message queue connection objects
* Fix uuid replacement in aggregate notification test
* Updated from global requirements
* Use plain routes list for server-password endpoint instead of stevedore
* api-ref: Fix examples for add/removeFixedIp action
* Updated from global requirements
* Updated from global requirements
* libvirt: Pass instance to connect\_volume and disconnect\_volume
* Remove the can\_host column
* Make NovaException format errors fatal for tests
* db api: add service\_get\_by\_uuid
* Add online data migration for populating services.uuid
* Remove cloudpipe APIs
* Use six.text\_type() when logging Instance object
* Updated from global requirements
* Use plain routes list for server-metadata endpoint instead of stevedore
* devref and reno for nova-{api,metadata}-wsgi scripts
* Add pbr-installed wsgi application for metadata api
* Remove nova-cert leftovers
* Use plain routes list for os-fixed-ips endpoint instead of stevedore
* Use plain routes list for os-availability-zone endpoint instead of stevedore
* Use plain routes list for os-assisted-volume-snapshots endpoint
* Use plain routes list for os-agents endpoint instead of stevedore
* Use plain routes list for os-floating-ip-dns endpoint instead of stevedore
* Use plain routes list for os-floating-ips-bulk endpoint instead of stevedore
* Use plain routes list for os-floating-ip-pools endpoint instead of stevedore
* Use plain routes list for os-floating-ips endpoint instead of stevedore
* use plain routes list for os-simple-tenant-usage
* Use plain routes list for os-instance-usage-audit-log  endpoint instead of stevedore
* Support tag instances when boot(1)
* Add ability to query for ComputeNodes by their mapped value
* Updated from global requirements
* Expose StandardLogging fixture for use
* Remove all discoverable policy rules
* Register osapi\_compute when nova-api is wsgi
* Use plain routes list for '/os-aggregates' endpoint instead of stevedore
* Use plain routes list for '/os-keypairs' endpoint instead of stevedore
* Use plain routes list for flavors-access endpoint instead of stevedore
* Use plain routes list for flavors-extraspecs endpoint instead of stevedore
* Use plain routes list for flavor endpoint instead of stevedore[1]
* Use plain routes list for '/servers' endpoint instead of stevedore
* encryptors: Switch to os-brick encryptor classes
* Updated from global requirements
* Allow CONTENT\_LENGTH to be present but empty
* [placement] Idempotent PUT /resource\_classes/{name}
* conf: Move 'floating\_ips' opts into 'network'
* Updated from global requirements
* Add test ensure all the microversions are sequential in placement API
* fix typos
* Remove unused os-pci API
* Use deepcopy when process filters in db api
* Remove usage of parameter enforce\_type
* Spelling error "paramenter"
* Updated from global requirements
* Deprecate CONF.api.allow\_instance\_snapshots
* placement: Add Traits API to placement service
* Remove aggregate uuid generation on load from DB
* PowerVM Driver: spawn/delete #1: no-ops
* Remove dead db api code
* remove flake8-import-order
* Updated from global requirements
* Optimize the link address
* Fix joins in instance\_get\_all\_by\_host
* Remove the stevedore extension point for server create
* Make scheduler target cells to get compute node instance info
* [placement] Allow PUT and POST without bodies
* Regression test for local delete with an attached volume
* Switch from pip\_missing\_reqs to pip\_check\_reqs
* doc: Separate the releasenotes guide from the code-review section
* Updated from global requirements
* Ensure reservation\_expire actually expires reservations
* Rename the model object ResourceProviderTraits to ResourceProviderTrait
* Short circuit notifications when not enabled
* doc: Move code-review under developer policies
* Updated from global requirements
* Use cursive for signature verification
* Add description to policies in aggregates.py
* tox: Stop calling config/policy generators twice
* [placement] Split api-ref topics per file
* remove i18n log markers from nova.api.\*
* [placement] add api-ref for GET /resource\_providers
* Structure for simply managing placement-api-ref
* [placement] Don't use floats in microversion handling
* Fix some reST field lists in docstrings
* Add check for invalid inventory amounts
* Add check for invalid allocation amounts
* Remove the Allocation.create() method
* Tests: remove .testrepository/times.dbm in tox.ini (functional)
* DELETE all inventory for a resource provider
* Remove old oslo.messaging transport aliases
* Updated from global requirements
* flake8: Specify 'nova' as name of app
* Updated from global requirements
* remove flake8-import-order for test requirements
* Introduce fast8 tox target
* Duplicate JSON line ending check to pep8
* [placement] Raising http codes on old microversion
* Updated from global requirements
* doc: add some documentation around quotas
* Temporarily untarget context when deleting from cell0
* api-ref: Fix parameters and examples in aggregate API
* Teach os-aggregates about cells
* Error message should not include SQL command
* Add functional test for bad res class in set\_inventory\_for\_provider
* Remove unused placement\_database config options
* virt: add get\_inventory() virt driver API method
* Use flake8-import-order
* Add comment to instance\_destroy()
* Use Sphinx 1.5 warning-is-error
* Add warning on setting secure\_proxy\_ssl\_header
* handle uninited fields in notification payload
* Updated from global requirements
* Add functional test for ip filtering with regex
* Remove domains \*-log-\* from compile\_catalog
* Updated from global requirements
* Updated from global requirements
* [placement] Add Traits related table to the api database
* Tests: remove .testrepository/times.dbm in tox.ini
* Updated from global requirements
* Ignore deleted services in minimum version calculation
* Remove usage of config option verbose
* Clean up metadata param in doc
* doc: Don't put comments inside toctree
* Fix doc generation warnings
* Updated from global requirements
* More usage of ostestr and cleanup an unused dependency
* Make servers API use cell-targeted context
* Make CellDatabases fixture work over RPC
* Revert "fix usage of opportunistic test cases with enginefacade"
* Placement api: set custom json\_error\_formatter in resource\_class
* Enable coverage report
* Raise correct error instead of class exist in Placement API
* Updated from global requirements
* Remove mox from unit/api/openstack/compute/test\_aggregates.py
* Fix improper prompt when update RC with existed one's name
* Placement api: set custom json\_error\_formatter in root
* Cleanup some issues with CONF.placement.os\_interface
* Placement api: set custom json\_error\_formatter in aggregate and usage
* Placement api: set custom json\_error\_formatter in resource\_provider
* Fix incorrect example for querying resource for RP
* Placement api: set custom json\_error\_formatter in inventory
* Enable global hacking checks and removed local checks
* Update hacking version
* Placement api: set custom json\_error\_formatter in allocations
* [3/3]Replace six.iteritems() with .items()
* Removed unnecessary parantheses and fixed formation
* Reserve migration placeholders for Ocata backports
* conf: remove deprecated image url options
* Mark compute/placement REST API max microversions for Ocata
* Remove pre-cellsv2 short circuit in instance get
* Allow placement endpoint interface to be set
* [placement] Use modern attributes of oslo\_context
* Use is\_valid\_cidr and is\_valid\_ipv6\_cidr from oslo\_utils
* Updated from global requirements
* Optionally make dynamic vendordata failures fatal
* Use a service account to make vendordata requests
* Only warn about hostmappings during ocata upgrade
* Trivial-fix: replace "json" with "yaml" in policy README
* Make api\_samples tests use simple cell environment
* Multicell support for instance listing
* Updated from global requirements
* Amend the PlacementFixture
* Updated from global requirements
* Add a PlacementFixture
* placement: create aggregate map in report client
* Remove references to Python 3.4
* Move to tooz hash ring implementation
* Integrate OSProfiler and Nova
* Remove invalid URL in gabbi tests
* Updated from global requirements
* Add rudimentary CORS support to placement API
* Updated from global requirements
* Updated from global requirements
* placement: validate member\_of values are uuids
* Expose a REST API for a specific list of RPs
* [py35] Fixes to get rally scenarios working
* Add service\_token for nova-neutron interaction
* Updated from global requirements
* Add service\_token for nova-cinder interaction
* XenAPI Use os-xenapi lib for nova
* Document testing process for zero downtime upgrade
* [2/3]Replace six.iteritems() with .items()
* docs: sort the Architecture Concepts index
* Make the SingleCellSimple fixture a little more comprehensive
* [placement] fix typo in call to create auth middleware
* HTTP interface for resource providers by aggregates
* Return uuid attribute for aggregates
* Move quota options to a config group
* Transform aggregate.delete notification
* Transform aggregate.create notification
* move gate hooks to gate/
* Make test\_compute pass with CONF.use\_neutron=True by default
* placement: Do not save 0-valued inventory
* [placement] start a placement\_dev doc
* Remove Rules.load\_json warning
* Handle unicode when dealing with duplicate aggregate errors during migration
* Updated from global requirements
* [TrivialFix] Fix comment and function name typo error
* conf: Remove 'virt' file
* Removes unnecessary utf-8 encoding
* Add nova-status upgrade check command framework
* conf: make 'default' upper case
* Updated from global requirements
* Make nova-manage cell\_v2 discover\_hosts tests use DBs
* Updated from global requirements
* Fix some release notes in preparation for the o-2 beta release
* Only return latest instance fault for instances
* conf: fix formatting in base
* Add Python 3.5 functional tests in tox.ini
* Simple tenant usage pagination
* Remove the EC2 compatible API tags filter related codes
* Corrects the type of a base64 encoded string
* Fix instructions for running simple\_cell\_setup
* Refactor REGEX filters to eliminate 500 errors
* Setup CellsV2 environment in base test
* Return 400 when name is more than 255 characters
* Check that all JSON files don't have \r\n in line
* conf: Remove config option compute\_ manager
* Add SingleCellSimple fixture
* Make RPCFixture support multiple connections
* Updated from global requirements
* Revert "reduce pep8 requirements to just hacking"
* Return 400 when name is more than 200 characters
* Fix a typo in a comment in microversion history
* Add a CellDatabases test fixture
* Pass context as kwarg instead of positional arg to get\_engine
* Require cellsv2 setup before migrating to Ocata
* Fix placement API version history 1.1 title
* placement: REST API for resource classes
* conf: Remove deprecated service manager opts
* Updated from global requirements
* Always use python2.7 for docs target
* libvirt: Cleanup test\_create\_configdrive
* Handle maximum limit in schema for int and float type parameters
* conf: Trivial fix of indentation in 'api'
* hacking: Use uuidutils or uuidsentinel to generate UUID
* Replace uuid4() with uuidsentinel
* conf: Move api options to a group
* [scheduler][tests]: Fix incorrect aggr mock values
* Show team and repo badges on README
* Placement api: Add informative message to 404 response
* conf: remove deprecated cert\_topic option
* conf: remove deprecated exception option
* Remove redundant VersionedObject Fields
* [placement] increase gabbi coverage of handlers.resource\_provider
* [placement] increase gabbi coverage of handlers.inventory
* [placement] increase gabbi coverage of handlers.allocation
* Separate CRUD policy for server\_groups
* Use pick\_context\_manager throughout DB APIs
* Database poison note
* Implement get and set aggregates in the placement API
* Updated from global requirements
* Typo error allocations.yaml
* [placement] Enforce min\_unit, max\_unit and step\_size
* Add the initial documentation for the placement API
* conf: fix formatting in wsgi
* Change database poison warning to an exception
* Updated from global requirements
* Placement api: 404 response do not indicate what was not found
* Updated from global requirements
* [placement] add a placement\_aggregates table to api\_db
* Updated from global requirements
* Add explicit dependency on testscenarios
* Updated from global requirements
* conf: Remove extraneous whitespace
* EventReporterStub
* placement: raise exc when resource class not found
* encryptors: Workaround mangled passphrases
* Updated from global requirements
* Replace admin check with policy check in placement API
* Fix import statement order
* Updated from global requirements
* Make build\_requests.instance MediumText
* Updated from global requirements
* conf: Removed TODO note and updated desc
* Remove bandit.yaml in favor of defaults
* Add swap volume notifications (error)
* doc: Integrate oslo\_policy.sphinxpolicygen
* [placement] Add support for a version\_handler decorator
* Mention API V2 should no longer be used
* compute: fixes python 3 related unit tests
* Explicitly name commands target environments
* Updated from global requirements
* Tests: improve assertJsonEqual diagnostic message
* Correct bug in microversion headers in placement
* Updated from global requirements
* Removal of tests with different result depending on testing env
* Add debug to tox environment
* placement: change resource class to a StringField
* Remove nova/openstack/\* from .coveragerc
* Remove deprecated nova-all binary
* Require WebOb>=1.6.0
* hacking: Use assertIs(Not), assert(True|False)
* Use more specific asserts in tests
* Add quota related tables to the api database
* Always use python2.7 for functional tests
* placement: add new resource\_classes table
* Add swap volume notifications (start, end)
* Add a hacking rule for string interpolation at logging
* Tests: fix a typo
* conf: Group scheduler options
* Updated from global requirements
* Updated from global requirements
* Updated from global requirements
* Fix periodic-nova-py{27,35}-with-oslo-master
* Use gabbi inner\_fixtures for better error capture
* Updated from global requirements
* [placement] reorder middleware to correct logging context
* Remove stale pyc files when running the cover job
* [placement] ensure that allow headers are native strings
* Fix a few typos in API reference
* Archive instance-related rows when the parent instance is deleted
* Unwind circular import issue with api / utils
* Remove context object in oslo.log method
* Move notification\_format and delete rpc.py
* Updated from global requirements
* Cleanup some redundant USES\_DB\_SELF usage
* [placement] Allow both /placement and /placement/ to work
* hacking: Always use 'assertIs(Not)None'
* [placement] 404 responses do not cause exception logs
* Replace uuid4() with generate\_uuid() from oslo\_utils
* Remove redundant str typecasting
* Remove nova.image.s3 and configs
* Updated from global requirements
* Add placeholder DB migrations for Ocata
* Remove PCI parent\_addr online migration
* Make test logging setup fixture disable future setup
* Add hacking checks for xrange()
* Add deprecated\_since parameter
* [placement] Manage log and other output in gabbi fixure
* Updated from global requirements
* [placement] Adjust the name of the gabbi tests
* Move wsgi-intercept to test-requirements.txt
* Remove default=None for config options
* Updated from global requirements
* Don't pass argument sqlite\_db in method set\_defaults
* Update minimum requirement for netaddr
* [placement] consolidate json handling in util module
* Fix an error in archiving 'migrations' table
* [placement] Mark HTTP error responses for translation
* [placement] prevent a KeyError in webob.dec.wsgify
* conf: Make list->dict conversion more specific
* Revert "tox: Don't create '.pyc' files"
* Improve help text for service options
* [placement] functional test for report client
* [placement] Correct serialization of inventory collections
* [placement] make PUT inventory consistent with GET
* Additional logging for placement API
* [placement] cleanup some incorrect comments
* Updated from global requirements
* Increase BDM column in build\_requests table
* Pass GENERATE\_HASHES to the tox test environment
* [placement] add two ways to GET allocations
* [placement] Add some tests ensuring unicode resource provider info
* db: retry on deadlocks while adding an instance
* [placement] Allow inventory to violate allocations
* [placement] clean up some nits in the requestlog middleware
* Body Verification of os-aggregates.inc
* Move placement api request logging to middleware
* [placement] Fix misleading comment in wsgi loader
* Updated from global requirements
* Add support for allocations in placement API
* Add basic logging to placement api
* Ignore generated merged policy files
* Register keystone opts for placement sample config
* Remove the incomplete wsgi script placement-api.py
* rt: ensure resource provider records exist from RT
* create placement API wsgi entry point
* Documentation for the vendordata reboot
* [placement] remove a comment that is no longer a todo
* Updated from global requirements
* Use StableObjectJsonFixture from o.vo
* Adds nova-policy-check cmd
* Reduce code complexity - api.py
* Revert "Optional separate database for placement API"
* In InventoryList.find() raise NotFound if invalid resource class
* Updated from global requirements
* Add oslopolicy script runs to the docs tox target
* Add entry\_point for oslo policy scripts
* List system dependencies for running common tests
* Manage db sync command for cell0
* removed db\_exc.DBDuplicateEntry in bw\_usage\_update
* Updated from global requirements
* Add support for usages in the placement API
* Add support for inventories to placement API
* Improve placement API 404 and 405 response tests
* Fix 'No data to report' error
* In placement API send microversion header when error
* placement: add filtering by attrs to resource\_providers
* Add support for resource\_providers urls
* Updated from global requirements
* Add placement API web utility methods
* Fix consistency in API conf
* Improve consistency in WSGI opts
* Maintain backwards compat for listen opts
* Optional separate database for placement API
* config options: improve help text of database (related) options (2/2)
* config options: improve help text of database (related) options (1/2)
* Remove hacking check [N347] for config options
* List instances for secgroup without joining on rules
* Updated from global requirements
* Remove left over conf placeholders
* Fix handling of status in placement API json\_error\_formatter
* Use constraints for all tox environments
* Move JSON linting to pep8
* Set enforce\_type=True in method flags
* Use constraints for releasenotes
* Check opt consistency for api.py
* Refresh README and its docs links
* Add NoopConductorFixture
* Config options: base path configuration
* Remove deprecated legacy\_api config options
* config options: Improve help for base
* Improve consistency in API
* network: introduce helper APIs for dealing with os-vif objects
* update wording around pep8 exceptions
* Updated from global requirements
* Merged barbican and key\_manager conf files into one
* TrivialFix: Fixed a typo in nova/test.py
* Updated from global requirements
* Updated from global requirements
* Add objects.ServiceList.get\_all\_computes\_by\_hv\_type
* Address feedback on cell-aggregate-api-db patches
* Updated from global requirements
* Add data migration methods for Aggregate
* Initialise oslo.privsep early in main
* Aggregate create and destroy work against API db
* Make Aggregate.save work with the API db
* Trivial option fixes
* Properly quote IPv6 address in RsyncDriver
* Fixed typos in nova, nova/api, nova/cells directory
* Reminder that release notes are built from commits
* Add initial framing of placement API
* Updated from global requirements
* Remove leftover list\_opts entry points
* Remove nova.cache\_utils oslo.config.opts entrypoint
* Remove neutronv2.api oslo.config.opt entry point
* Updated from global requirements
* Make Aggregate metadata functions work with API db
* Use deprecated\_reason for network quota options
* New style vendordata support
* Add metadata server fixture
* Check opt group and type for nova.conf.service.py
* Deprecate network quota configuration
* Verify os-aggregates.inc on sample files
* :Add missing %s in print message
* Update tox.ini: Constraints are possible for api\* jobs
* Make Aggregate host operations work against API db
* Replace deprecated LOG.warn with LOG.warning
* Add prototype feature classification matrix
* Use constraints for coverage job
* Remove deprecated network\_api\_class option
* Remove redundant DEPRECATED tag from help messages
* Add VirtualInterface.destroy()
* Add block\_device\_mappings to BuildRequest
* 'limit' and 'marker' support for db\_api and keypair\_obj
* Don't overwrite MarkerNotFound error message
* tox: Use conditional targets
* tox: Don't create '.pyc' files
* Add Allocation and AllocationList objects
* Fix invalid import order
* Hacking check for \_ENFORCER.enforce()
* Hacking check for policy registration
* Add a py35 environment to tox
* Microversion 2.33 adds pagination support for hypervisors
* Transform instance.delete notifications
* Log DB exception if VIF creation fails
* Add policy sample generation
* \_security\_group\_get\_by\_names cleanup
* Improve help text for wsgi options
* Add ability to select specific tests for py34
* Remove mox from unit/compute/test\_compute.py (8)
* remove personality extension
* remove preserve-ephemeral rebuild extension
* remove access\_ips extension
* policy: Replaces 'authorize' in nova-api (part 1)
* objects: adding an update method to virtual\_interface
* policy: Add defaults in code (part 1)
* Add console auth tokens db api methods
* Port test\_pipelib and test\_policy to Python 3
* Add instance groups tables to the API database
* Updated from global requirements
* fix developer docs on API
* remove os-disk-config part 4
* Updated from global requirements
* Remove the nova.compute.resources entrypoint
* Add console auth tokens table and model
* Updated from global requirements
* Remove mox from tests/unit/objects/test\_aggregate.py
* Remove api\_rate\_limit config option
* Tear down of os-disk-config part 2
* Trivial-Fix: Fix typos
* Updated from global requirements
* Make Aggregate.get\_by\_uuid use the API db
* api-ref: parameter  verification for os-aggregates
* Enable all extension for all remaining sample tests
* tox.ini: Remove unnecessary comments in api-ref target
* Updated from global requirements
* Fix update inventory for multiple providers
* Improve the help text for cells options (7)
* Add a get\_by\_uuid for aggregates
* Remove v2 extension setting from functional tests
* Make the base options definitions consistent
* Revert inventory/allocation child DB linkage
* add "needs:\*" tags to the config option modules
* Updated from global requirements
* remove /v2.1/{tenant\_id} from all urls
* Updated from global requirements
* Cancelled live migration are not in progress
* Fix multipath iSCSI encrypted volume attach failure
* Remove legacy v2 API code completely
* Make AggregateList.get\_ return API & cell db items
* Make Aggregate.get operation favor the API db
* Add aggregates tables to the API db
* Updated from global requirements
* Updated from global requirements
* Use oslo\_log instead of logging
* Updated from global requirements
* api and availablity\_zone opt definition consistent
* Return 400 HTTP error for invalid flavor attributes
* No disable reason defined for new services
* Make available to build docs with python3
* Updated from global requirements
* remove db2 support from tree
* Pass OS\_DEBUG to the tox test environment
* Add resource provider tables to the api database
* Let setup.py compile\_catalog process all language files
* use\_neutron\_default\_nets: StrOpt ->BoolOpt
* Updated from global requirements
* Completed migrations are not "in progress"
* Make flavor-manage api call destroy with Flavor object
* Updated from global requirements
* Drop fields from BuildRequest object and model
* config options: centralize exception options
* Config options: move set default opt of db section to centralized place
* Move config options from nova/api directory (5)
* Make some build\_requests columns nullable
* migrate to os-api-ref
* config options: centralize section "database" + "api\_database"
* Follow-up for the API config option patch
* config options: move s3 related options
* config options: centralize default flavor option
* Fix migration query with unicode status
* Config options: centralize cache options
* Updated from global requirements
* centralized conf: nova/network/rpcapi.py
* Improve the help text for the API options (4)
* Improve the help text for the API options (3)
* Add Keypairs to the API database
* Drop paramiko < 2 compat code
* Correct some misspell words in nova
* Improve the help text for the API options (2)
* Improve the help text for the API options (1)
* Move config options from nova/api directory (4)
* Move config options from nova/api directory (3)
* Move config options from nova/api directory (2)
* Move config options from nova/api directory (1)
* Remove 400 as expected error
* Don't raise error when filtering on custom metadata
* Add pycrypto explicitly
* Config options: centralize driver libvirt options (1)
* Remove legacy v2 unit tests[a-e]
* Config options: Centralize servicegroup options
* Archive instance\_actions and instance\_actions\_event
* Updated from global requirements
* Add ability to filter migrations by instance uuid
* Updated from global requirements
* Replace key manager with Castellan
* complete Method Verification of aggregates
* Config options: Centralize netconf options
* Updated from global requirements
* Config options: centralize section "ssl"
* add tags to files for the content verification phase
* Final warnings removals for api-ref
* Fix sample path for aggregate, certificate, console
* Updated from global requirements
* Fix json response example heading in api ref
* Fix "Creates an aggregate" parameters
* Properly clean up BDMs when \_provision\_instances fails
* move sphinx h3 to '-' instead of '^'
* Initial use of microversion\_parse
* Add instance/instance\_uuid to build\_requests table
* Updated from global requirements
* Import RST files for documentation
* Fix doc build if git is absent
* Updated from global requirements
* Add AllServicesCurrent fixture
* Drop compute node uuid online migration code
* config options: centralize 'spice' options
* Updated from global requirements
* Config options: centralize base path configuration
* remove alembic from requirements.txt
* Config options: centralize section "xvp"
* Updated from global requirements
* db: retry instance\_info\_cache\_update() on deadlock
* config options: centralize quota options
* DB API changes for the nova-manage quota\_usage\_refresh command
* Fix typo in compute node mega join comments
* Add api-ref/build/\* to .gitignore
* Config options: Centralize console options
* Config options: Centralize notification options
* Added server tags support in nova-api
* Added db API layer to add instance tag-list filtering support
* Config options: centralize "configdrive" options
* config options: centralize baseproxy cli options
* Config options: Centralize neutron options
* Config options: Centralize ipv6 options
* Remove flavor seeding from the base migration
* Updated from global requirements
* Improve 'monkey\_patch' conf options documentation
* config options: centralize section: "crypto"
* config options: Centralise 'monkeypatch' options
* config options: Centralise 'utils' options
* config options: Centralize upgrade\_levels section
* config options: Centralize mks options
* config options: Centralize vmware section
* config options: centralize section "service"
* config options: centralize section "guestfs"
* config options: centralize section "workarounds"
* config options: Centralize 'nova.rpc' options
* Nuke cliutils from oslo-incubator
* Updated from global requirements
* Block flavor creation until main database is empty
* config options: Centralise 'image\_file\_url' options
* config options: centralize section: "glance"
* Add Service.get\_minimum\_version\_multi() for multiple binaries
* remove the ability to disable v2.1
* Make git clean actually remove covhtml
* Make compute\_node\_statistics() use new schema
* Config options: Centralize consoleauth options
* config options: centralize section "cloudpipe"
* Add sample API content
* Config options: Centralize debugger options
* config options: centralize section: "keymgr"
* config options: centralize xenserver options
* trivial: Fix alignment of wsgi options
* config options: Remove 'wsgi\_' prefix from opts
* Removes some redundant words
* Include CellMapping in InstanceMapping object
* Move config options from nova/network/manager.py
* Add a DatabasePoisonFixture
* config options: Move wsgi options into a group
* config options: centralize section: "rdp"
* Fixes hex decoding related unit tests
* Config options: centralize section "hyperv"
* config options: Centralise floating ip options
* Add backrefs to api db models
* Remove auto generated module api documentation
* Add a hacking check for test method closures
* Make Flavor.get operations prefer the API database
* Error on API Guide warnings
* Add placeholder migrations for Mitaka backports
* Update .gitreview for stable/mitaka
* Fix reno reverts that are still shown
* config options: centralize cinder options
* register the config generator default hook with the right name
* Change SpawnIsSynchronous fixture return
* fixed log warning in sqlalchemy/api.py
* Add include\_disabled parameter to service\_get\_all\_by\_binary
* Missing info\_cache.save() in db sqlalchemy api
* Soft delete instance group member when delete instance
* Add Database fixture to sync to a specific version
* Drop the use of magic openstack project\_id
* Aggregate object fixups
* Add ComputeNode and Aggregate UUID operations to nova-manage online migrations
* nova-manage: Declare a PciDevice online migration script
* Forbid new legacy notification event\_type
* Remove unused methods in nova/utils.py
* Fix string interpolations at logging calls
* Generate better validation error message when using name regexes
* Updated from global requirements
* update tests for use\_neutron=True; fix exposed bugs
* Deprecate db\_driver config option
* Use db connection from RequestContext during queries
* Make InstanceMappings.cell\_id nullable
* Added Keystone and RequestID headers to CORS middleware
* Use new inventory schema in all compute\_node gets
* Use new inventory schema in compute\_node\_get\_all()
* Deprecate nova.hooks
* Adjust resource-providers models for resource-pools
* Update time is not updated when metadata of aggregate is updated
* Do not use constraints for venv
* Add new APIs and deprecate old API for migrations
* Updated from global requirements
* Add build\_requests database table and model
* Make db.aggregate\_get a reader not a writer
* Use constant\_time\_compare from oslo.utils
* reduce pep8 requirements to just hacking
* fix usage of opportunistic test cases with enginefacade
* Creates flavor\* tables in API database
* add a place for functional test to block specific regressions
* Allocate uuids for aggregates as they are created or loaded
* bug and tests in 'instance\_info\_cache'
* Updated from global requirements
* Fix networking exceptions in ComputeTestCase
* tox: Remove 'oslo.versionedobjects' dependency
* Add a column for uuid to aggregate\_hosts
* Failed migration shoudn't be reported as in progress
* always use python2.7 for pep8
* Hacking: check for deprecated os.popen()
* Add StableObjectJsonFixture and use it in our base test class
* always use pip constraints
* Reorder name normalization for DNS
* Updated from global requirements
* Fix spelling mistake
* Add methods for RequestContext to switch db connection
* Config options: centralize options in conductor api
* enginefacade: remove 'get\_session' and 'get\_api\_session'
* Add new API to force live migration to complete
* Add new DB API method to retrieve migration for instance
* Updated from global requirements
* enginefacade: 'flavor'
* Updated from global requirements
* enginefacade: test\_db\_api cleanup, missed decorators
* config options: Centralise 'vnc' options
* config options: centralize section "wsgi"
* config options: add hacking check for help text length
* Update the home-page
* Switch to oslo.cache lib
* Remove all remaining references to Quantum
* Spread allocations of fixed ips
* Updated from global requirements
* Revert "Added new scheduler filter: AggregateTypeExtraSpecsAffinityFilter"
* enginefacade: 'instance\_tags'
* Added new scheduler filter: AggregateTypeExtraSpecsAffinityFilter
* Migrate from keystoneclient to keystoneauth
* Generate doc for versioned notifications
* doc: add devref about versioned notifications
* Updated from global requirements
* Persist the request spec during an instance boot
* Config options: centralize options in availability\_zones
* Config options: centralize section "cells"
* Use stevedore for scheduler driver
* Use stevedore for scheduler host manager
* enginefacade: 'instance\_group'
* enginefacade: 'floating\_ip'
* enginefacade: 'compute\_node'
* enginefacade: 'service'
* Updated from global requirements
* Fix docstrings for sphinx
* Add ITRI DISCO os-brick connector for libvirt
* enginefacade: 'security\_group'
* enginefacade: 'instance'
* enginefacade: 'fixed\_ip'
* enginefacade: 'quota' and 'reservation'
* Python3: Replace dict.iteritems with six.iteritems
* Updated from global requirements
* Validate translations
* enginefacade: 'ec2\_instance' and 'instance\_fault'
* enginefacade: 'block\_device\_mapping'
* Remove releasenotes/build between releasenotes runs
* Changed filter\_by() to filter() during filtering instances in db API
* config options: Centralise PCI options
* Use of six.PY3 should be forward compatible
* Revert "Workaround reno reverts by accepting warnings"
* Workaround reno reverts by accepting warnings
* Move config options from nova/cert directory
* Fix undetected races when getting BDMs by volume id
* Fix instance not destroyed after successful evacuation
* enginefacade: 'aggregate'
* hacking: check for common double word typos
* update min tox version to 2.0
* nova conf single point of entry: fix error message
* Remove NovaObjectDictCompat from Aggregate
* single point of entry for sample config generation
* Remove Deprecated EC2 and ObjectStore impl/tests
* Remove null AZ tests from API tests
* Updated from global requirements
* Replace deprecated library function os.popen() with subprocess
* Correct the code description
* Stop explicitly running test discovery for py34
* introduce \`\`stub\_out\`\` method to base test class
* Move Process and Mentoring pages to devref
* remove use of \_get\_regexes in samples tests
* config options: Centralise 'virt.hardware' options
* Updated from global requirements
* db: querry to retrieve all pci device by parent address
* Python 3 deprecated the logger.warn method in favor of warning
* enginefacade: 'instance\_metadata'
* Reduce the number of db/rpc calls to get instance rules
* Updated from global requirements
* enginefacade: 'bw\_usage', 'vol\_usage' and 's3\_image'
* Nuke EC2 API from api-paste and remove wsgi support
* enginefacade: 'vif' and 'task\_log'
* config options: Centralise 'virt.ironic' options
* enginefacade: 'migration'
* centeralized conf:compute/emphemeral\_storage\_encryption
* Filter by leased=False when allocating fixed IPs
* Updated from global requirements
* Add placeholders for config options
* Block requests 2.9.0
* Add signature\_utils module
* Add uuidsentinel test module
* Updated from global requirements
* Deprecated tox -downloadcache option removed
* Fix wrap\_exception to get all arguments for payload
* Cache SecurityGroupAPI results from neutron multiplexer
* [Py34] Enable api.openstack.test\_wsgi unit test
* default host to service name instead of uuid
* Updated from global requirements
* Fix capitalization of IP
* Add a note about fixing "db type could not be determined" with py34
* docs: add test strategy and feature classification
* Remove SQLite BigInteger/Integer translation logic
* Fixes dict keys and items references for Python 3
* add api-samples tox target
* Updated from global requirements
* Hyper-V: adds os-win library
* Updated from global requirements
* Config options: centralize section "scheduler"
* Remove version from setup.cfg
* force releasenotes warnings to be treated as errors
* Add persistence to the RequestSpec object
* Updated from global requirements
* add hacking check for config options location
* use graduated oslo.policy
* TrivialFix: remove 'deleted' flag
* Use version convert methods from oslo\_utils.versionutils
* Modify Aggregate filters for RequestSpec
* Fixed incorrect name of 'tag' and 'tag-any' filters
* Updated from global requirements
* enginefacade: 'agent' and 'action'
* config options: centralize section "serial\_console"
* Replaced private field in get\_session/engine with public method
* Reverse sort tables before archiving
* Updated from global requirements
* Replaced deprecated timeutils methods
* Updated from global requirements
* Prepare filters for using RequestSpec object
* Remove IN-predicate warnings
* Fix paths for api-guide build
* Don't track migrations in 'accepted' state
* Replace N block\_device\_mapping queries with 1
* Add reno for release notes management
* Rearranges to create new Compute API Guide
* Aggregate Extra Specs Filter should return if extra\_specs is empty
* Updated from global requirements
* Use ObjectVersionChecker fixture from oslo.versionedobjects
* Block oslo.messaging 2.8.0
* enginefacade: 'provider\_fw', 'console\_pool' and 'console'
* enginefacade: 'network'
* enginefacade: 'dnsdomain' and 'ec2'
* enginefacade: 'certificate' and 'pci\_device'
* enginefacade: 'key\_pair' and 'cell'
* enginefacade: 'instance\_info' and 'instance\_extra'
* Use EngineFacade from oslo\_db.enginefacade
* Remove vcpu resource from extensible resource tracker
* Fix booting fail when unlimited project quota
* Remove "Can't resolve label reference" warnings
* Remove obj\_relationships from objects
* Revert "Implement online schema migrations"
* Add -constraints sections for CI jobs
* Updated from global requirements
* Expands python34 unit tests list
* Add tags to .gitignore
* Updated from global requirements
* Add a nova functional test for the os-server-groups GET API with all\_projects parameter
* hacking check for contextlib.nested for py34 support
* Print number of rows archived per table in db archive\_deleted\_rows
* Updated from global requirements
* Remove redundant deps in tox.ini
* docs: add the scheduler evolution plans
* Updated from global requirements
* Ignore errorcode=4 when executing \`cryptsetup remove\` command
* Omnibus stable/liberty fix
* Updated from global requirements
* Updated from global requirements
* Add a code-review guideline document
* Updated from global requirements
* Make archive\_deleted\_rows\_for\_table private
* Log DBReferenceError in archive\_deleted\_rows\_for\_table
* Use DBReferenceError in archive\_deleted\_rows\_for\_table
* Add testresources used by oslo.db fixture
* Remove unused context parameter from db.archive\_deleted\_rows\* methods
* Updated from global requirements
* Honor until\_refresh config when creating default security group
* remove sphinxcontrib-seqdiag
* Add get\_minimum\_version() to Service object and DB API
* Updated from global requirements
* Updated from global requirements
* Add Pillow to test-requirements.txt
* Add Pillow to test-requirements.txt
* Use os-testr for py34 tox target
* Add sample config file to nova docs
* Identify more py34 tests that already pass
* Fix the help text of monkey\_patch config param
* Filter leading/trailing spaces for name field in v2.1 compat mode
* Give instance default hostname if hostname is empty
* Add some devref for AZs
* Change parameter name in utility function
* Open Mitaka development
* Change ignore-errors to ignore\_errors
* Pep8 didn't check api/openstack/common.py
* Updated from global requirements
* Devref: Document why conductor has a task api/manager
* Allow filtering using unicode characters
* Updated from global requirements
* Fix typo in HACKING.rst
* Reuse method to convert key to passphrase
* Set vif and allocated when associating fixed ip
* Updated from global requirements
* Updated from global requirements
* Remove more 'v3' references from the code
* Expose keystoneclient's session and auth plugin loading parameters
* Add constraint target to tox.ini
* Don't "lock" the DB on expand dry run
* Update from global requirements
* Don't query database with an empty list of tags for creation
* Remove duplicate NullHandler test fixture
* Fix permission issue of server group API
* Make query to quota usage table order preserved
* Rm openstack/common/versionutils from setup.cfg
* Remove v3 references in unit test 'contrib'
* Removed unused dependency: discover
* db: Add the migration\_context to the instance\_extra table
* api: deprecate the concept of extensions in v2.1
* Cleanup for merging v2 and v2.1 functional tests
* Remove doc/source/api and doc/build before building docs
* Updated from global requirements
* Move objects registration in tests directory
* Updated from global requirements
* Remove merged sample tests and file for v2 tests
* Updated from global requirements
* Gate on nova.conf.sample generation
* Add rootwrap daemon mode support
* Remove the useless require\_admin\_context decorator
* Remove unused db.security\_group\_rule\_get\_by\_security\_group\_grantee()
* Make compute\_api.trigger\_members\_refresh() issue a single db call
* nova.utils.\_get\_root\_helper() should be public
* Re-write way of compare APIVersionRequest's
* Remove last of the plugins/v3 from unit tests
* Rename classes containing 'v3' to 'v21'
* Move the v2 api\_sample functional tests
* Updated from global requirements
* Don't query database with an empty list of tags for IN clause
* Move V2.1 API unittest to top level directory
* Move legacy v2 api smaple tests
* Make pagination tolerate a deleted marker
* Updated from global requirements
* Add hacking check for eventlet.spawn()
* Updated from global requirements
* Updated from global requirements
* Remove 'v3' directory for v2.1 json-schemas
* Move v2.1 code to the main compute directory - remove v3 step3
* Move existing V2 to legacy\_v2 - step 2
* Move existing V2 to legacy\_v2
* Add hacking check for greenthread.spawn()
* Suppress not image properties for image metadata from volume
* Updated from global requirements
* docs: add link to liberty summit session on v2.1 API
* Add documentation for the nova-cells command
* Fixed incorrect behaviour of method \_check\_instance\_exists
* Skip additionalProperties checks when LegacyV2CompatibleWrapper enabled
* :Add documentation for the nova-idmapshift command
* Remove db layer hard-code permission checks for keypair
* Fix a couple dead links in docs
* Updated from global requirements
* Remove 'scheduled\_at' - DB cleanup
* Change List objects to use obj\_relationships
* Remove db layer hard-code permission checks for instance\_get\_all\_hung\_in\_rebooting
* Undo tox -e docs pip install sphinx workaround
* Set autodoc\_index\_modules=True so tox -e docs builds module docs again
* return more details on assertJsonEqual fail
* Add documentation for block device mapping
* Implement compare-and-swap for instance update
* docs: add a placeholder link to mentoring docs
* Updated from global requirements
* Move to using ovo's remotable decorators
* Get py34 subunit.run test discovery to work
* Enable python34 tests for nova/tests/unit/scheduler/test\*.py
* Replace openssl calls with cryptography lib
* Switch to using os-brick
* Updated from global requirements
* Added removing of tags from instance after its deletion
* Scheduler: enhance debug messages for multitenancy aggregates
* Updated from global requirements
* tox: make it possible to run pep8 on current patch only
* Switch to the oslo\_utils.fileutils
* Remove unused import of the compute\_topic option from the DB API
* Updated from global requirements
* Remove unnecessary oslo namespace import checks
* Switch to oslo.reports
* docs: clear between current vs future plans
* Remove db layer hard-code permission checks for fixed\_ip\_associate\_\*
* Updated from global requirements
* Fix Python 3 issues in nova.utils and nova.tests
* Remove db layer hard-code permission checks for instance\_get\_all\_by\_host\_and\_not\_type
* Revert "Remove useless db call instance\_get\_all\_hung\_in\_rebooting"
* Remove db layer hard-code permission checks for provider\_fw\_rule\_\*
* Remove db layer hard-code permission checks for archive\_deleted\_rows\*
* Revert "Implement compare-and-swap for instance update"
* Add tool to build a doc latex pdf
* Update HACKING.rst for running tests and building docs
* Remove db layer hard-code permission checks for quota\_class\_create/update
* Remove db layer hard-code permission checks for quota\_class\_get\_all\_by\_name
* Remove db layer hard-code permission checks for reservation\_expire
* Use stevedore for loading monitor extensions
* Switch to oslo.service library
* Fix for mock-1.1.0
* Port crypto to Python 3
* Remove useless db call instance\_get\_all\_hung\_in\_rebooting
* Handle KeyError when volume encryption is not supported
* Implement compare-and-swap for instance update
* Added method exists to the Tag object
* Add DB2 support
* Make evacuate leave a record for the source compute host to process
* removed unused method \_get\_default\_deleted\_value
* Remove flavor migration from db\_api and nova-manage
* Remove unneeded OS\_TEST\_DBAPI\_ADMIN\_CONNECTION
* Switch from MySQL-python to PyMySQL
* Port test\_exception to Python 3
* devref: virtual machine states and transitions
* Remove db layer hard-code permission checks for floating\_ip\_dns
* Updated from global requirements
* Add bandit for security static analysis testing
* Enable python34 tests for nova/tests/unit/objects/test\*.py
* Soft delete system\_metadata when destroy instance
* Remove python3 specific test-requirements file
* Remove db layer hard-code permission checks for network\_set\_host
* Block subtractive operations in migrations for Kilo and beyond
* Remove db layer hard-code permission checks for network\_disassociate
* Fix Python 3 issues in nova.db.sqlalchemy
* utils: ignore block device mapping in system metadata
* Changes conf.py for Sphinx build because oslosphinx now contains GA
* Updated from global requirements
* Add explicit alembic dependency
* Use oslo-config-generator instead of generate\_sample.sh
* Return bandwidth usage after updating
* Update version for Liberty
* The devref for Nova stable API
* test: add MatchType helper class as equivalent of mox.IsA
* Updated from global requirements
* Add Host Mapping table to API Database
* Implement online schema migrations
* Make instance usage audit use the brand new TaskLog object
* Updated from global requirements
* Associating of floating IPs corrected
* Cleanup wording for the disable\_libvirt\_livesnapshot workaround option
* Updated from global requirements
* Send Instance object to cells instance\_update\_at\_top
* fix "down" nova-compute service spuriously marked as "up"
* Link to microversion history in docs
* Remove db layer hard-code permission checks for quota\_usage\_update
* pass environment variables of proxy to tox
* Remove db layer hard-code permission checks for quota\_get\_all\_\*
* Updated from global requirements
* compute: only use non\_inheritable\_image\_properties if snapshotting
* Replace metaclass registry with explicit opt-in registry from oslo
* Begin the transition to an explicit object registry
* Add a hacking rule for consistent HTTP501 message
* Updated from global requirements
* Handle FlavorNotFound when augmenting migrated flavors
* Remove unused instance\_group\_policy db calls
* Extract helper method to get image metadata from volume
* Fixes referenced path in nova/doc/README.rst
* Updated from global requirements
* Ensure to store context in thread local after spawn/spawn\_n
* Remove unit\_test doc
* Make blueprints doc a reference for nova blueprints
* Remove jenkins, launchpad and gerrit docs
* Updated from global requirements
* Make nova-manage handle completely missing flavor information
* Let soft-deleted instance\_system\_metadata readable
* Add missing @require\_context
* Tolerate iso style timestamps for cells rpc communication
* Force the value of LC\_ALL to be en\_US.UTF-8
* Remove hash seed comment from tox.ini
* Allow querying for migrations by source\_compute only
* Create instance\_extra entry if it doesn't update
* Updated from global requirements
* Block oslo.vmware 0.13.0 due to a backwards incompatible change
* Fix version unit test on Python 3
* Run tests with PyMySQL on Python 3
* Drop explicit suds dependency
* Replace dict.iteritems() with six.iteritems(dict)
* Don't use dict.iterkeys()
* Replace dict(obj.iteritems()) with dict(obj)
* Use six.moves.range for Python 3
* Remove db layer hard-code permission checks for security\_group\_default\_rule\_destroy
* Remove db layer hard-code permission checks for network\_associate
* Remove db layer hard-code permission checks for network\_create\_safe
* Remove db layer hard-code permission checks for v2.1 cells
* Update docs layout
* Add note to doc explaining scope
* Add migration\_type and hidden to Migration database model
* Fix pip-missing-reqs
* Replace iter.next() with next(iter)
* devref: add information to clarify nova scope
* Updated from global requirements
* Remove db layer hard-code permission checks for quota\_destroy\_all\_\*
* Replace unicode with six.text\_type
* Replace dict.itervalues() with six.itervalues(dict)
* API: remove admin require from certificate\_\* from db layer
* API: remove admin require for compute\_node(get\_all/search\_by\_hyperviso) from db
* API: remove admin require for compute\_node\_create/update/delete from db layer
* API: remove admin require from compute\_node\_get\_all\_by\_\* from db layer
* Fix failure of stopping instances during init host
* API: remove instance\_get\_all\_by\_host(\_and\_node) hard-code admin check from db
* Remove db layer hard-code permission checks for service\_get\_by\_host\*
* Remove db layer hard-code permission checks for service\_get\_by\_compute\_host
* Updated from global requirements
* Add SpawnFixture
* Updated from global requirements
* Start the conversion to oslo.versionedobjects
* Cleanup docs landing page
* Updated from global requirements
* tests: make API signature test also check static function
* Updated from global requirements
* minor edit to policy\_enforcement.rst
* Remove unused db.aggregate\_metadata\_get\_by\_metadata\_key() call
* Removed 'PYTHONHASHSEED=0' from tox.ini
* Convert bandwidth\_usage related timestamp to UTC native datetime
* Add support for forcing migrate\_flavor\_data
* Adds toctree to v2 section of docs
* Remove db layer hard-code permission checks for fixed\_ip\_get\_\*
* Remove db layer hard-code permission checks for network\_get\_all\_by\_host
* Remove db layer hard-code permission checks for security\_group\_default\_rule\_create
* Remove db layer hard-code permission checks for floating\_ips\_bulk
* Remove downgrade support from the cellsv2 api db
* Fix migrate\_flavor\_data() to catch instances with no instance\_extra rows
* Updated from global requirements
* Add config option to disable handling virt lifecycle events
* Fix migrate\_flavor\_data() to catch instances with no instance\_extra rows
* Cleanup unnecessary session creation in floating\_ip\_deallocate
* Fix inefficient transaction usage in floating\_ip\_bulk\_destroy
* libvirt: Add option to ssh to prevent prompting
* Remove db layer hard-code permission checks for network\_get\_associated\_fixed\_ips
* update .gitreview for stable/kilo
* Store context in local store after spawn\_n
* Open Liberty development
* Use retrying decorator from oslo\_db
* Fix API links and labels
* Adds Compute API v2 docs
* Add debug logging to quota\_reserve flow
* Move suds into test-requirements.txt
* Add a fixture for the NovaObject indirection API
* Avoid load real policy from policy.d when using fake policy fixture
* Skip 'id' attribute to be explicitly deleted in TestCase
* Updated from global requirements
* default tox cmd should also run 'functional' target
* Rename and move the v2.1 api policy into separated files
* Tox: reduce complexity level to 35
* Remove db layer hard-code permission checks for service\_get\_all
* Test fixture for the api database
* Remove context from remotable call signature
* Added assertJsonEqual method to TestCase class
* Remove usage of remotable context parameter in agent, aggregate
* Remove db layer hard-code permission checks for pci
* Add get\_api\_session to db api
* Use the proper database engine for nova-manage
* Add support for multiple database engines
* Fixed archiving of deleted records
* Revert "Removed useless method \_get\_default\_deleted\_value."
* Remove db layer hard-code permission checks for network\_count\_reserved\_ips
* refactor policy fixtures to allow use of real policy
* ensure DatabaseFixture removes db on cleanup
* Remove db layer hard-code permission checks for service\_get\_all\_by\_\*
* V2 tests -Reuse server post req/resp sample file
* Move oslo.vmware into test-requirements.txt
* Remove db layer hard-code permission checks for network\_get\_by\_uuid
* Refactor \_regex\_instance\_filter for testing
* Add instance\_mappings table to api database
* Updated from global requirements
* Remove db layer hard-code permission checks for network\_get\_by\_cidr
* Add cell\_mappings table to api database
* Remove db layer hard-code permission checks for network\_delete\_safe
* Remove db layer hard-code permission checks for flavor-manager
* Remove db layer hard-code permission checks for service\_delete/service\_get
* Remove db layer hard-code permission checks for service\_update
* Remove db layer hard-code permission checks for flavor\_access
* Modify filters so they can look to HostState
* let us specify when samples tests need admin privs
* Updated from global requirements
* Remove service\_get\_by\_args from the DB API
* Remove usage of db.service\_get\_by\_args
* Fixed incorrect behavior of method sqlalchemy.api.\_check\_instance\_exists
* Remove db layer hard-code permission checks for migrations\_get\*
* Updated from global requirements
* Truncate encoded instance sys meta to 255 or less
* Allow disabling the evacuate cleanup mechanism in compute manager
* Add Service.get\_by\_host\_and\_binary and ServiceList.get\_by\_binary
* create noauth2
* Add second migrate\_repo for cells v2 database migrations
* Updated from global requirements
* Force LANGUAGE=en\_US in test runs
* Remove compute\_node field from service\_get\_by\_compute\_host
* Remove db layer hard-code permission checks for migration\_create/update
* Disables pci plugin for v2.1 & microversions
* Fix logic for checking if az can be updated
* Remove TranslationFixture
* Remove db layer hard-code permission checks for task\_log\_get\*
* Remove db layer hard-code permission checks for task\_log\_begin/end\_task
* Remove db layer hard-code permission checks for service\_create
* Support specifing multiple values for aggregate keys
* Remove db layer hard-code permission checks for fixed\_ip\_disassociate\_all\_by\_timeout
* Switch to uuidutils from oslo\_utils library
* Revert : Switch off oslo.\* namespace check temporarily
* Remove db layer hard-code permission checks for v2.1 agents
* Updated from global requirements
* Reuse is\_int\_like from oslo\_utils
* Replace select-for-update in fixed\_ip\_associate
* Updated from global requirements
* Remove backwards compat oslo.messaging entries from setup.cfg
* Change utils.vpn\_ping() to return a Boolean
* Use oslo.log
* extract API fixture
* Wrap IPv6 address in square brackets for scp/rsync
* Added retries in 'network\_set\_host' function
* Refactor how to remove compute nodes when service is deleted
* Replace usage of LazyPluggable by stevedore driver
* Remove computenode relationship on service\_get
* Remove nested service from DB API compute\_nodes
* Fix "Host Aggregate" section of the Nova Developer Guide
* Remove now useless requirements wsgiref
* Fixes logic in compute\_node\_statistics
* Replace oslo-incubator with oslo\_context
* patch out nova libvirt driver event thread in tests
* Change outer to inner join in fixed IP DB API func
* Small cleanup in pci\_device\_update
* Drop deprecated namespace for oslo.rootwrap
* Add vcpu\_model to instance object
* Fix description of parameters in nova functions
* Stop making the database migration backend lazy pluggable
* Updated from global requirements
* Improved performance of db method network\_in\_use\_on\_host
* Replace select-for-update in floating\_ip\_allocate\_address
* Extract preserve ephemeral on rebuild from servers plugin
* Updated from global requirements
* Switch off oslo.\* namespace check temporarily
* Switch to using oslo\_\* instead of oslo.\*
* Sync with oslo-incubator
* Add \_LW for missing translations
* Treat LOG.warning and LOG.warn same
* Add missing setup.cfg entry for os-user-data plugin
* Updated from global requirements
* Add formal doc recording hypervisor feature capability matrix
* Remove useless argparse requirement
* Use a workarounds group option to disable live snaphots
* Adds barbican keymgr wrapper
* Improvement in 'network\_set\_host' function
* Add migrate\_flavor\_data to nova-manage
* Add flavor fields to Instance object
* Use a workarounds option to disable rootwrap
* Create a 'workarounds' config group
* Updated from global requirements
* libvirt: update uri\_whitelist in fakelibvirt.Connection
* Check for LUKS device via 'isLuks' subcommand
* Replace select-for-update in fixed\_ip\_associate\_pool
* Remove N331 hacking rules
* Revert temporary hack to monkey patch the fake rpc timeout
* Remove H238 comment from tox.ini
* Removed useless method \_get\_default\_deleted\_value
* Updated from global requirements
* HACKING.rst: Update the location of unit tests' README.rst
* Ignore warnings from contextlib.nested
* Cleanup bad JSON files
* Added hacking rule for assertEqual(a in b, True/False)
* Provide compatibliity for db.compute\_node\_statistics
* Don't translate exceptions in tests
* Enable check for H238 rule
* Remove mox dependency
* Reduce complexity of the \_get\_guest\_config method
* Add flavor column to instance\_extra table
* Remove useless requirements
* increase fake rpc POLL\_TIMEOUT to 0.1s
* Fix inconsistencies in the ComputeNode object about service
* Fix wrong instructions for rebuilding API samples
* Performance: leverage  dict comprehension in PEP-0274
* Do not use deprecated assertRaisesRegexp()
* Remove unused instance\_group\_metadata\_\* DB APIs
* Reduce the complexity of the create() method
* speed up tests setting fake rpc polling timeout
* Updated from global requirements
* Remove non existent rule N327 from HACKING.rst
* Replace Hacking N315 with H105
* Enable W292
* Fix and re-gate on H306
* Move to hacking 0.10
* Updated from global requirements
* Move WarningsFixture after DatabaseFixture so emit once
* remove pylint source code annotations
* Cleanup XML for api samples tests for Nova REST API
* remove all traces of pylint testing infrastructure
* Add WarningsFixture to only emit DeprecationWarning once in a test run
* Added hacking rule for assertTrue/False(A in B)
* Make pagination work with deleted marker
* Switch to tempest-lib's packaged subunit-trace
* Nuke XML support from Nova REST API - Phase 2
* Remove unused methods in nova utils
* Nuke XML support from Nova REST API - Phase 1
* Don't assume contents of values after aggregate\_update
* Reuse methods from netutils
* Prevent new code from using namespaced oslo imports
* Move metadata filtering logic to utils.py
* extract RPC setup into a fixture
* Remove unused db.api.dnsdomain\_list
* Remove unused db.api.instance\_get\_floating\_address
* Remove unused db.api.aggregate\_host\_get\_by\_metadata\_key
* Remove unused db.api.get\_ec2\_instance\_id\_by\_uuid
* Handle invalid sort keys/dirs gracefully
* Cleanup in ResourceExtension ALIAS(v2.1api)
* initialize objects with context in Aggregate object tests
* Corrects link to API Reference on landing page
* Reject non existent mock assert calls
* Make instance\_get\_all\_\*() funtions support the smart extra.$foo columns
* Updated from global requirements
* objects: remove dict compat support from all XXXList() objects
* objects: allow creation of objects without dict item compat
* Replace stubs with mocks
* Updated from global requirements
* Use model\_query from oslo.db
* Small cleanup in db.sqlalchemy.api.action\_finish()
* Inline \_instance\_extra\_get\_by\_instance\_uuid\_query
* simplify database fixture to the features we use
* extract the timeout setup as a fixture
* move all conf overrides to conf\_fixture
* move ServiceFixture and TranslationFixture
* extract fixtures from nova.test to nova.test.fixtures
* move eventlet GREENDNS override to top level
* Updated from global requirements
* Remove unused db.api.fixed\_ip\_get\_by\_address\_detailed
* Add cn\_get\_all\_by\_host and cn\_get\_by\_host\_and\_node to ComputeNode
* Fix invalid read\_deleted value in \_validate\_unique\_server\_name()
* Adds hacking check for api\_version decorator
* rename oslo.concurrency to oslo\_concurrency
* Remove needless workaround in utils module
* Remove except Exception cases
* Workflow documentation is now in infra-manual
* Implement microversion support on api methods
* Updated from global requirements
* Enforce unique instance uuid in data model
* Break V2 XML Support
* Switch to moxstubout and mockpatch from oslotest
* Optimize 'floating\_ip\_bulk\_create' function
* factor out \_setup\_logging in test.py
* extract \_setup\_timeouts in test.py
* Port virtual-interfaces plugin to v2.1(v3) API
* Port floating\_ips extension to v2.1
* Removing the headroom calculation from db layer
* Change definition of API\_EXTENSION\_NAMESPACE to method
* Updated from global requirements
* remove test.ReplaceModule from test.py
* Added db API layer to add instance tag-list filtering support
* Added db API layer for CRUD operations on instance tags
* Implement 'personality' plugin for V2.1
* move the integrated tests into the functional tree
* Port v2 quota\_classes extension to work in v2.1(v3) framework
* dummy patch to let tox functional pass
* Remove Python 2.6 classifier
* Make aggregate filters use objects
* Enable pep8 on ./tools directory
* Updated from global requirements
* Replacement \`\_\` on \`\_LW\` in all LOG.warning part 1
* Replacement \`\_\` on \`\_LE\` in all LOG.exception
* Replacement \`\_\` on \`\_LI\` in all LOG.info - part 2
* Replacement \`\_\` on \`\_LI\` in all LOG.info - part 1
* Port assisted-volume-snapshots extension to v2.1
* Updated from global requirements
* Add debug log when over quota exception occurs
* Don't modify columns\_to\_join formal parameter in \_manual\_join\_columns
* Fix bulk floating ip ext to show uuid and fixed\_ip
* Use session in cinderclient
* Support instance\_extra fields in expected\_attrs on Instance object
* Rename private functions in db.sqla.api
* Updated from global requirements
* Allow passing columns\_to\_join to instance\_get\_all\_by\_host\_and\_node()
* GET servers API sorting compute/instance/DB updates
* Remove unused db.api.floating\_ip\_set\_auto\_assigned
* Remove unused db.api.flavor\_extra\_specs\_get\_item
* Create instance\_extra items atomically with the instance itself
* Add API schema for aggregates set\_metadata API
* Add 'instance-usage-audit-log' plugin for V2.1
* Deduplicate some INFO and AUDIT level messages
* move all tests to nova/tests/unit
* Add tox -e functional
* Drop max-complexity to 47
* Aggregate.save() shouldn't return a value
* Updated from global requirements
* Log sqlalchemy exception message in migration.py
* Add note on running single tests to HACKING.rst
* Use oslo.middleware
* Switch Nova to use oslo.concurrency
* remove use of explicit lockutils invocation in tests
* Port security-group-default-rules extension into v2.1
* Revert "Switch Nova to use oslo.concurrency"
* Updated from global requirements
* DB API: Pass columns\_to\_join to instance\_get\_active\_by\_window\_joined
* Drop python26 support for Kilo nova
* Switch Nova to use oslo.concurrency
* Split out agg multitenancy isolation unit tests
* Split agg image props isolation filter unit tests
* Port floating\_ip\_dns extention to v2.1
* Remove use of unicode on exceptions
* Port floating\_ips\_bulk extention to v2.1
* Revert "Replace outdated oslo-incubator middleware"
* Replacement \`\_\` on \`\_LE\` in all LOG.error
* Porting baremetal\_nodes extension to v2.1/v3
* Port fixed\_ip extention to v2.1
* Separate filter unit tests for agg extra specs
* Allow strategic loading of InstanceExtra columns
* Put a cap on our cyclomatic complexity
* Port os-networks-associate plugin to v2.1(v3) infrastructure
* Port os-tenant-networks plugin to v2.1(v3) infrastructure
* Replace outdated oslo-incubator middleware
* Remove unused modules copied from oslo-incubator
* Add instance\_group\_get\_by\_instance to db.api
* Updated from global requirements
* Port floating\_ip\_pools extention to v2.1
* Sync with latest oslo-incubator
* Use database joins for fixed ips to other objects
* Don't log every (friggin) migration version step during unit tests
* Port os-networks plugin to v2.1(v3) infrastructure
* Port cloudpipe extension to v2.1
* Break out over-quota calculation code from quota\_reserve()
* Log quota refresh in\_use message at INFO level for logstash
* Break out over-quota processing from quota\_reserve()
* Remove baremetal virt driver
* Port disk\_config extension for V2.1
* Update NoMoreFixedIps message description
* Break out quota usage refresh code from quota\_reserve()
* Optimize 'fixed\_ip\_bulk\_create' function
* Port fping extension to work in v2.1/v3 framework
* Use oslo.utils
* Break out quota refresh check code from quota\_reserve()
* Remove kombu as a dependency for Nova
* Remove keystoneclient requirement
* support TRACE\_FAILONLY env variable
* remove scary error message in tox
* Open Kilo development
* Add @\_retry\_on\_deadlock to \_instance\_update()
* Remove duplicate entry from .gitignore file
* Updated from global requirements
* Fix SecurityGroupExists error when booting instances
* Updated from global requirements
* add time to logging in unit tests
* Remove unused py33 tox env
* Making nova.compute.api to return Aggregate Objects
* Updated from global requirements
* Don't list entire module autoindex on docs index
* mock.assert\_called\_once() is not a valid method
* db: Add @\_retry\_on\_deadlock to service\_update()
* bring over pretty\_tox.sh from tempest
* Remove unused elevated context param from quota helper methods
* virt: move assertPublicAPISignatures into base test class
* Fix race condition in update\_dhcp
* correct inverted subtraction in quota check
* Updated from global requirements
* Fixes network\_get\_all\_by\_host to use indexes
* delete python bytecode before every test run
* Stop using intersphinx
* Block sqlalchemy migrate 0.9.2 as it breaks all of nova
* Add quotas for Server Groups (V2 API compatibility & V2.1 support)
* Add unit test to aggregate api
* Remove exclude coverage regex from coverage job
* Add instance\_extra\_update\_by\_uuid() to DB API
* Check requirements.txt files for missing (used) requirements
* Import Ironic Driver & supporting files - part 1
* Move to oslo.db
* warn against sorting requirements
* Allow \_poll\_bandwidth\_usage task to hit slave
* Port used\_limits & used\_limits\_for\_admin into v2.1
* Change v3 aggregate API to v2.1
* Port volumes extension to work in v2.1/v3 framework
* vmwareapi oslo.vmware library integration
* Port limits extension to work in v2.1/v3 framework
* Port image-size extension to work in v2.1/v3 framework
* Port v2 image\_metadata extension to work in v2.1(v3) framework
* Port v2 images extension to work in v2.1(v3) framework
* cmd: add nova-serialproxy service
* Changes V3 server\_actions extension into v2.1
* Adds nova-idmapshift cli utility
* Decrease amount of queries while adding aggregate metadata
* Add instance\_extra table and related objects
* Add extension block\_device\_mapping\_v1 for v2.1
* Let update\_available\_resource hit slave
* Remove concatenation with translated messages
* Port simple\_tenant\_usage into v2.1
* GET servers API sorting enhancements common utilities
* Add \_security\_group\_ensure\_default() DBAPI method
* Remove use of str on exceptions
* Updated from global requirements
* Updated from global requirements
* Correct seconds of a day from 84400 to 86400
* Fix sample files miss for os-aggregates
* Port os-server-groups extension to work in v2.1/v3 framework
* Use rfc3986 library to validate URL paths and URIs
* Allow three periodic tasks to hit slave
* Updated from global requirements
* Remove unused db api methods
* Hacking: a new hacking check was added that used an existing number
* Add new db api get functions for ec2\_snapshot
* Backport some v3 aggregate API unittest to v2 API
* Remove metadata/metadetails from instance/server groups
* docs - Set pbr 'warnerrors' option for doc build
* docs - Fix errors,warnings from document generation
* Optimize instance\_floating\_address\_get\_all
* Standardize logging for v3 api extensions
* Standardize logging for v2 api extensions
* Work on document structure and doc building
* Optimize db.floating\_ip\_deallocate
* Updated from global requirements
* Add hacking check for explicit import of \_()
* Add a retry\_on\_deadlock to reservations\_expire
* docs - Fix doc build errors with SQLAlchemy 0.9
* docs - Prevent eventlet exception during docs generation
* docs - Add an index for the command line utilities
* docs - Fix docstring issues
* Add extensible resources to resource tracker (2)
* Fix ImportError during docs generation
* Updated from global requirements
* Turn on pbr's autodoc feature
* Set python hash seed to 0 in tox.ini
* Stop depending on sitepackages libvirt-python
* Fix FloatingIP.save() passing FixedIP object to sqlalchemy
* Fix and Gate on E265
* Revert "Add extensible resources to resource tracker"
* Updated from global requirements
* Turn periodic tasks off in all unit tests
* Updated from global requirements
* Re-add H803 to flake8 ignore list
* Gate on F402/pep8
* Add extensible resources to resource tracker
* Cleanup and gate on hacking E711 and E712 rule
* Use oslo.i18n
* update ignore list for pep8
* Correctly reject request to add lists of hosts to an aggregate
* Avoid possible timing attack in metadata api
* Update requirements to include decorator>=3.4.0
* Cleanup and gate on hacking E713 rule
* Correct exception for flavor extra spec create/update
* Retry db.api.instance\_destroy on deadlock
* Fix and gate on H305 and H307
* Catch InvalidAggregateAction when deleting an aggregate
* Restore ability to delete aggregate metadata
* Updated from global requirements
* Fix more re-definitions and enable F811/F813 in gate
* Make compute api use util.check\_string\_length
* add get\_by\_metadata\_key to AggregateList object
* Fix duplicate definitions of variables/methods
* Require posix\_ipc for lockutils
* Updated from global requirements
* Updated from global requirements
* Use default rpc\_response\_timeout in unit tests
* Replace nova.utils.cpu\_count() with processutils.get\_worker\_count()
* Use auth\_token from keystonemiddleware
* Updated from global requirements
* Add API schema for v2.1/v3 aggregates API
* Fix object code direct use of other object modules
* Added statement for ... else
* Not count disabled compute node for statistics
* Removes the use of mutables as default args
* Updated from global requirements
* Add bulk create/destroy functionality to FloatingIP
* Cleanup and gate on pep8 rules that are stricter in hacking 0.9
* Updated from global requirements
* Remove duplicate code in Objects create() function
* Don't translate debug level logs in nova
* Fix H401,H402 violations and re-enable gating
* Bump hacking to 0.9.x series
* Add testing for hooks
* Revert "Remove quota-class logic from context and make unit tests pass"
* Check the length of aggregate metadata
* Add missing translation support
* Update HACKING.rst to include N320
* Updated from global requirements
* Move oslotest to test only requirements
* Revert "Remove quota\_class db API calls"
* Updated from global requirements
* Enable flake8 F841 checking
* Correct exception handling when create aggregate
* Add new ec2 instance db API calls
* Remove two unused db.api methods
* Payload meta\_data is empty when remove metadata
* Register objects in more services
* Add better coverage support under tox
* Add a reference to the nova developer documentation
* Enforce query order for getting VIFs by instance
* Fix CIDR values denoting hosts in PostgreSQL
* Sync common db and db/sqlalchemy
* Remove quota\_class db API calls
* Ignore etc/nova/nova.conf.sample
* Accurate exception info in api layer for aggregate
* Add specific regexp for timestamps in v2 xml
* Updated from global requirements
* Remove explicit dependency on amqplib
* Update links in README
* Make cells use Fault obj for create
* Updated from global requirements
* Remove quota-class logic from context and make unit tests pass
* Don't translate debug level logs in nova.cmd and nova.db
* Updated from global requirements
* Use strtime() specific timestamp regexp
* Normalize API extension updated timestamp format
* Hacking: add rule number to HACKING.rst
* Fixed many typos
* Don't translate debug level logs in nova.volume
* Add new ec2 volume db API calls
* Fix bad param name in method docstring
* Use eventlet.tpool.Proxy for DB API calls
* Updated from global requirements
* Loosen import\_exceptions to cover all of gettextutils
* Don't translate debug level scheduler logs
* Remove utils.reset\_is\_neutron() to avoid races
* Add specific doc build option to tox
* Use one query instead of two for quota\_usages
* Remove nova-clear-rabbit-queues
* Add with\_compute\_node to service\_get()
* Updated from global requirements
* Remove duplicate code from nova.db.sqlalchemy.utils
* Add lock on API layer delete floating IP
* Use debug level logging in unit tests, but don't save them
* Avoid the possibility of truncating disk info file
* support local debug logging
* Updated from global requirements
* Revert "Use debug level logging during unit tests"
* Nova utils: add in missing translation
* Make sure leases are maintained until release
* Rename instance\_actions v3 to server\_actions
* Drop nova-rpc-zmq-receiver man-page
* Open Juno development
* Remove zmq-receiver from setup.cfg
* Fix the section name in CONTRIBUTING.rst
* Add nova.conf.sample to gitignore
* Updated from global requirements
* Persist image format to a file, to prevent attacks based on changing it
* Add missing test for None in sqlalchemy query filter
* Tell pip to install packages it sees globally
* Bypass the database if limit=0 for server-list requests
* No longer any need to pass admin context to aggregate DB API methods
* Add a decorator decorator that checks func args
* Updated from global requirements
* Remove the nova.config.sample file
* Fix equal\_any() DB API helper
* Revert "Adding image multiple location support"
* Revert "enable cloning for rbd-backed ephemeral disks"
* Update aggregate should not allow duplicated names
* Updated from global requirements
* Add py27local tox target
* Fix difference between mysql & psql of flavor-show
* Task cleanup\_running\_deleted\_instances can now use slave
* enable cloning for rbd-backed ephemeral disks
* Use debug level logging during unit tests
* Add os-server-external-events V3 API
* No longer call check\_uptodate.sh in pep8
* Adding image multiple location support
* Sync the latest DB code from oslo-incubator
* Updated from global requirements
* Adds get\_console\_connect\_info API
* Support IPv6 when booting instances
* Prevent caller from specifying id during Aggregate.create()
* Enable flake8 H404 checking
* Use oslo-common's logging fixture
* Updated from global requirements
* Updated from global requirements
* Fix instance\_get\_all\_by\_host to actually use slave
* Periodic task poll\_bandwidth\_usage can use slave
* Adds create backup server extension for the V3 API
* Fix the indents of v3 API sample docs
* Replace assertEqual(None, \*) with assertIsNone in tests
* Make is\_neutron() thread-safe
* Fix upper bound checking for flavor create parameters
* Replace oslo.sphinx with oslosphinx
* Change assertTrue(isinstance()) by optimal assert
* Adds migrate server extension for V3 API
* Refactor stats to avoid bad join
* Remove @author from copyright statements
* DB: logging exceptions should use save\_and\_reraise
* Remove quota classes extension from the V3 API
* Renumber some nova hacking checks
* Remove tox locale overrides
* Removes os-instance-usage-audit-log from the V3 API
* Removes os-simple-tenant-usage from the V3 API
* Fix migrations changing the type of deleted column
* Typo in backwards compat names for notification drivers
* Support building wheels (PEP-427)
* Fix misspellings in nova
* Add super call to db Base class
* Add hacking test to block cross-virt driver code usage
* Remove vi modelines
* Port to oslo.messaging
* Adds suspend server extension for V3 API
* Adds pause server extension for V3 API
* Removes XML namespace definitions from V3 API plugins
* Make fixed\_ip\_get\_by\_address() take columns\_to\_join
* Refactor return value of fixed\_ip\_associate calls
* Retry reservation commit and rollback on deadlock
* Adds lock server extension for V3 API
* Remove V3 API XML entry points
* Remove v3 xml API sample tests
* Finish compacting pre-Icehouse database migrations
* Compact pre-Icehouse database migrations <= 210
* Compact pre-Icehouse database migrations <= 200
* Compact pre-Icehouse database migrations <= 190
* Use (# of CPUs) workers by default
* Remove policy check in db layer for aggregates
* Add db.dnsdomain\_get\_all() method
* Updated from global requirements
* Small edits on help strings
* Make floating\_ip\_bulk\_destroy deallocate quota if not auto\_assigned
* Add explicit discussion of dependencies to README.rst
* Fix multi availability zone issue part 2
* remove redundant \_\_init\_\_() overwriting when getting ExtensionResources
* Use oslo.rootwrap library instead of local copy
* Calculate default security group into quota usage
* Remove unused dict BYTE\_MULTIPLIERS
* replace type() to isinstance() in nova
* Make availability\_zone optional in create for aggregates
* Enable compute\_node\_update to tolerate deadlocks
* Revert "Whitelist external netaddr requirement"
* Add finer granularity to host aggregate APIs
* Adds new method nova.utils.get\_hash\_str
* Ensure instance action event list in order
* Cleanup the flake8 section of tox.ini
* Whitelist external netaddr requirement
* Compact pre-Icehouse database migrations <= 180
* Aggregate: Hosts isolation based on image properties
* Removes disk-config extension from v3 api
* Add apache2 license header to appropriate files for enabling H102
* Adds user\_data extension to nova.api.v3.extensions
* Add wsgiref to requirements.txt
* Make \_change\_index\_columns use existing utility methods
* Fix interprocess locks when running unit-tests
* Allow some instance polling periodic tasks to hit db slave
* Retry on deadlock in instance\_metadata\_update
* Setting the xen vm device id on vm record
* Rename instance\_type to flavor in nova.utils and nova.compute.utils
* Refactor time conversion helper function for objects in db api
* Remove smoketests
* Remove middleware ratelimits from v3 api
* Require List objects to be able to backlevel their contents
* Add error as not-in-progress migration status
* Correct uses of :params in docstrings
* Compact pre-Icehouse database migrations <= 170
* Updated from global requirements
* Rename instance\_type to flavor in baremetal virt driver
* Sync middleware audit, base, and notifier from oslo
* Fix changes-since filter for list-servers API
* Make it possible to override test timeout value
* Add atomic flavor access creation
* Fix monkey\_patch docstring bug
* Extends V3 servers api for pci support
* Compact pre-Icehouse database migrations <= 160
* Compact pre-Icehouse database migrations <= 150
* Compact pre-Icehouse database migrations <= 140
* Periodic task \_heal\_instance\_info\_cache can now use slave db
* Don't overwrite marker when checking if it exists
* Make check more pythonic
* Delete instance faults when deleting instance
* Don't gate on E125
* Fix a lazy-load exception in security\_group\_update()
* Bump to sqlalchemy-migrate 0.8.2
* Use model\_query() instead of session.query in db.instance\_destroy
* Periodic task \_poll\_unconfirmed\_resizes can now use slave db
* Handle UnicodeEncodeError in validate\_integer
* Removes os-personalities extension from the V3 API
* Clean up how test env variables are parsed
* Remove V3 API version of coverage extension
* Rename InstanceType exceptions to Flavor
* Remove used\_limits extension from the V3 API
* More instance\_type -> flavor renames in db.api
* Xenapi: Allow windows builds with xentools 6.1 and 6.2
* Removed unused methods from db.api
* Moved quota headroom calculations into quota\_reserve
* Checking existence of index before dropping
* add hints to api\_samples documentation
* nit: fix indentation
* Refactor UnexpectedTaskStateError for handling of deleting instances
* Move \`diff\_dict\` to compute API
* Comments for db.api.compute\_node\_\*() methods
* Add DeleteFromSelect to avoid database's limit
* Include name/level in unit test log messages
* Remove instance\_type\* proxy methods from nova.db.api
* Make security\_group\_rule\_get\_by\_security\_group() honor columns
* Nova-all: Replace basestring by six for python3 compatability
* Fix tests to work with mysql+postgres concurrently
* Enable extension access\_ips for v3 API
* Allow \_sync\_power\_states periodic task to hit slave DB
* Add nova.db.migration.db\_initial\_version()
* Nova db/api.py docstring cleanups..
* Remove extra space in tox.ini
* Replace basestring by six for python3 compatability
* Make security\_group\_get() more flexible about joins
* Make Object FieldType take an object name instead of a class
* Updated from global requirements
* Merging two mkfs commands
* Updated from global requirements
* Updates OpenStack Style Commandments link
* Updated from global requirements
* Adding support for multiple hypervisor versions
* Fix DB API mismatch with sqlalchemy API
* Add missing key attribute to AggregateList.get\_by\_host()
* Use the oslo fixture module
* Move exception definitions out of db api
* Migrate Aggregate object to Fields
* Remove obsolete redhat-eventlet.patch
* Fixes typos in nova/db code
* Avoid clobbering {system\_,}metadata dicts passed to instance update
* Move \`utils.hash\_file\` -> \`imagecache.\_hash\_file\`
* Remove \`utils.timefunc\` function
* Remove \`utils.total\_seconds\`
* Remove \`utils.get\_from\_path\`
* Fixes several misc typos in scheduler code
* Remove unused dict functions from utils
* Log if a quota\_usages sync updates usage information
* Open Icehouse development
* Adds missing entry in setup.cfg for V3 API shelve plugin
* Prefix \`utils.get\_root\_helper\` with underscore
* Remove \`utils.debug\`
* Remove \`utils.last\_octet\`
* Remove \`utils.parse\_mailmap\`
* Updated from global requirements
* Remove unecessary \`get\_boolean\` function
* Fixes inconsistency in flavors list with marker
* Fix console db can't load attribute pool
* Require oslo.config 1.2.0 final
* Fix Instance object assumptions about joins
* Code change for regex filter matching
* Fixes modules with wrong file mode bits
* Convert TestCases to NoDBTestCase
* Convert TestCases to NoDBTestCase
* Prune node stats at compute node delete time
* Fix non-unicode string values on objects
* xenapi: fix pep8 violations in nova plugins
* Retry on deadlock in instance\_metadata\_delete
* delete a non existent flavor extra spec returns 204
* Don't use ModelBase.save() inside of transaction
* Ensure anti affinity scheduling works
* Don't use sudo to discover ipv4 address
* Update requirements not to boto 2.13.0
* Ignore H803 from Hacking
* Add encryption support for volumes to libvirt
* Don't return query from db API
* Fix migration 211 to downgrade with MySQL
* VMware image clone strategy settings and overrides
* Clean up object comparison routines in tests
* Clean up duplicated change-building code in objects
* Fix compute\_node\_get\_all() for Nova Baremetal
* Add missing indexes back in from 152
* Add methods to get image metadata from instance
* Revert baremetal v3 API extension
* Updated from global requirements
* Remove indirect dependency from requirements.txt
* Allow block devices without device\_name
* Port to oslo.messaging.Notifier API
* Add expected\_errors for extension aggregates v3
* Add missing Aggregate object tests
* Generalize the \_make\_list() function for objects
* Add columns\_to\_join to instance\_update\_and\_get\_original
* Create mixin class for common DB fields
* Add nova.utils.get\_root\_helper()
* Inherit base image properties on instance creation
* update neutronclient to 2.3.0 minimum
* Make compute\_api use Aggregate objects
* Add Aggregate object model
* Port flavormanage extension to v3 API Part 2
* Add os-block-device-mapping to v3 API
* xenapi: add support for auto\_disk\_config=disabled
* Add support for API message localization
* Port Cheetah templates to Jinja2
* Fix and gate on H302 (import only modules)
* Adds V3 API samples for agents, aggregates and certificates
* Adds support for security\_groups for V3 API server create
* Add mock to test-requirements
* Disconnect from iSCSI volume sessions after live migration
* Safe db.api.compute\_node\_get\_all() performance improvement
* Adds API version discovery support for V3
* Port multiple\_create extension to V3 API
* Filter network by project id
* Pci Device DB support
* Fix error messages in v3 aggregate API
* Removes V3 API images and image\_metadata extensions
* Add db.block\_device\_mapping\_get\_by\_id
* Fix typo in baremetal docs
* Removes fixed ips extension from V3 API
* Link Service.compute\_node with ComputeNode object
* Fix aggregate creation/update with null or too long name
* Fixes sync issue for user level resources
* Fix remove\_fixed\_ip test with CastAsCall
* Allow more than one ephemeral device in the DB
* Add unique constraint to AggregateMetadata
* Add jsonschema to Nova requirements.txt
* VMware: Ensure Neutron networking works with VMware drivers
* Have tox install via setup.py develop
* Remove deprecated CONF.fixed\_range
* Offer a paginated version of flavor\_get\_all
* Upgrade to Hacking 0.7
* Fix logic in add\_host\_to\_aggregate()
* Fix typo in exception message
* Fix message for server name with whitespace
* Demote personalities from core of API v3 as extensions os-personality
* Port disk\_config API to v3 Part 2
* Fix instance\_group\_delete() DB API method
* User quota update should not exceed project quota
* Fix H501: Do not use locals() for string formatting
* maint: remove redundant default=None for config options
* Catch ldap ImportError
* Merged flavor\_disabled extension into V3 core api
* Merged flavorsextraspecs extension into core API
* Enable no\_parent and file\_only security
* Pull out instance object handling for use by create also
* Fix migration downgrade 146 with mysql
* Retry failed instance file deletes
* Do not use context in db.sqla.api private methods
* Finish DB session cleanup
* Clean up session in db.sqla.api.migration\_\* methods
* Clean up session in db.sqla.api.network\_\* and sec\_groups\_\* methods
* Add plug-in modules for direct downloads of glance locations
* Clean destroy for project quota
* Clean up session in db.sqla.api.get\_ec2 methods
* Clean up db.sqla.api.instance\_\* methods
* Fix multi availability zone issue part 1
* Demote admin-passwd from core of API v3 as extensions os-admin-password
* handle auto assigned flag on allocate floating ip
* Use cached nwinfo for secgroup rules
* Fix and Gate on H303 (no wildcard imports)
* Port server\_usage API to v3 part 2
* Enabled hacking check for Python3 compatible print (H233)
* Enabled the hacking warning for Py3 compatible octal literals (H232)
* Remove fping plugin from V3 API
* Use project quota as default user quota
* Update references with new Mailing List location
* Remove the monkey patching of \_ into the builtins
* Set lock\_path in tests
* Bypass queries which cause a contradiction
* Add latest oslo DB support
* Add note why E712 is ignored
* Start using hacking 0.6
* Port migrations extension to v3 API part 2
* Per-project-user-quotas for more granularity
* Add unique constraint to InstanceTypeExtraSpecs
* Remove instance\_metadata\_get\_all\* from db api
* Sync sample config file generator with Oslo
* Allow exceptions to propagate through stevedore map
* Revert "Add requests requirement capped <1.2.1."
* Move \_validate\_int\_value controller func to utils
* Ensure dates are dates, not strings
* Use timeutils.utcnow() throughout the code
* Check that the configuration file sample is up to date
* Make Instance.save() handle cells DB updates
* ec2-api: Disable describing of instances using deleted tags as filter
* port BaremetalNodes API into v3 part2
* Move resource usage sync functions to db backend
* Remove locals() from various places
* Support scoped keys in aggregate extra specs filter
* Port AttachInterfaces API to v3 Part 2
* Port used limits extension to v3 API Part 2
* Porting os-aggregates extensions to API v3 Part 2
* Porting os-aggregates extensions to API v3 Part 1
* Porting server metadata core API to API v3 Part 2
* Port limits core API to API-v3 Part 2
* Fix filtering aggregate metadata by key
* remove python-glanceclient cap
* Fix IPAddress and CIDR type decorators
* Port user\_data API to v3 Part 2
* Port flavor\_rxtx extension to v3 API Part 2
* Fix aggregate\_get\_by\_host host filtering
* xenapi:populating hypervisor version in host state
* Port deferredDelete API to v3 Part 2
* Port instance\_actions API to v3 Part 2
* Prompt error message when creating aggregate without aggregate name
* Port AvailabilityZone API to v3 Part 2
* Port service API to v3 Part 2
* Port hide srvr addresses extension to v3 API Pt2
* Port extended status extension to v3 API Part 2
* Port os-console-output extension to API v3 Part 2
* Make db/api strip timezones for datetimes
* update Quantum usage to Neutron
* Fix aggregate update
* Port extended-availability-zone API into v3 part2
* Add unique constraints to AggregateHost
* Port server password extension to v3 API Part 2
* Add -U to the command line for pip
* Change force\_dhcp\_release default to True
* port Host API into v3 part2
* Port admin-actions API into v3 part2
* Fix issue with pip installing oslo.config-1.2.0
* Properly pin pbr and d2to1 in setup.py
* Add Instance.get\_by\_id() query method
* Port images metadata functionality to v3 API Part 2
* Add unique constraint to ConsolePool
* Add "ExtendedVolumes" API extension
* Port multinic extension to v3 API Part 2
* Port security groups extension to v3 API Part 2
* Fix info\_cache and bw\_usage update race
* Change db.api.instance\_type\_ to db.api.flavor\_
* Add unique constraint to AgentBuild
* Ensure flake8 tests run on all api code
* Port extended-server-attributes API into v3 part2
* List migrations through Admin API
* Port fping extension to v3 API Part 2
* Allow filters to only run once per request if their data is static
* Fix formatting errors in documentation
* Use oslo.sphinx and remove local copy of doc theme
* Add unique constraints to Service
* Add unique constraint to FixedIp
* Change unique constraint in VirtualInterface
* Fix and gate on E125
* Make flavors is\_public option actually work
* Make instance\_update() string-convert IP addresses
* Port agent API to v3 Part 2
* Add unique constraints to Quota
* Port scheduler hints extension to v3 API Part 2
* Port hypervisor API into v3 part2
* port Instance\_usage\_audit\_log API into v3 part2
* Add unique constraint for security groups
* Add HACKING check for db session param
* Port coverage API into v3 part2
* Clean up and make HACKING.rst DRYer
* Fix binding of SQL query params in DB utils
* Port quota classes extension to v3 API Part 2
* Port server\_diagnostics extension to v3 API Part2
* Port images functionality to v3 API Part 2
* Port cells extension to v3 API Part 2
* Port consoles extension API into v3 part2
* Session cleanup for db.security\_group\_\* methods
* Port config\_drive API to v3 Part 2
* Fix metadata access in prep for instance objects
* Fix typo for instance\_get\_all\_by\_filters() function
* Port flavor\_disabled extension to v3 API Part 2
* Fix sqlalchemy utils
* Port flavor\_access extension to v3 API Part 2
* Port Simple\_tenant\_usage API to v3 Part 2
* Better default for my\_ip if 8.8.8.8 is unreachable
* db.compute\_node\_update: ignore values['update\_at']
* Port quota API into v3 part2
* Update pyparsing to 1.5.7
* Refactor db.security\_group\_get() instance join behavior
* Port missing bits from httplib2 to requests
* Retry quota\_reserve on DBDeadlock
* Revert "Add oslo-config-1.2.0a2 and pbr>=0.5.16 to requirements."
* Add oslo-config-1.2.0a2 and pbr>=0.5.16 to requirements
* Remove usage of locals() for formatting from nova.scheduler.\*
* Remove db session hack from conductor's vol\_usage\_update()
* Add unique constraints to Cell
* Accept is\_public=None when listing all flavors
* Add missing tests for cell\_\* methods
* Enforce sqlite-specific flow in drop\_unique\_constraint
* Remove unused cert db method
* Session cleanup for db.security\_group\_rule\_\* methods
* Organize limits units and per-units constants
* Replace utils.to\_bytes() with strutils.to\_bytes()
* Backup and restore object registry for tests
* Port flavors core API to v3 tree
* Remove trivial cases of unused variables (1)
* Port certificates API to v3 Part 2
* Fix and enable H403 tests
* Update to the latest stevedore
* Add missing tests for nova.db.api.network\_\*
* Cells: Add support for global cinder
* Remove explicit distribute depend
* Use an inner join on aggregate\_hosts in aggregate\_get\_by\_host
* Nova instance group DB support
* Replace functions in utils with oslo.fileutils
* Refactors get\_instance\_security\_groups to only use instance\_uuid
* DB migration to the new BDM data format
* Enhance group handling in extract\_opts
* Use InstanceList object for init\_host
* Sending volume IO usage broken
* Replace openstack-common with oslo in HACKING.rst
* Port evacuate API to v3 Part 2
* Speeding up scheduler tests
* Port rescue API to v3 Part 2
* Alphabetize v3 API extension entry point list
* Add missing exception to cell\_update()
* Import osapi\_v3/enabled option in nova/test
* More detailed log in failing aggregate extra filter
* Call scheduler for run\_instance from conductor
* Fix a race where a soft deleted instance might be removed by mistake
* Delete unused bin directory
* Fix postgresql failures related to Data type
* hardcode pbr and d2to1 versions
* Adds ability to black/whitelist v3 API extensions
* Add notes about how doc generation works
* python3: Add py33 to tox.ini
* Improve Python 3.x compatibility
* Ports consoles API to v3 API
* Fixed two minor docs niggles
* Adds v3 API disable config option
* Ports ips api to v3 API
* Cosmetic fix to parameter name in DB API
* Removed session from reservation\_create()
* Raise exception instances not exception classes
* Don't delete sys\_meta on instance delete
* Fix volume IO usage notifications been sent too often
* Fix \_drop\_unique\_constraint\_in\_sqlite() function
* Add update method of security group name and description
* Add posargs support to flake8 call
* Enumerate Flake8 E12x ignores
* Fix and enable flake8 F823
* Fix and enable flake8 F812
* In utils.tempdir, pass CONF.tempdir as an argument
* Enumerate Flake8 Fxxx ignores
* Enable flake8 E721
* API Extensions framework for v3 API Part 2
* Change db \`deleted\` column type utils
* Fix tests for sqlalchemy utils
* Moved sample network creation out of unittest base class constructor
* Make a few places tolerant of sys\_meta being a dict
* Remove locals() from scheduler filters
* Rename requires files to standard names
* Removed session from fixed\_ip\_\*() functions
* Raise AgentBuildNotFound on updating/destroying deleted object
* Don't update API cell on get\_nwinfo
* Fix error in instance\_get\_all\_by\_filters() use of soft\_deleted filter
* Fix require\_context() decorators
* Use strict=True instead of \`is\_valid\_boolstr\`
* Editable default quota support
* Remove usage of locals() for formatting from nova.api.\*
* Switch to flake8+hacking
* Don't update DB records for unchanged stats
* Mox should cleanup before stubs
* Add missing tests for db.fixed\_ip\_\*(). functions
* Cells: Don't allow active -> build
* Use Oslo's \`bool\_from\_string\`
* Hide lock\_prefix argument using synchronized\_with\_prefix()
* Move get\_table() from test\_migrations to sqlalchemy.utils
* API extensions framework for v3 API
* Record smoketest dependency on gFlags
* Add pointer to compute driver matrix wiki page
* Update rootwrap with code from oslo
* Remove invalid block\_device\_mapping volume\_size of ''
* Add sqlalchemy migration utils.create\_shadow\_table method
* Add sqlalchemy migration utils.check\_shadow\_table method
* Optimize db.instance\_floating\_address\_get\_all method
* Session cleanup for db.floating\_ip\_\* methods
* Optimize instance queries in compute manager
* Convert to using newly imported processutils
* Transition from openstack.common.setup to pbr
* Remove security\_group\_handler
* Sync oslo-incubator print statement changes
* Convert to using oslo's execute() method
* Remove race condition (in FloatingIps)
* Add missing tests for db.floating\_ip\_\* methods
* Delete InstanceSystemMetadata on instance deletion
* Volume IO usage gets reset to 0 after a reboot / crash
* Add the availability\_zone to the volume.usage notifications
* Performance optimization for contrib.flavorextraspecs
* Refactor work with db.instance\_type\_\* methods
* Fix bug in db.instance\_type\_destroy
* Move db.instance\_type\_extra\_specs\_\* to db.instance\_type\_\* methods
* Fix fixed\_ip\_count\_by\_project in DB API
* Add option to exclude joins from instance\_get\_by\_uuid
* Import and convert to oslo loopingcall
* Remove orphaned db method instance\_test\_and\_set
* Allow listing fixed\_ips for a given compute host
* Don't join metadata twice in instance\_get\_all()
* Optimize some of the periodic task database queries in n-cpu
* Change DB API instance functions for selective metadata fetching
* Replace metadata joins with another query
* Remove unnecessary LOG initialisation
* Add tenant/ user id to volume usage notifications
* Import eventlet in \_\_init\_\_.py
* Allow describe\_instances to use tags for searches
* Remove race condition (in InstanceTypeProjects)
* Optimize resource tracker queries for instances
* Move console scripts to entrypoints
* Update latest oslo.setup
* Remove print statements
* Return 409 on creating/importing same name keypair
* Add CRUD methods for tags to the EC2 API
* Adds Tilera back-end for baremetal
* Remove race condition (in InstanceTypes)
* Add missing tests for db.instance\_type\_\* methods
* set up FakeLogger for root logger
* Include Co-authored-by entries in AUTHORS
* Sync everything from oslo-incubator
* Set version to 2013.2
* Refactor db.service\_destroy and db.service\_update methods
* Enable tox use of site-packages for libvirt
* Fix db archiving bug with foreign key constraints
* Add quotas for fixed ips
* Makes safe xml data calls raise 400 http error instead of 500
* Check keypair destroy result operation
* Remove sqlalchemy calling back to DB API
* Fix: Nova aggregate API throws an uncaught exception on invalid host
* Skip deleted fixed ip address for os-fixed-ips extension
* Don't load system\_metadata when it isn't joined
* Delete instance metadata when delete VM
* Refactor work with session in db.block\_device\_mapping\_\* methods
* Force resource updates to update updated\_at
* Remove instance['instance\_type'] relationship from db api
* Extended server attributes can show wrong hypervisor\_hostname
* Compile BigInteger to INTEGER for sqlite
* Remove uses of instance['instance\_type'] from nova/compute
* Make nova-manage db archive\_deleted\_rows more explicit
* add .idea folder to .gitignore pycharm creates this folder
* Update tox.ini to support RHEL 6.x
* Remove parameters containing passwords from Notifications
* Standarize ip validation along the code
* Rename VMWare to VMware
* docs should indicate proper git commit limit
* Imporove db.sqlalchemy.api.\_validate\_unique\_server\_name method
* Remove unused db calls from nova.db.api
* Compute manager should remove dead resources
* instance\_info\_cache\_update creates wrongly
* don't stack trace if long ints are passed to db
* Add instance\_type\_get() to virt api
* Remove duplicate options(joinedload) from aggregates db code
* Update OpenStack LLC to Foundation
* Additional tests for safe parsing with minidom
* Retry floating\_ip\_fixed\_ip\_associate on deadlock
* Sync nova with oslo DB exception cleanup
* Remove unused nova.db.api:instance\_get\_all\_by\_reservation
* Migration 146: Execute delete call
* Spelling: compatable=>compatible
* Move DB thread pooling to DB API
* Remove race condition (in Networks)
* Move some context checking code from sqlalchemy
* Add Nova quantum security group proxy
* Fix handling of source\_groups with no-db-compute
* Multi-tenancy isolation with aggregates
* Fix broken logging imports
* Use oslo-config-2013.1b4
* Add a safe\_minidom\_parse\_string function
* Retry bw\_usage\_update() on innodb Deadlock
* Default SG rules for the Security Group "Default"
* create new cidr type for data storage
* Remove unused nova.db.api:network\_get\_by\_bridge
* Remove unused nova.db.api:network\_get\_by\_instance
* Remove unused db calls from nova.db.sqlalchemy.api
* Remove unused db calls
* Small spelling fix in sqlalchemy utils
* Remove race condition (in TaskLog)
* Add generic dropper for duplicate rows
* Fix typo/bug in generic UC dropper
* clean up missing whitespace after ':'
* Push 'Error' result from event to instance action
* Assign unique names with os-multiple-create
* Harmonize PEP8 checking between tox and run\_tests.sh
* Allow archiving deleted rows to shadow tables, for performance
* Synchronize code from oslo
* Canonizes IPv6 before insert it into the db
* API extension for accessing instance\_actions
* Use joinedload for system\_metadata in db
* Module import style checking changes
* Check the length of flavor name in "flavor-create"
* Update docs about testing
* Add generic UC dropper
* Fix regression in non-admin simple\_usage:show
* Fix inaccuracies in the development environment doc
* Update to simplified common oslo version code
* Use joined version of db.api calls
* Move floating ip db access to calling side
* Added the build directory to the tox.ini list pep8 ignores
* Fix lazy load 'system\_metadata' failed problem
* Remove strcmp\_const\_time
* Update .coveragerc
* Use oslo database code
* Default value of monkey\_patch\_modules is broken
* Update HACKING.rst per recent changes
* Optimize floating ip list to make one db query
* Reimplement is\_valid\_ipv4()
* Tweakify is\_valid\_boolstr()
* Make system\_metadata update in place
* Record instance actions and events
* Postgres does not like empty strings for type inet
* Fixes 'not in' operator usage
* Fixes "is not" usage
* Code cleanup for rebuild block device mapping
* Nova Hyper-V driver refactoring
* Make sure there are no unused import
* Refactoring/cleanup of compute and db apis
* Allow users to specify a tmp location via config
* Add system\_metadata to db.instance\_get\_active\_by\_window\_joined
* Enable N302: Import modules only
* clean up api\_samples documentation
* populate dnsmasq lease db with valid leases
* Fix rendering of FixedIpNotFoundForNetworkHost
* Fix hacking N302 import only modules
* Avoid db lookup in info\_from\_instance()
* Fixes task\_log\_get and task\_log\_get\_all signatures
* Provide creating real unique constraints for columns
* Fix nova coverage
* Fix floating ips with external gateway
* Add support for Option Groups in LazyPluggable
* fix misspellings in logs, comments and tests
* Remove restoring soft deleted entries part 2
* Remove restoring soft deleted entries part 1
* Remove some db calls from db servicegroup driver
* Cells: Fix for relaying instance info\_cache updates
* Ignore auto-generated files by lintstack
* Clean up db network db calls for fixed and float
* Fix multi line docstring tests in hacking.py
* don't allow crs in the code
* enforce server\_id can only be uuid or int
* Move compute node operations to conductor
* correcting for proper use of the word 'an'
* Add nova-spicehtml5proxy helper
* Clean up get\_instance\_id\_by\_floating\_address
* Use testrepository setuptools support
* Cells: Add cells API extension
* More HostAPI() cleanup for cells
* Revert "Use testr setuptools commands."
* enable hacking.py self tests
* Fix uses of service\_get\_all\_compute\_by\_host
* use postgresql INET datatype for storing IPs
* Clean up compute API image\_create
* Use testr setuptools commands
* Fix quota updating when admin deletes common user's instance
* Move logic from os-api-host into compute
* make runtests -p act more like tox
* fix new N402 errors
* Move service\_down\_time to nova.service
* fix N402 for rest of nova
* fix N402 for nova/db
* Move osapi\_compute\_unique\_server\_name\_scope to db
* Move compute\_topic into nova.compute.rpcapi
* Fix N402 for nova/api
* New instance\_actions and events table, model, and api
* Remove availability\_zones from service table
* Enable Aggregate based availability zones
* Refresh instance metadata in-place
* CLI for bare-metal database sync
* Move global glance opts into nova.image.glance
* fix N401 errors, stop ignoring all N4\* errors
* PXE bare-metal provisioning helper server
* Changed 'OpenStack, LLC' message to 'OpenStack Foundation'
* Invert test stream capture logic for debugging
* Refactor work with TaskLog in sqlalchemy.api
* NovaBase.delete() rename to NovaBase.soft\_delete()
* Refactor periodic tasks
* Timeout individual tests after one minute
* Cells: Add the main code
* Add helper methods to nova.paths
* Move global path opts in nova.paths
* Fix bug and remove update lock in db.instance\_test\_and\_set()
* Remove unused imports
* Database metadata performance optimizations
* db.network\_delete\_safe() method performance optimization
* db.security\_group\_rule\_destroy() method performance optimization
* Database reservations methods performance optimization
* Using query.soft\_delete() method insead of soft deleting by hand
* Removed unused imports
* Enable nova exception format checking in tests
* Eliminate race conditions in floating association
* Parameterize database connection in test.py
* Move baremetal database tests to fixtures
* Add .testrepository/ directory to gitginore
* Update exceptions to pass correct kwargs
* Remove fake\_tests opt from test.py
* Move TimeOverride to the general reusable-test-helper place
* Add more association support to network API
* Replace fixtures.DetailStream with fixtures.StringStream
* Use testr to run nova unittests
* Add general mechanism for testing api coverage
* remove session param from instance\_get
* remove session param from instance\_get\_by\_uuid
* Move some opts into nova.utils
* Properly scope password options
* Move monkey patch config opts into nova.utils
* Move all temporary files into a single /tmp subdir
* Use fixtures library for nova test fixtures
* Remove unused bridge interfaces
* Order instance faults by created\_at and id
* Fix pep8 exclude logic for 1.3.3
* Add agent build API support for list/create/delete/modify agent build
* Make policy.json not filesystem location specific
* Add pyflakes option to tox
* Implements volume usage metering
* Fix test suite to use MiniDNS
* remove session param from certificate\_get
* improve sessions for key\_pair\_(create,destroy)
* Include 'hosts' and 'metadetails' in aggregate
* Make resize and multi-node work properly together
* Provide better error message for aggregate-create
* Allow multi\_host compute nodes to share dhcp ip
* Add pluggable ServiceGroup monitoring APIs
* Add SSL support to utils.generate\_glance\_url()
* Truncate large console logs in libvirt
* Move global fixture setup into nova/test.py
* Add a CONTRIBUTING file
* Cells: Re-add DB model and calls
* Move sql options to nova.db.sqlalchemy.session
* Add missing binary
* Pin pep8 to 1.3.3
* Use CONF.import\_opt() for nova.config opts
* Remove nova.config.CONF
* Add the beginnings of the nova-conductor service
* Remove useless function quota\_usage\_create
* Compact pre-Grizzly database migrations
* Ignore editor backup files
* Remove nova.flags
* improve session handling around instance\_ methods
* add instance\_type\_extra\_specs to instances
* Change a toplevel function comment to a docstring
* Make ec2\_instance\_create db method consistant across db apis
* Adds documentation for Hyper-V testing
* Update api\_samples README.rst to use tox
* Allow group='foo' in self.flags() for tests
* Make sure instance data is always refreshed
* Remove gen\_uuid()
* Isolate tests from the environment variable http\_proxy
* Sync latest code from oslo-incubator
* Add DB query to get in-progress migrations
* Adds REST API support for Fixed IPs
* Added separate bare-metal MySQL DB
* Ban db import from nova/virt
* Upgrade pylint version to 0.26.0
* Removes fixed\_ip\_get\_network
* improve session handling around virtual\_interfaces
* improve sessions for reservation
* improve session handling around quotas
* Remove custom test assertions
* Add nova option osapi\_compute\_unique\_server\_name\_scope
* Switch from FLAGS to CONF in tests
* Updated scheduler and compute for multiple capabilities
* Switch from FLAGS to CONF in nova.db
* Removed two unused imports
* Remove unused functions
* Fixes a bug in nova.utils, due to Windows compatibility issues
* improve session handling of dnsdomain\_list
* Make tox.ini run pep8/hacking checks on bin
* clean up dnsdomain\_unregister
* Make utils.mkfs() set label when fs=swap
* Remove nova-volume DB
* Make instance\_system\_metadata load with instance
* Remove unused function require\_instance\_exists
* Fix warnings found with pyflakes
* make utils.mkfs() more general
* Cleanup nova.db.sqlalchemy.api import
* Use uuidutils.is\_uuid\_like for uuid validation
* Switch from FLAGS to CONF in misc modules
* Move parse\_args to nova.config
* improve sessions around floating\_ip\_get\_by\_address
* Improve EC2 describe\_security\_groups performance
* Increased MAC address range to reduce conflicts
* Move to a more canonicalized output from qemu-img info
* Add call to reset quota usage
* Remove nose detailed error reporting
* improve sessions around compute\_node\_\*
* Use testtools as the base testcase class
* removes the nova-volume code from nova
* remove session parameter from fixed\_ip\_get
* Make instance\_get\_all() not require admin context
* Fix nova-network MAC collision logic
* Make nova-rootwrap optional
* Fix hardcoded topic strings with constants
* Update common
* Remove unused imports in setup.py
* Migrate to fileutils and lockutils
* Migrate network of an instance
* Remove deprecated root\_helper config
* Remove is\_admin\_context from sqlalchemy.api
* SanISCSIDriver SSH execution fixes
* Fix bad Log statement in nova-manage
* Move mkfs from libvirt.utils to utils
* Add trove classifiers for PyPI
* Fix and enable pep8 E502, E712
* read\_deleted snapshot and volume id mappings
* Set read\_deleted='yes' for instance\_id\_mappings
* Add TestCase.stub\_module to make stubbing modules easier
* Update tools hacking for pep8 1.2 and beyond
* Remove outdated moduleauthor tags
* Add aggregates extension to API samples test
* Remove TestCase.assertNotRaises
* Revert "Add full test environment."
* Fixes error message for flavor-create duplicate ID
* Updated code to update attach\_time of a volume while detaching
* Deleting security group does not mark rules as deleted
* Collect more accurate bandwidth data for XenServer
* Clarify dangerous use of exceptions in unit tests
* Restore SIGPIPE default action for subprocesses
* Fix bugs in resource tracker and cleanup
* Properly create and delete Aggregates
* No stack trace on bad nova aggregate-\* command
* Fix aggregate\_hosts.host migration for sqlite
* Fix marker pagination for /servers
* Fix doc/README.rst to render properly
* make ensure\_default\_security\_group() call sgh
* Adds new volume API extensions
* Include volume\_metadata with object on vol create
* Add man pages
* Clean up handling of project\_only in network\_get
* Add README for doc folder
* Return 400 if create volume snapshot force parameter is invalid
* Make ip block splitting a bit more self documenting
* Add documentation for scheduler filters scope
* Improve floating IP delete speed
* Set install\_requires in setup.py
* Stop lock decorator from leaving tempdirs in tests
* Implement paginate query use marker in nova-api
* Fix synchronized decorator path cleanup
* Add scope to extra\_specs entries
* Speed up creating floating ips
* Fixes sqlalchemy.api.compute\_node\_get\_by\_host
* Address race condition from concurrent task state update
* Clear up the .gitignore file
* hacking: Add driver prefix recommendation
* External locking for image caching
* Do not run pylint by default
* Correct utils.execute() to check 0 in check\_exit\_code
* Add ops to aggregate\_instance\_extra\_specs filter
* Implement project specific flavors API
* Move ensure\_tree to utils
* Rename class\_name to project\_id
* Remove unused permitted\_instance\_types
* Add lintstack error checker based on pylint
* Adding indexes to frequently joined database columns
* Adds integration testing for api samples
* Make instance\_update\_and\_get\_original() atomic
* Remove unused instance id-to-uuid function
* Have compute\_node\_get() join 'service'
* Implements sending notification on metadata change
* Code clean up
* Keep the ComputeNode model updated with usage
* Makes sure instance deletion ok with deleted data
* OpenStack capitalization added to HACKING.rst
* Makes sure tests don't leave lockfiles around
* Disable I18N in Nova's test suites
* Revert per-user-quotas
* Remove unused imports
* Fix PEP8 issues
* Fix spelling typos
* Ignoring \*.sw[op] files
* Adds Hyper-V support in nova-compute (with new network\_info model), including unit tests
* Allow nova to guess device if not passed to attach
* Remove assigned, but unused variables from nova/db/sqlalchemy/api.py
* Improve bw\_usage\_update() performance
* Update extra specs calls to use deleted: False
* Implement network association in OS API
* import module, not type
* Make sure ec2 mapping raises proper exceptions
* Sync some cleanups from openstack.common
* Revert "Remove unused add\_network\_to\_project() method"
* Uniqueness checks for floating ip addresses
* Add a 50 char git title limit test to hacking
* General host aggregates part 2
* Update devref for general host aggregates
* Move results filtering to  db
* Improve external locking on Windows
* Solve possible race in semaphor creation
* Adds per-user-quotas support for more detailed quotas management
* Move root\_helper deprecation warning into execute
* Flavor extra specs extension use instance\_type id
* Simplify file hashing
* Remove old exception type
* Improve external lock implementation
* Fix broken pep8 exclude processing
* Update reset\_db to call setup if \_DB is None
* Remove unused imports
* Fix a comment typo in db api
* Fix issue with filtering where a value is unicode
* Deprecate root\_helper in favor of rootwrap\_config
* Prevent instance\_info\_cache from being altered post instance
* Convert virtual\_interfaces to using instance\_uuid
* reduce debugging from utils.trycmd()
* Add a link from HACKING to wiki GitCommitMessages page
* Make compute only auto-confirm its own instances
* Don't store system\_metadata in xenstore
* Only enforce valid uuids if a uuid is passed
* Call correct implementation for quota\_destroy\_all\_by\_project
* Convert fixed\_ips to using instance\_uuid
* Inject instance metadata into xenstore
* Allow floating IP pools to be deleted
* Fix a bug in compute\_node\_statistics
* Add call to get hypervisor statistics
* Fix wrong regex in cleanup\_file\_locks
* Remove unused add\_network\_to\_project() method
* Updates migration 111 to work w/ Postgres
* Remove unnecessary use of with\_lockmode
* Fix SQL deadlock in quota reservations
* remove unused clauses[] variable
* Return 413 status on over-quota in the native API
* Use all deps for tools/hacking.py tests in tox
* General-host-aggregates part 1
* Exclude openstack-common from pep8 checks
* Add SKIP\_WRITE\_GIT\_CHANGELOG to setup.py
* Remove deprecated auth-related db code
* Remove unused find\_data\_files function in setup.py
* Refactor instance\_usage\_audit. Add audit tasklog
* Avoid lazy-loading errors on instance\_type
* Propagate setup.py change from common
* Removed a bunch of cruft files
* Update common setup code to latest
* Implements updating complete bw usage data
* This patch stops metadata from being deleted when an instance is deleted
* sort .gitignore for readability
* ignore project files for eclipse/pydev
* Add \*.egg\* to .gitignore
* Finish AUTHORS transition
* Modifies ec2/cloud to be able to use Cinder
* Expand HACKING with commit message guidelines
* Switch to common logging
* Run hacking tests as part of the gate
* Ability to read deleted system metadata records
* Remove passing superfluous read\_deleted argument
* Flesh out the README file with a little more useful information
* Implement blueprint ec2-id-compatibilty
* Add multi-process support for API services
* Use setuptools-git plugin for MANIFEST
* Add missing nova-novncproxy to tarballs
* Rename the instance\_id column in instance\_info\_caches
* Add hypervisor information extension
* Cleanup of image service code
* Fix several PEP-8 issues
* Fix db calls for snaphsot and volume mapping
* Removes utils.logging\_error (no longer used)
* Removes utils.fetch\_file (no longer used)
* Improve filter\_scheduler performance
* Re-factor instance DB creation
* Add full test environment
* vm state and task state management
* Update pylint/pep8 issues jenkins job link
* SM volume driver: DB changes and tests
* Imports cleanup
* Enforce an instance uuid for instance\_test\_and\_set
* Replaces functions in utils.py with openstack/common/timeutils.py
* Add CPU arch filter scheduler support
* Cleanup instance\_update so it only takes a UUID
* Re-add private \_compute\_node\_get call to sql api
* Remove unused DB calls
* Remove utils.deprecated functions
* instance\_destroy now only takes a uuid
* Finalize tox config
* Convert consoles to use instance uuid
* Add zeromq driver. Implements blueprint zeromq-rpc-driver
* Prefix all nova binaries with 'nova-'
* Migrate security\_group\_instance\_association to use a uuid to refer to instances
* Migrate instance\_metadata to use a uuid to refer to instances
* Adds \`disabled\` field for instance-types
* Revert "blueprint <multi-process-api-service>"
* Use openstack.common.cfg.CONF
* Unused imports cleanup (folsom-2)
* blueprint <multi-process-api-service>
* convert virt drivers to fully dynamic loading
* Remove duplicate words in comments
* Eliminate a race condition on instance deletes
* Backslash continuation removal (Nova folsom-2)
* Update .gitignore
* Move queue\_get\_for() from db to rpc
* Use cfg's new global CONF object
* Add attach\_time for EC2 Volumes
* fixing issue with db.volume\_update not returning the volume\_ref
* Grammar fixes
* Grammar / spelling corrections
* Run coverage tests via xcover for jenkins
* Use utils.utcnow rather than datetime.utcnow
* Expose a limited networks API for users
* Added a instance state update notification
* Update pep8 dependency to v1.1
* Nail pep8 dependencies to 1.0.1
* Add scheduler filter: TypeAffinityFilter
* Finish quota refactor
* Include volume-usage-audit in tarballs
* Use cfg's new behavior of reset() clearing overrides
* fixed\_ip\_get\_by\_address read\_deleted from context
* Rearchitect quota checking to partially fix bug 938317
* Make use of openstack.common.jsonutils
* Alphabetize imports
* Adding notifications for volumes
* Destroy system metadata when destroying instance
* Use ConfigOpts.find\_file() to find paste config
* Remove instance Foreign Key in volumes table, replace with instance\_uuid
* Remove old flagfile support
* Defer image\_ref update to manager on rebuild
* Remove instance action logging mechanism
* pylint cleanup
* Allow sitepackages on jenkins
* Replaces exceptions.Error with NovaException
* Register fake flags with rpc init function
* Generate a Changelog for Nova
* Add instance\_system\_metadata modeling
* Use ConfigOpts.find\_file() to locate policy.json
* Implement key pair quotas
* Compact pre-Folsom database migrations
* Use save\_and\_reraise\_exception() from common
* Convert Volume and Snapshot IDs to use UUID
* adjust logging levels for utils.py
* Migrate block\_device\_mapping to use instance uuids
* Removes RST documentation and moves it to openstack-manuals
* Remove workaround for sqlalchemy-migration < 0.6.4
* Use openstack.common.importutils
* Keep uuid with bandwidth usage tracking to handle the case where a MAC address could be recycled between instances
* Refactor nova.rpc config handling
* Improved tools/hacking.py
* Scope coverage report generation to nova module
* Moves \`usage\_from\_instance\` into nova.compute.utils
* Implement security group quotas
* Add deleted\_at to instance usage notification
* Port types and extra specs to volume api
* Renamed current\_audit\_period function to last\_completed\_audit\_period to clarify its purpose
* Improve grammar throughout nova
* Improved localization testing
* Remove nova Direct API
* migration\_get\_all\_unconfirmed() now uses lowercase "finished" Fixes bug 977719
* Run tools/hacking.py instead of pep8 mandatory
* Delete fixed\_ips when network is deleted
* HACKING fixes, sqlalchemy fix
* Cleanup xenapi driver logging messages to include instance
* Use -1 end-to-end for unlimited quotas
* Treat -1 quotas as unlimited
* Remove nova.rpc.impl\_carrot
* fix TypeError with unstarted threads in nova-network
* bug 965335
* Check that volume has no snapshots before deletion
* Fix disassociate query to remove foreign keys
* Clean up read\_deleted support in host aggregates code
* ensure atomic manipulation of libvirt disk images
* Reordered the alphabet
* Add periodic\_fuzzy\_delay option
* Remove unused certificate SQL calls
* Assume migrate module missing \_\_version\_\_ is old
* Remove tools/nova-debug
* Change mycloud.com to example.com (RFC2606)
* Clarify HACKING's shadow built-in guidance
* Implement quota classes
* Fixes bug 949038
* Fixes bug 957708
* Improve performance of generating dhcp leases
* Make sqlite in-memory-db usable to unittest
* Workaround issue with greenthreads and lockfiles
* various cleanups
* Remove Virtual Storage Array (VSA) code
* db api: Remove check for security groups reference
* Remove broken bin/\*spool\* tools
* Refix mac change to work around libvirt issue
* Use a FixedIp subquery to find networks by host
* Make fixed\_ip\_disassociate\_all\_by\_timeout work
* Sort results from describe\_instances in EC2 API
* doc/source/conf.py: Fix man page building
* Nuke some unused SQL api calls
* Remove update lockmode from compute\_node\_get\_by\_host
* Clean up setup and teardown for dhcp managers
* Fix nova-manage backend\_add with sr\_uuid
* Add pybasedir and bindir options
* Use a high number for our default mac addresses
* Remove an obsolete FIXME comment
* Fix racey snapshots
* setup.py: Fix doc building
* Add adjustable offset to audit\_period
* Clear created attributes when tearing down tests
* HACKING fixes, all but sqlalchemy
* Remove trailing whitespaces in regular file
* Bug #943178: aggregate extension lacks documentation
* No longer ignoring man/novamanage
* Fix rst formatting and cross-references
* fix restructuredtext formatting in docstrings that show up in the developer guide
* Update fixed\_ip\_associate to not use relationships
* Only raw string literals should be used with \_()
* assertRaises(Exception, ...) considered harmful
* update copyright, add version information to footer
* Refactor spawn to use UndoManager
* Add missing filters for new root commands
* Fixes bug 943188
* Use constant time string comparisons for auth
* Rename zones table to cells and Instance.zone\_name to cell\_name
* Fixes bug 942549
* sm vol driver: Fix regression in sm\_backend\_conf\_update
* Add utils.tempdir() context manager for easy temp dirs
* Do not hit the network\_api every poll
* OS X Support fixed, bug 942352
* Adds temporary chown to sparse\_copy
* Fixes cloudpipe extension to work with keystone
* Add missing directive to tox.ini
* Clean stale lockfiles on service startup : fixes bug 785955
* Add hypervisor\_hostname to compute\_nodes table and use it in XenServer
* blueprint host-aggregates: improvements and clean-up
* blueprint host-aggregates: xenapi implementation
* Support tox-based unittests
* Add attaching state for Volumes
* Escape apostrophe in utils.xhtml\_escape() (lp#872450)
* nova.conf sample tool
* Fix traceback running instance-usage-audit
* Support non-UTC timestamps in changes-since filter
* Allow file logging config
* bug 933620: Error during ComputeManager.\_poll\_bandwidth\_usage
* Make database downgrade works
* Backslash continuations (nova.tests)
* Core modifications for future zones service
* Fix API extensions documentation, bug 931516
* bw\_usage takes a MAC address now
* Prevent Duplicate VLAN IDs
* Don't allow EC2 removal of security group in use
* Standardize logging delaration and use
* Remove the last of the gflags shim layer
* Move translations to babel locations
* Get rid of distutils.extra
* Use named logger when available
* Removes constraints from instance and volume types
* Backslash continuations (misc.)
* Update cfg from openstack-common
* Remove ajaxterm from Nova
* Fix support for --flagfile argument
* Fix \_poll\_bandwidth\_usage if no network on vif
* Backslash continuations (nova.db)
* Allows nova to read files as root
* Re-run nova-manage under sudo if unable to read conffile
* Move cfg to nova.openstack.common
* blueprint nova-image-cache-management phase1
* Fix disassociation of fixed IPs when using FlatManager
* Optionally disable file locking
* Avoid weird test error when mox is missing
* Add support for pluggable l3 backends
* lockfile.FileLock already appends .lock
* Ties quantum, melange, and nova network model
* Fix VPN ping packet length
* Remove utils.runthis()
* Refactor away the flags.DEFINE\_\* helpers
* Remove session arg from sm\_backend\_conf\_update
* Remove session arguments from db.api
* blueprint host-aggregates: OSAPI extensions
* blueprint host-aggregates: OSAPI/virt integration, via nova.compute.api
* Fixes bug 921265 - i'nova-manage flavor create|list'
* Blueprint xenapi-provider-firewall and Bug #915403
* Create nova cert worker for x509 support
* usage: Fix time filtering
* Add an API extension for creating+deleting flavors
* Abstract out \_exact\_match\_filter()
* Adds a bandwidth filter DB call
* KVM and XEN Disk Management Parity
* ComputeNode Capacity support
* Change the logic for deleting a record dns\_domains
* Fix nova-manage floating list (fixes bug 918804)
* scheduler host\_manager needs service for filters
* Add dns domain manipulation to nova
* Implements blueprint vnc-console-cleanup
* blueprint host-aggregates
* Add missing scripts to setup.py (lp#917676)
* Fixes bug 917128
* Implement BP untie-nova-network-models
* Remove a whole bunch of unused imports
* Implements blueprint separate-nova-volumeapi
* Call to instance\_info\_cache\_delete to use uuid
* Add @utils.deprecated()
* Adds support for floating ip pools
* Refactors utils.load\_cached\_file
* Workaround bug 852095 without importing mox
* Bug #912858: test\_authors\_up\_to\_date does not deal with capitalized names properly
* Adds workaround check for mox in to\_primitive
* preload cache table and keep it up to date
* Update HACKING.rst
* Remove install\_requires processing
* PEP8 type comparison cleanup
* Adds running\_deleted\_instance\_reaper task
* Unused db.api cleanup
* PEP8 remove direct type comparisons
* Clean up pylint errors in top-level files
* Ensure generated passwords meet minimum complexity
* 'except:' to 'except Exception:' as per HACKING
* Fixes LP bug #907898
* Bug#898257 abstract out disk image access methods
* Make UUID format checking more correct
* Document return type from utils.execute()
* Makes disassociate by timeout work with multi-host
* Adds missing joinedload for vif loading
* Starting work on exposing service functionality
* Fixes bug 723235
* Expose Asynchronous Fault entity in the OSAPI
* Update utils.execute so that check\_exit\_code handles booleans. Fixes LP bug #904560
* Fixes bug 887402
* Bug 902626
* Renaming instance\_actions.instance\_id column to instance\_uuid. blueprint: internal-uuids
* Moves find config to utils because it is useful
* fixed\_ips by vif does not raise
* Add preparation for asynchronous instance faults
* Log it when we get a lock
* Adds network model and network info cache
* Rename .nova-venv to .venv
* Add ability to see deleted and active records
* A more secure root-wrapper alternative
* First steps towards consolidating testing infrastructure
* Remove remnants of babel i18n infrastructure
* Remove autogenerated pot file
* remove duplicate netaddr in nova/utils
* Adds extension documentation for some but not all extensions
* Remove VIF<->Network FK dependancy
* split rxtx\_factor into network and instance\_type
* Fix for bug 887712
* Fix RPC responses to allow None response correctly
* removed logic of throwing exception if no floating ip
* Adding an install\_requires to the setup call. Now you can pip install nova on a naked machine
* Removing obsolete bzr-related clauses in setup.py
* Updating {add,remove}\_security\_group in compute.api to use instance uuids instead of instance ids. blueprint internal-uuids
* Converted README to RST format
* Follow hostname RFCs
* Remove contrib/nova.sh and other stale docs
* Separate metadata api into its own service
* Log the URL to an image\_ref and not just the ID
* Verify security group parameters
* More spelling fixes inside of nova
* Refactor logging\_error into utils
* Add DHCP support to the QuantumManager and break apart dhcp/gateway
* Added some documentation to db.api module docstring
* Xen Storage Manager Volume Driver
* flatten distributed scheduler
* Creating uuid -> id mapping for S3 Image Service
* Fixes lp883279
* Log original dropped exception when a new exception occurs
* Fix lp:861160 -- newly created network has no uuid
* Adding bulk create fixed ips. The true issue here is the creation of IPs in the DB that are not currently used(we are building the entire block). This fix is just a bandaid, but it does cut ~25 seconds off of the quantum tests on my laptop
* Revert how APIs get IP address info for instances
* Replaces all references to nova.db.api with nova.db
* Add .gitreview config file for gerrit
* Convert instancetype.flavorid to string
* Improve the liveness checking for services
* Repartition and resize disk when marked as managed
* Remove dead DB API call
* Remove unused flag\_overrides from TestCase
* Xenapi driver can now generate swap from instance\_type
* Adds the ability to automatically issue a hard reboot to instances that have been stuck in a 'rebooting' state for longer than a specified window
* Adds more usage data to Nova's usage notifications
* Remove AoE, Clean up volume code
* Include original exception in ClassNotFound exception
* Allow db schema downgrades
* moved floating ip db access and sanity checking from network api into network manager added floating ip get by fixed address added fixed\_ip\_get moved floating ip testing from osapi into the network tests where they belong
* Adding run\_test.sh artifacts to .gitignore
* Fix the grantee group loading for source groups
* Fix some minor issues due to premature merge of original code
* \* Rework osapi to use network API not FK backref \* Fixes lp854585
* This patch adds flavor filtering, specifically the ability to flavor on minRam, minDisk, or both, per the 1.1 OSAPI spec
* Add next links for server lists in OSAPI 1.1. This adds servers\_links to the json responses, and an extra atom:link element to the servers node in the xml response
* Merging trunk
* Adding OSAPI tests for flavor filtering
* This patch adds instance progress which is used by the OpenStack API to indicate how far along the current executing action is (BUILD/REBUILD, MIGRATION/RESIZE)
* Merging trunk
* Fixes lp:855115 -- issue with disassociating floating ips
* Renumbering instance progress migration
* Fixing tests
* Keystone support in Nova across Zones
* trunk merge fixup
* Adds an 'alternate' link to image views per 3.10 and 3.11 of http://docs.openstack.org/cactus/openstack-compute/developer/openstack-compute-api-1.1/content/LinksReferences.html
* Merging trunk
* Adding flavor filtering
* Instance deletions in Openstack are immediate. This can cause data to be lost accidentally
* Makes sure ips are moved on the bridge for nodes running dnsmasq so that the gateway ip is always first
* clean up based on cerberus review
* Remove keystone middlewares
* Merged trunk
* merged trunk
* floating ip could have no project and we should allow access
* actions on floating IPs in other projects for non-admins should not be allowed
* floating\_ip\_get\_by\_address should check user's project\_id
* Pep8 fixes
* Merging trunk
* Refactoring instance\_type\_get\_all
* merge trunk, fix conflicts
* Fixed unit tests with some minor refactoring
* merge from trunk
* convert images that are not 'raw' to 'raw' during caching to node
* Add iptables filter rules for dnsmasq (lp:844935)
* merge with trunk r1601
* merged with trunk
* Reverted some changes to instance\_get\_all\_by\_filters() that was added in rev 1594.  An additional argument for filtering on instance uuids is not needed, as you can add 'uuid: uuid\_list' into the filters dictionary.  Just needed to add 'uuid' as an exact\_match\_filter.  This restores the filtering to do a single DB query
* merged trunk and resolved conflict
* Removed the extra code added to support filtering instances by instance uuids. Instead, added 'uuid' to the list of exact\_filter\_match names. Updated the caller to add 'uuid: uuid\_list' to the filters dictionary, instead of passing it in as another argument. Updated the ID to UUID mapping code to return a dictionary, which allows the caller to be more efficient... It removes an extra loop there. A couple of typo fixes
* Adds the ability to automatically confirm resizes after the \`resize\_confirm\_window\` (0/disabled by default)
* PEP8 cleanup
* \* Remove the foreign key and backrefs tying vif<->instance \* Update instance filtering to pass ip related filters to the network manager \* move/update tests
* Merging trunk
* merge with trunk
* Corrected the status in DB call
* Merged trunk
* remove unused import
* merge the sknurt
* remove the polymorph
* Fixes the handling of snapshotting in libvirt driver to actually use the proper image type instead of using raw for everything. Also cleans up an unneeded flag.  Based on doude's initial work
* merge with trunk
* Some Linux systems can also be slow to start the guest agent. This branch extends the windows agent timeout to apply to all systems
* Fix a bug that would make spawning new instances fail if no port/protocol is given (for rules granting access for other security groups)
* Merging trunk
* Authorize to start a LXC instance withour, key, network file to inject or metadata
* Update the v1.0 rescue admin action and the v1.1 rescue extension to generate 'adminPass'. Fixes an issue where rescue commands were broken on XenServer. lp#838518
* merge the trunks
* Fixes libvirt rescue to use the same strategy as xen.  Use a new copy of the base image as the rescue image.  It leaves the original rescue image flags in, so a hand picked rescue image can still be used if desired
* merge the trunks
* Merged trunk
* I am using iputils-arping package to send arping command. You will need to install this package on the network nodes using apt-get command apt-get install iputils-arping
* Removed sudo from the arguments
* merge from trunk
* Make sure grantee\_group is eagerly loaded
* Merged trunk
* trunk merge
* it merges the trunk; or else it gets the conflicts again
* This makes the OS api extension for booting from volumes work. The \_get\_view\_builder method was replaced in the parent class, but the BootFromVolume controller was not updated to use the new method
* Merged trunk
* Adding flavor extra data extension
* revert last change
* build the query with the query builder
* update db api for split filterings searches
* Merged from trunk and resolved conflicts
* Merged trunk
* The 1.1 API specifies that two vendor content types are allowed in addition to the standard JSON and XML content types
* Adding progress
* 0 for the instance id is False ;)
* merge trunk
* fix up the filtering so it does not return duplicates if both the network and the db filters match
* Fix issue where floating ips don't get recreated when a network host reboots
* Initial pass at automatically confirming resizes after a given window
* merge trunks
* get all the vifs
* get all the vifs
* resolve conflicts / merge with trunk revno 1569
* Fixes an issue where 'invalid literal for int' would occur when listing images after making a v1.1 server snapshot (with a UUID)
* merge the trunk
* remove the vif joins, some dead code, and the ability to take in some instances for filtering
* allow passing in of instances already
* trunk merge
* makes sure floating addresses are associated with host on associate so they come back
* This branch changes XML Serializers and their tests to use lxml.etree instead of minidom
* - remove translation of non-recognized attributes to user metadata, now just ignored - ensure all keys are defined in image dictionaries, defaulting to None if glance client doesn't provide one - remove BaseImageService - reorganize some GlanceImageService tests
* we're back
* PEP8 cleanups
* working on getting tests back
* merging trunk; resolving conflicts
* pep8 fixes in nova/db/sqlalchemy/api.py and nova/virt/disk.py
* pep8 fixes
* merging trunk; resolving conflicts
* Some arches dont have dmidecode, check to see if libvirt is capable of running rather getInfo of the arch its running on
* fixups
* parent merge
* bug fixes
* merging trunk
* trunk merge
* When vpn=true in allocate ip, it attempts to allocate the ip that is reserved in the network. Unfortunately fixed\_ip\_associate attempts to ignore reserved ips. This fix allows to filter reserved ip address only when vpn=True
* Stock zones follows a fill-first methodology—the current zone is filled with instances before other zones are considered.  This adds a flag to nova to select a spread-first methodology.  The implementation is simply adding a random.shuffle() prior to sorting the list of potential compute hosts by weights
* Pass reboot\_type (either HARD or SOFT) to the virt layers from the API
* merging trunk
* pull-up from trunk; move spread\_first into base\_scheduler.py
* trunk merge
* Merged trunk
* merged rbp
* adds a fake\_network module to tests to generate sensible network info for tests. It does not require using the db
* Adding a can\_read\_deleted filter back to db.api.instance\_get\_all\_by\_filters that was removed in a recent merge
* Merged trunk
* child zone queries working with keystone now
* Added docstring to explain usage of reserved keyword argument
* One more bug fix to make zones work in trunk.  Basic problem is that in novaclient using the 1.0 OSAPI, servers.create() takes an ipgroups argument, but when using the 1.1 OSAPI, it doesn't, which means booting instances in child zones won't work with OSAPI v1.0.  This fix works around that by using keyword arguments for all the arguments after the flavor, and dropping the unused ipgroups argument
* Fixes the reroute\_compute decorator in the scheduler API so that it properly:
* Fix lp:844155
* Changing a behavior of update\_dhcp() to write out dhcp options file. This option file make dnsmasq offer a default gateway to only NICs of VM belonging to a network that the first NIC of VM belongs to. So, first NIC of VM must be connected to a network that a correct default gateway exists in. By means of this, VM will not get incorrect default gateways
* merged trunk
* merging trunk
* merging trunk
* merged trunk
* Make weigh\_hosts() return a host per instance, instead of just a list of hosts
* converting fix to just address ec2; updating test
* Merged trunk
* pull-up from trunk
* pull-up from trunk
* pull-up from trunk
* adding can\_read\_deleted back to db api
* This code contains contains a new NetworkManager class that can leverage Quantum + Melange
* merge trunk
* pull-up from trunk
* Fixes a case where if a VIF is returned with a NULL network it might not be able to be deleted. Added test case for that fix
* Merged trunk
* merged trunk
* An AMI image without ramdisk image should start
* At present, the os servers.detail api does not return server.user\_id or server.tenant\_id.  This is problematic, since the servers.detail api defaults to returning all servers for all users of a tenant, which makes it impossible to tell which user is associated with which server
* merged trunk
* trunk merge
* revert codes for db
* correct a method to collect instances from db add interface data to test
* meeging trunk
* format for pep8
* implement unit test for linux\_net
* Fix bug #835919 that output a option file for dnsmasq not to offer a default gateway on second vif
* Merged trunk
* Added list of security groups to the newly added extension (Createserverext)  for the Create Server and Get Server detail responses
* feedback from jk0's review, including removing a lot of spaces from docstrings
* merged trunk
* Fix for LP Bug #839269
* Fixes a small bug which causes filters to not work at all.  Also reworks a bit of exception handling to allow the exception related to the bug to propagate up
* Fixed review comments
* pull-up from trunk
* Merged trunk
* Glance can now perform its own authentication/authorization checks when we're using keystone
* Resolved conflicts and fixed pep8 errors
* trunk merge
* pull-up from trunk
* - implements changes-since for servers resource - default sort is now created\_at desc for instances
* merging trunk
* Accept keypair when you launch a new server. These properties would be stored along with the other server properties in the database (like they are currently for ec2 api)
* merge trunk, fix tests
* merge trunk
* Simple usage extension for nova.  Uses db to calculate tenant\_usage for specified time periods
* Fix for LP Bug #838251
* merged trunk
* Fixed and improved the way instance "states" are set. Instead of relying on solely the power\_state of a VM, there are now explicitly defined VM states and VM task states which respectively define the current state of the VM and the task which is currently being performed by the VM
* Implements lp:798876 which is 'switch carrot to kombu'.  Leaves carrot as the default for now... decision will be made later to switch the default to kombu after further testing.  There's a lot of code duplication between carrot and kombu, but I left it that way in preparation for ripping carrot out later and to keep minimal changes to carrot
* trunk merge
* merged trunk
* Removed extraneous import and s/vm\_state.STOP/vm\_states.STOPPED/
* make two functions instead of fast flag and add compute api commands instead of hitting db directly
* merged trunk
* changing default sort to created\_at
* supporting changes-since
* merged trunk
* Merged trunk
* Adds assertIn and assertNotIn support to TestCase for compatibility with python 2.6 This is a very minimal addition which doesn't require unittest2
* support the extra optional arguments for msg to assertIn and assertNotIn
* fix for assertIn and assertNotIn use which was added in python 2.7.  this makes things work on 2.6 still
* merge trunk
* restore fixed\_ip\_associate\_pool in nova/db/sqlalchemy.py to its original form before this branch.  Figured out how to make unit tests pass without requiring that this function changes
* use 'uuid' field in networks table rather than 'bridge'.  Specify project\_id when creating instance in unit test
* Virtual Storage Array (VSA) feature. - new Virtual Storage Array (VSA) objects / OS API extensions / APIs / CLIs - new schedulers for selecting nodes with particular volume capabilities - new special volume driver - report volume capabilities - some fixes for volume types
* use db layer for aggregation
* merged trunk
* merge trunk
* merged with rev.1499
* VSA code redesign. Drive types completely replaced by Volume types
* merged trunk
* review feedback
* Merged trunk
* Added: - volume metadata - volume types - volume types extra\_specs
* merged trunk
* Merged trunk
* Once a network is associated with project, I can’t delete this network with ‘nova-manage network delete’. As you know, I can delete network by scrubbing the project with ‘nova-manage project scrub’. However it is too much. The cause of this problem is there is no modify command of network attribute
* merged with volume types (based on rev.1490). no code rework yet
* merged with volume\_types. no code refactoring yet
* merged with nova 1490
* added new tables to list of DBs in migration.py
* merged trunk
* added Openstack APIs for volume types & extradata
* Merged from trunk
* The notifiers API was changed to take a list of notifiers. Some people might want to use more than one notifier so hopefully this will be accepted into trunk
* merge trunk, fix tests
* pep8 compliant
* merged with rev.1485
* Merged trunk
* added volume metadata APIs (OS & volume layers), search volume by metadata & other
* Merged from trunk
* Stub out the DB in unit test. Fix 'nova-manage network modify' to use db.network\_update()
* Merged from upstream
* I added notifications  decorator for each API call using monkey\_patching. By this merge, users can get API call notification from any modules
* Fixes bug that causes 400 status code when an instance wasn't attached to a network
* Merged from upstream
* merging trunk
* Removed blank line
* Merged with trunk
* Fixed typo and docstring and example class name
* Merged trunk
* This branch does the final tear out of AuthManager from the main code. The NoAuth middlewares (active by default) allow a user to specify any user and project id through headers (os\_api) or access key (ec2\_api)
* pulling all qmanager changes into a branch based on trunk, as they were previously stacked on top of melange
* merge trunk, resolve conflicts, fix tests
* Our goal is to add optional parameter to the Create server OS 1.0 and 1.1 API to achieve following objectives:-
* Fixes bug 831627 where nova-manage does not exit when given a non-existent network address
* initial cut on volume type APIs
* Merged from trunk,resolved conflicts and fixed broken unit tests due to changes in the extensions which now include ProjectMapper
* Fixed conflict with branch
* merged trunk
* Added Test Code, doc string, and fixed pip-requiresw
* Merged trunk
* Merged from upstream
* merged trunk
* implemented tenant ids to be included in request uris
* Upstream merge
* Fix pep8
* delete debug code
* Use 'vm\_state' instead of 'state' in instance filters query
* Add 'nova-manage network modify' command
* Merged trunk
* merge with trunk
* Adds accessIPv4 and accessIPv6 to servers requests and responses as per the current spec
* Fixes utils.to\_primitive (again) to handle modules, builtins and whatever other crap might be hiding in an object
* Added OS APIs to associate/disassociate security groups to/from instances
* Merged from trunk
* Assorted fixes to os-floating-ips to make it play nicely with an in-progress novaclient implementation, as well as some changes to make it more consistent with other os rest apis.  Changes include:
* Merged trunk
* Merged from trunk and fixed review comments
* Fixed review comments
* Fixed typo
* merged trunk
* Merged with trunkw
* merge from trunk
* Added monkey patching notification code function w
* Next round of prep for keystone integration
* Merged from trunk
* Fixes primitive with builtins, modules, etc
* merged trunk
* merge with trunk
* Added uuid column in virtual\_interfaces table, and an OpenStack extension API for virtual interfaces to expose these IDs.  Also set this UUID as one of the external IDs in the OVS vif driver
* merge
* Merged trunk
* merged trunk
* Currently, rescue/unrescue is only available over the admin API. Non-admin tenants also need to be able to access this functionality. This patch adds rescue functionality over an API extension
* Makes all of the binary services launch using the same strategy.  \* Removes helper methods from utils for loading flags and logging  \* Changes service.serve to use Launcher  \* Changes service.wait to actually wait for all the services to exit  \* Changes nova-api to explicitly load flags and logging and use service.serve  \* Fixes the annoying IOError when /etc/nova/nova.conf doesn't exist
* merged trunk
* added volume metadata. Fixed test\_volume\_types\_extra\_specs
* merge trunk
* Fixes lp828207
* Fixed bug in which DescribeInstances was returning deleted instances.  Added tests for pertinent api methods
* Accept binary user\_data in radix-64 format when you launch a new server using OSAPI. This user\_data would be stored along with the other server properties in the database. Once the VM instance boots you can query for the user-data to do any custom installation of applications/servers or do some specific job like setting up networking route table
* added unittests for volume\_extra\_data
* Change the call name
* merged trunk
* Merged with trunk
* first cut on types & extra-data (only DB work, no tests)
* merge from trunk
* Updated a number of items to pave the way for new states
* Merged trunk
* Fixed several logical errors in the scheduling process. Renamed the 'ZoneAwareScheduler' to 'AbstractScheduler', since the zone-specific designation is no longer relevant. Created a BaseScheduler class that has basic filter\_hosts() and weigh\_hosts() capabilities. Moved the filters out of one large file and into a 'filters' subdirectory of nova/scheduler
* Merged trunk
* merged trunk
* Merged with trunk and fixed broken testcases
* merged with nova-1450
* Make all services use the same launching strategy
* Merged trunk
* Pep8 fixes
* Split set state into vm, task, and power state functions
* merge from trunk
* Merged trunk
* merge trunk
* Resolved conflicts and merged with trunk
* Added uuid for networks and made changes to the Create server API format to accept network as uuid instead of id
* I'm taking Thierry at his word that I should merge early and merge often :)
* Allow local\_gb size to be 0. libvirt uses local\_gb as a secondary drive, but XenServer uses it as the root partition's size. Now we support both
* Merged trunk
* merge from trunk
* Use netaddr's subnet features to calculate subnets
* \* Added search instance by metadata. \* instance\_get\_all\_by\_filters should filter deleted
* This branch implements a nova api extension which allows you to manage and update tenant/project quotas
* making get project quotas require context which has access to the project/tenant)
* merge from trunk
* Updated the EC2 metadata controller so that it returns the correct value for instance-type metadata
* merge the trunk
* Merged with upstream
* merge with trunk
* Validate the size of VHD files in OVF containers
* Merged trunk
* Merged trunk
* Merged trunk
* merge trunk
* Adding kvm-block-migration feature
* merge trunk, remove \_validate\_cidrs and replace functionality with a double for loop
* fix bug which DescribeInstances in EC2 api was returning deleted instances
* Merged with trunk
* Merged trunk
* Add durable flag for rabbit queues
* merged trunk
* Merged trunk
* Added ability too boot VM from install ISO.  System detects an image of type iso.  Images is streamed to a VDI and mounted to the VM.  Blank disk allocated to VM based on instance type
* Add source-group filtering
* added logic to make the creation of networks (IPv4 only) validation a bit smarter:   - detects if the cidr is already in use   - detects if any existing smaller networks are within the range of requested cidr(s)   - detects if splitting a supernet into # of num\_networks && network\_size will fit   - detects if requested cidr(s) are within range of already existing supernet (larger cidr)
* Fix v1.1 /servers/<id> PUT request to match API documentation by returning 200 code and the server data in the body
* have NetworkManager generate MAC address and pass it to the driver for plugging.  Sets the stage for being able to do duplicate checks on those MACs as well
* merge trunk, fix conflict frim dprince's branch to remove hostname from bin/nova-dhcpbridge
* merge in trunk, resolving conflicts with ttx's branch to switch from using sudo to run\_as\_root=True
* remerge trunk
* Added add securitygroup to instance and remove securitygroup from instance functionality
* Merged with trunk and fixed broken unit testcases
* merged rev1418 and fixed code so that less than 1G image can be migrated
* merge from trunk
* merge from trunk
* Merged trunk
* Allows for a tunable number of SQL connections to be maintained between services and the SQL server using new configuration flags. Only applies when using the MySQLdb dialect in SQLAlchemy
* Merged trunk
* Merged trunk
* API needs virtual\_interfaces.instance joined when pulling instances from the DB.  Updated instance\_get\_all() to match instance\_get\_all\_by\_filters() even though the former is only used by nova-manage now.  (The latter is used by the API)
* join virtual\_interfaces.instance for DB queries for instances.  updates instance\_get\_all to match instance\_get\_all\_by\_filters
* merged trunk
* Merged with trunk
* Support for management of security groups in OS API as a new extension
* Merged with trunk
* merge from trunk
* merged with 1416
* moved vsa\_id to metadata. Added search my meta
* Added search instance by metadata. get\_all\_by\_filters should filter deleted
* merged trunk
* \* Removes rogue direct usage of subprocess module by proper utils.execute calls \* Adds a run\_as\_root parameter to utils.execute, that prefixes your command with FLAG.root\_helper (which defaults to 'sudo') \* Turns all sudo calls into run\_as\_root=True calls \* Update fakes accordingly \* Replaces usage of "sudo -E" and "addl\_env" parameter into passing environment in the command (allows it to be compatible with alternative sudo\_helpers) \* Additionally, forces close\_fds=True on all utils.execute calls, since it's a more secure default
* Fixed broken unit testcases
* merge from trunk
* tenant\_id -> project\_id
* These fixes are the result of trolling the pylint violations here
* Pass py\_modules=[] to setup to avoid installing run\_tests.py as a top-level module
* Pass py\_modules=[] to setup to avoid installing run\_tests.py as a top-level module
* merge trunk
* Dropped vsa\_id from instances
* Merged with trunk
* use correct variable name
* Merged with trunk
* merge from trunk
* merged with nova-1411
* This adds the servers search capabilities defined in the OS API v1.1 spec.. and more for admins
* merged trunk
* Update the OSAPI v1.1 server 'createImage' and 'createBackup' actions to limit the number of image metadata items based on the configured quota.allowed\_metadata\_items that is set
* Instance metadata now functionally works (completely to spec) through OSAPI
* updating tests; fixing create output; review fixes
* Rename sudo\_helper FLAG into root\_helper
* Initial validation for ec2 security groups name
* Command args can be a tuple, convert them to list
* Fix usage of sudo -E and addl\_env in dnsmasq/radvd calls, remove addl\_env support, fix fake\_execute allowed kwargs
* Use close\_fds by default since it's good for you
* Fix ajaxterm's use of shell=True, prevent vmops.py from running its own version of utils.execute
* With this branch, boot-from-volume can be marked as completed in some sense. The remaining is minor if any and will be addressed as bug fixes
* Added xml schema validation for extensions resources. Added corresponding xml schemas. Added lxml dep, which is needed for doing xml schema validation
* Fixing a bug in nova.utils.novadir()
* Adds the ability to read/write to a local xenhost config. No changes to the nova codebase; this will be used only by admin tools that have yet to be created
* making server metadata work functionally
* cleaning up instance metadata api code
* Merged trunk
* remove obsolete script from setup.py
* Resolve conflicts and fixed broken unit testcases
* This branch adds additional capability to the hosts API extension. The new options allow an admin to reboot or shutdown a host. I also added code to hide this extension if the --allow-admin-api is False, as regular users should have no access to host API calls
* Adds OS API 1.1 support
* another trunk merge
* Merged trunk
* Merged trunk
* merged with 1383
* Updated with code changes on LP
* Merged trunk
* Sync trunk
* Sync trunk
* Added possibility to mark fixed ip like reserved and unreserved
* Refactored code to reduce lines of code and changed method signature
* Allow actions queries by UUID and PEP8 fixes
* Allow actions queries by UUID and PEP8 fixes
* Implemented @test.skip\_unless and @test.skip\_if functionality in nova/test.py
* merged with 1382
* Updates v1.1 servers/id/action requests to comply with the 1.1 spec
* merging trunk
* pep8 violations sneaking into trunk?
* trunk merge
* Add run\_as\_root parameter to utils.execute, uses new sudo\_helper FLAG to prefix command
* Remove spurious direct use of subprocess
* Trunk contained PEP8 errors.  Fixed
* Trunk merge
* merged trunk
* merged with nova trunk
* utilized functools.wraps
* tests and merge with trunk
* merged trunk
* For nova-manage network create cmd, added warning when size of subnet(s) being created are larger than FLAG.network\_size,  in attempt to alleviate confusion.  For example, currently when 'nova-manage network create foo 192.168.0.0/16', the result is that it creates a 192.168.0.0/24 instead without any indication to why
* Remove instances of the "diaper pattern"
* There was a recent change to how we should flip FLAGS in tests, but not all tests were fixed.  This covers the rest of them.  I also added a method to test.UnitTest so that FLAGS.verbose can be set.  This removes the need for flags to be imported from a lot of tests
* Merged in the power action changes
* Fixed rescue/unrescue since the swap changes landed in trunk. Minor refactoring (renaming callback to \_callback since it's not used here)
* another merge
* Merged trunk
* Merged trunk
* Added xenhost config get/setting
* remove storing original flags verbosity
* remove set\_flags\_verbosity.. it's not needed
* Merged trunk
* Update the OS API servers metadata resource to match the current v1.1 specification - move /servers/<id>/meta to /servers/<id>/metadata - add PUT /servers/<id>/metadata
* merged trunk
* Sync with latest tests
* Moves code restarting instances after compute node reboot from libvirt driver to compute manager; makes start\_guests\_on\_host\_boot flag global
* Moved server actions tests to their own test file. Updated stubbing and how flags are set to be in line with how they're supposed to be set in tests
* merging trunk
* Nova uses instance\_type\_id and flavor\_id interchangeably when they almost always different values. This can often lead to an instance changing instance\_type during migration because the values passed around internally are wrong. This branch changes nova to use instance\_type\_id internally and flavor\_id in the API. This will hopefully avoid confusion in the future
* Conditionals were not actually runing the tests when they were supposed to. Renamed example testcases
* Remove instances of the "diaper pattern"
* Initial version
* switch FLAGS.\* = in tests to self.flags(...) remove unused cases of FLAGS from tests modified test.TestCase's flags() to allow multiple overrides added missing license to test\_rpc\_amqp.py
* more cleanup of API tests regarding FLAGS
* Merged trunk
* Merged trunk
* Merged trunk and fixed conflicts to make tests pass
* Yet another conflict resolved
* merged from trunk
* merged from trunk
* merge trunk
* Resolved pep8 errors
* merging trunk
* Merged trunk
* Fixes lp819523
* Fix for bug #798298
* Merged trunk
* Add support for 300 Multiple Choice responses when no version identifier is used in the URI (or no version header is present)
* Merged trunk
* Glance has been updated for integration with keystone.  That means that nova needs to forward the user's credentials (the auth token) when it uses the glance API.  This patch, combined with a forth-coming patch for nova\_auth\_token.py in keystone, establishes that for nova itself and for xenapi; other hypervisors will need to set up the appropriate hooks for their use of glance
* Added changes from mini server
* fix failing tests
* merge from trunk
* merge the trunk
* Merged trunk
* merged trunk
* Merged trunk
* Merged from lab
* fix pylint errors
* merge from trunk
* Moves image creation from POST /images to POST /servers/<id>/action
* - Remove Twisted dependency from pip-requires - Remove Twisted patch from tools/install\_venv.py - Remove eventlet patch from tools/install\_venv.py - Remove tools/eventlet-patch - Remove nova/twistd.py - Remove nova/tests/test\_twistd.py - Remove bin/nova-instancemonitor - Remove nova/compute/monitor.py - Add xattr to pip-requires until glance setup.py installs it correctly - Remove references to removed files from docs/translations/code
* Merged trunk
* pull-up from trunk/fix merge conflict
* pull-up from trunk
* Removing the xenapi\_image\_service flag in favor of image\_service
* Merged trunk
* removing compute monitor
* merge from trunk
* While we currently trap JSON encoding exceptions and bail out, for error notification it's more important that \*some\* form of the message gets out. So, we take complex notification payloads and convert them to something we know can be expressed in JSON
* Better error handling for resizing
* merged trunk rev1348
* merged with nova trunk
* Added @test.skip\_unless and @test.skip\_if functionality. Also created nova/tests/test\_skip\_examples.py to show the skip cases usage
* merge trunk, resolve conflict in net/manater.py in favor of vif-plug
* initial commit of vif-plugging for network-service interfaces
* Merged trunk
* merged from trunk
* merge with trunk, resolve conflicts
* merge from trunk
* Resync to trunk
* merging
* FlavorNotFound already existed, no need to create another exception
* You see what happens Danny when you forget to close the parenthesis
* Merged with trunk
* Merged trunk
* allow getting by the cidr\_v6
* merging trunk
* pull-up from trunk and conflict resolution
* merge trunk
* Round 1 of changes for keystone integration.  \* Modified request context to allow it to hold all of the relevant data from the auth component.  \* Pulled out access to AuthManager from as many places as possible  \* Massive cleanup of unit tests  \* Made the openstack api fakes use fake Authentication by default
* pull-up from trunk
* Fix various errors discovered by pylint and pyflakes
* merged trunk
* This change creates a minimalist API abstraction for the nova/rpc.py code so that it's possible to use other queue mechanisms besides Rabbit and/or AMQP, and even use other drivers for AMQP rather than Rabbit.  The change is intended to give the least amount of interference with the rest of the code, fixes several bugs in the tests, and works with the current branch.  I also have a small demo driver+server for using 0MQ which I'll submit after this patch is merged
* made the whole instance handling thing optional
* pull-up from trunk; fix problem obscuring context module with context param; fix conflicts and no-longer-skipped tests
* --Stolen from https://code.launchpad.net/~cerberus/nova/lp809909/+merge/68602
* Use the util.import\_object to import a module
* merged trunk and fix time call
* merge trunk
* merged trunk
* added instance support to to\_primitive and tests
* merge with trunk
* Adds XML serialization for servers responses that match the current v1.1 spec
* merging trunk
* Use utils.utcnow. Use True instead of literal 1
* merge trunk
* Updated deserialization of POST /servers in the OSAPI to match the latest v1.1 spec
* pull-up from trunk
* merge trunk
* merge from trunk
* merge to trunk
* some minor cosmetic work. addressed some dead code section
* merged with nova-1336
* merged trunk
* fix undefined variable errors
* fix call to nonexistant method to\_global\_ipv6. Add myself to authors file
* updates handling of arguments in nova-manage network create. updates a few of the arguments to nova-manage and related help. updates nova-manage to raise proper exceptions
* Fail silently
* Fixed conflict
* Merged with trunk and fixed broken unit test cases
* merged trunk
* merge from trunk
* pull-up from trunk
* Makes security group rules with the newer version of the ec2 api and correctly supports boto 2.0
* merging parent branch servers-xml-serialization
* merged recent trunk
* merge with trunk
* Resolved conflicts with trunk
* Implements a simplified messaging abstraction with the least amount of impact to the code base
* merging parent branch lp:~rackspace-titan/nova/osapi-create-server
* VSA volume creation/deletion changes
* Updates to the compute API and manager so that rebuild, reboot, snapshots, and password resets work with the most recent versions of novaclient
* merging trunk; resolving conflicts
* queries in the models.Instance context need to reference the table by name (fixed\_ips) however queries in the models.FloatingIp context alias the tables out properly and return the data as fixed\_ip (which is why you need to reference it by fixed\_ip in that context)
* merged from trunk
* merged trunk
* merging trunk
* pull-up from trunk
* Updates /servers requests to follow the v1.1 spec. Except for implementation of uuids replacing ids and access ips both of which are not yet implemented. Also, does not include serialized xml responses
* merged trunk
* merge from trunk
* merged trunk
* I'm sorry, for my fail with rebasing. Any way previous branch grew to many other futures, so I supersede it. 1. Used optparse for parsing arg string 2. Added decorator for describe method params 3. Added option for assigning network to certain project. 4. Added field to "network list" for showing which project owns network
* Moved the VIF network connectivity logic('ensure\_bridge' and 'ensure\_vlan\_bridge') from the network managers to the virt layer.  In addition, VIF driver class is added to allow customized VIF configurations for various types of VIFs and underlying network technologies
* merge with trunk, resolve conflicts
* fixing merge conflict
* merge from trunk
* merged with 1320
* some cleanup. VSA flag status changes. returned some files
* merged trunk
* This fixes the xml serialization of the /extensions and /extensions/foo resources. Add an ExtensionsXMLSerializer class and corresponding unit tests
* merge with trunk, resolve conflicts
* db/api: fix network\_get\_by\_cidr()
* db/api: block\_device\_mapping\_update\_or\_create()
* Merged with 1306 + fix for dns change
* merge with 1305
* Adds ability to set DNS entries on network create. Also allows 2 dns servers per network to be specified
* Reverted volume driver part
* pass in the right argument
* merged trunk
* Merged Dan's branch
* Merged trunk
* merge with trunk, resolve conflicts
* merge ryu's branch
* start removing references to AuthManager
* change context to maintain exact time, store roles, use ids instead of objects and use a uuid for request\_id
* Resolved conflict with trunk
* merge trunk
* Updated the compute API so that has\_finished\_migration uses instance\_uuid. Fixes some regressions with 1295-1296
* This fixes issues with invalid flavorRef's being passed in returning a 500 instead of a 400, and adds tests to verify that two separate cases work
* merge from trunk
* Perform fault wrapping in the openstack WSGI controller. This allows us to just raise webob Exceptions in OS API controllers with the appropriate explanations set. This resolves some inconsistencies with exception raising and returning that would cause HTML output to occur when faults weren't being handled correctly
* Merged with trunk which includes ha-net changes
* Updated the compute API so that has\_finished\_migration uses instance\_uuid. Fixes some regressions with 1295-1296
* allow 2 dns servers to be specified on network create
* Fixes lp813006
* Fixes lp808949 - "resize doesn't work with recent novaclient"
* merge with trunk
* - Add 'fixed\_ipv6' property to VirtualInterface model - Expose ipv6 addresses in each network in OSAPI v1.1
* Merged trunk
* Merged lp:~~danwent/nova/network-refactoring
* Adds HA networking (multi\_host) option to networks
* merge ryu's branch
* Merged trunk
* merged trunk
* network api release\_floating\_ip method will now check to see if an instance is associated to it, prior to releasing
* Fixes lp809587
* Merged with trunk
* Reverted to original code, after network binding to project code is in integration code for testing new extension will be added
* Fixes lp813006 - inconsistent DB API naming
* merged from trunk
* Merged trunk
* Merged with trunk
* merged trunk
* merged trunk
* fixed reviewer's comment. 1. ctxt -> context, 2. erase unnecessary exception message from nova.sccheduler.driver
* merged trunk
* This change adds the basic boot-from-volume support to the image service
* pep8 cleanup
* adding fixed\_ipv6 property to VirtualInterface model; exposing ipv6 in api
* Merged with trunk
* fix issues that were breaking vlan mode
* added missing instance\_get\_all\_by\_vsa
* VSA: first cut. merged with 1279
* merging trunk
* Adds greater configuration flexibility to rate limiting via api-paste.ini.  In particular:
* merge with trunk
* - Present ip addresses in their actual networks, not just a static public/private - Floating ip addresses are grouped into the networks with their associated fixed ips - Add addresses attribute to server entities
* merge with trunk, resolve conflicts
* Existing Windows agent behaves differently than the Unix agents and require some workarounds to operate properly. Fixes are going into the Windows agent to make it behave better, but workarounds are needed for compatibility with existing installed base
* Merged with trunk and fixed pep errors
* added integrated unit testcases and minor fixes
* First pass
* merging trunk
* pull-up from trunk, while we're at it
* Merged with Trunk
* Updated responses for GET /images and GET /images/detail to respect the OSAPI v1.1 spec
* merge
* merge from trunk
* Extends the exception.wrap\_exception decorator to optionally send an update to the notification system in the event of a failure
* trunk merge
* merging trunk
* updating testing; simplifying instance-level code
* adding test; casting instance to dict to prevent sqlalchemy errors
* merged branch lp:~rackspace-titan/nova/images-response-formatting
* merged trunk
* merge with trunk
* Starting part of multi-nic support in the guest. Adds the remove\_fixed\_ip code, but is incomplete as it needs the API extension that Vek is working on
* merged trunk
* fix reviewer's comment
* fixed marshalling problem to cast\_compute..
* This doesn't actually fix anything anymore, as the wsgi\_refactor branch from Waldon took care of the issue. However, a couple rescue unit tests would have caught this originally, so I'm proposing this to include those
* Merged with Trunk
* add optional parameter networks to the Create server OS API
* Made xen plugins rpm noarch
* Set the proper return code for server delete requests
* merging trunk
* minor tweaks
* Adds an extension which makes add\_fixed\_ip() available through an OpenStack extension
* Fix the bug 800759
* fix conflict
* Fixed up an incorrect key being used to check Zones
* merged trunk
* fix tests
* make sure that old networks get the same dhcp ip so we don't break existing deployments
* cleaned up on set network host to \_setup\_network and made networks allocate ips dynamically
* Make the instance migration calls available via the API
* Merged trunk
* image/fake: added teardown method
* merge with trunk
* pull-up from trunk
* pull-up from trunk
* Merging issuse
* implemented clean-up logic when VM fails to spawn for xenapi back-end
* Adds the os-hosts API extension for interacting with hosts while performing maintenance. This differs from the previous merge prop as it uses a RESTful design instead of GET-based actions
* stricter zone\_id checking
* trunk merge
* Merged trunk
* Updated the links container for flavors to be compliant with the current spec
* merged trunk
* Add a socket server responding with an allowing flash socket policy for all requests from flash on port 843 to nova-vncproxy
* Pull-up from trunk (post-multi\_nic)
* removed extra comment
* merged trunk
* merge code i'd split from instance\_get\_fixed\_addresses\_v6 that's no longer needed to be split
* rename \_check\_servers\_options, add some comments and small cleanup in the db get\_by\_filters call
* convert filter value to a string just in case before running re.compile
* pep8 fixes
* test fixes.. one more to go
* merged trunk
* test fixes and typos
* typos
* cleanup checking of options in the API before calling compute\_api's get\_all()
* a lot of major re-work.. still things to finish up
* merged trunk
* merged trunk
* missing doc strings for fixed\_ip calls I renamed
* merged trunk
* pep8 fixes
* merged trunk
* added searching by 'image', 'flavor', and 'status' reverted ip/ip6 searching to be admin only
* compute's get\_all should accept 'name' not 'display\_name' for searching Instance.display\_name. Removed 'server\_name' searching.. Fixed DB calls for searching to filter results based on context
* clean up checking for exclusive search options fix a cut n paste error with instance\_get\_all\_by\_name\_regexp
* merged trunk
* fix bugs with fixed\_ip returning a 404 instance searching needs to joinload more stuff
* added searching by instance name added unit tests
* pep8 fixes
* Replace 'like' support with 'regexp' matching done in python.  Since 'like' would result in a full table scan anyway, this is a bit more flexible. Make search options and matching a little more generic Return 404 when --fixed\_ip doesn't match any instance, instead of a 500 only when the IP isn't in the FixedIps table
* update tests
* add ability to set multi\_host in nova-manage and remove debugging issues
* pass in dhcp server address, fix a bunch of bugs
* make sure to filter out ips associated by host and add some sync for allocating ip to host
* First round of changes for ha-flatdhcp
* fixed a bug which prevents suspend/resume after block-migration
* properly displays addresses in each network, not just public/private; adding addresses attribute to server entities
* after trunk merge
* Found some additional fixed\_ip. entries in the Intance model contest that needed to be updated
* Changed fixed\_ip.network to be fixed\_ips.network, which is the correct DB field
* Added the GroupId param to any pertinent security\_group methods that support it in the official AWS API
* Fixed the case where an exception was thrown when trying to get a list of flavors via the api yet there were no flavors to list
* fix up tests
* Update the fixed\_ip\_disassociate\_all\_by\_timeout in nova.db.api so that it supports Postgres. Fixes casting errors on postgres with this function
* added multi-nic support
* trunk merge with migration renumbering
* Child Zone Weight adjustment available when adding Child Zones
* trunk merge
* merge trunk
* merged trunk
* Windows instances will often take a few minutes setting up the image on first boot and then reboot. We should be more patient for those systems as well check if the domid changes so we can send agent requests to the current domid
* refactored instance type code
* - add metadata container to /images/detail and /images/<id> responses - update xml serialization to encode image entities properly
* merging trunk
* trunk merge
* Update the fixed\_ip\_disassociate\_all\_by\_timeout in nova.db.api so that it supports Postgres. Fixes casting errors on postgres with this function
* phew ... working
* compute\_api.get\_all should be able to recurse zones (bug 744217). Also, allow to build more than one instance at once with zone\_aware\_scheduler types. Other cleanups with regards to zone aware scheduler..
* fix issue of recurse\_zones not being converted to bool properly add bool\_from\_str util call add test for bool\_from\_str slight rework of min/max\_count check
* merged trunk
* pulled in koelkers test changes
* merge with trey
* Merged trunk
* merged trunk, fixed the floating\_ip fixed\_ip exception stupidity
* trunk merge
* Implement backup with rotation and expose this functionality in the OS API
* Merged trunk
* adopt merge
* moved migration again & trunk merge
* Merged trunk
* merging trunk
* This adds system usage notifications using the notifications framework. These are designed to feed an external billing or similar system that subscribes to the nova feed and does the analysis
* Refactored usage generation
* merge with trey
* Re-worked some of the WSGI and WSGIService code to make launching WSGI services easier, less error prone, and more testable. Added tests for WSGI server, new WSGI loader, and modified integration tests where needed
* Merged trunk
* pep8 fix
* Adds support for "extra specs", additional capability requirements associated with instance types
* resync with trunk
* remerged trunk
* Re-merging code for generating system-usages to get around bzr merge braindeadness
* Added floating IP support in OS API
* This speeds up multiple runs of tests to start up much faster because it only runs db migrations if the test db doesn't exist.  It also adds the -r/--recreate-db option to run\_tests.sh to delete the tests db so it will be recreated
* small formatting change
* merge with trey
* trunk merge, getting fierce.
* Merged trunk
* Added nova.version to utils.py
* Pulled trunk, merged boot from ISO changes
* fixed pep style
* review issues fixed
* merge with trunk
* Upstream merge
* merging trunk; adding error handling around image xml serialization
* only create the db if it doesn't exist, add an option -r to run\_tests.py to delete it
* Fix for bug #788265. Remove created\_at, updated\_at and deleted\_at from instance\_type dict returned by methods in sqlalchemy API
* PEP8 fix
* pep8
* Updated \_dict\_with\_extra\_specs docstring
* Renamed \_inst\_type\_query\_to\_dict -> \_dict\_with\_extra\_specs
* Merged from trunk
* Add api methods to delete provider firewall rules
* Removes the usage of the IPy module in favor of the netaddr module
* merged
* trunk merged. conflicts resolved
* added disassociate method to tests
* some tests and refactoring
* Trunk merge fixes
* Merging trunk
* Merged from trunk
* Merged with trunk
* Unwind last commit, force anyjson to use our serialization methods
* Now automatically populates the instance\_type dict with extra\_specs upon being retrieved from the database
* Created Bootstrapper to handle Nova bootstrapping logic
* trunk merge
* updated the way vifs/fixed\_ips are deallocated and their relationships, altered lease/release fixed\_ip
* This adds a way to create global firewall blocks that apply to all instances in your nova installation
* merge from trunk
* proper xml serialization for images
* Add xml serialization for all /images/<id>/meta and /images/<id>/meta/<key> responses
* trunk merge and migration bump
* Merged markwash's fixes
* Merged trunk
* Returned code to original location
* Merged from trunk
* This catches the InstanceNotFound exception on create, and ignores it.  This prevents errors in the compute log, and causes the server to not be built (it should only get InstanceNotFound if the server was deleted right after being created).  This is a temporary fix that should be fixed correctly once no-db-messaging stuff is complete
* added virtual\_interface\_update method
* merging trunk
* added fixed ip filtering by null virtual interface\_id to network get associated fixed ips
* fixed ip gets now have floating IPs correctly loaded
* fix some issues with flags and logging
* api/ec2, boot-from-volume: an unit test for describe instances
* db/block\_device\_mapping/api: introduce update\_or\_create
* merge with trunk
* fixed zone update
* trunk merge
* merge from trunk
* This branch adds support to the xenapi driver for updating the guest agent on creation of a new instance. This ensures that the guest agent is running the latest code before nova starts configuring networking, setting root password or injecting files
* merge from trunk
* some libvirt multi-nic just to get it to work, from tushar
* merge with trey
* Filter out datetime fields from instance\_type
* Merged trunk
* added adjust child zone test
* tests working again
* updated the exceptions around virtual interface creation, updated flatDHCP manager comment
* more trunks
* another trunk merge
* This patch adds support for working with instances by UUID in addition to integer IDs
* Merging trunk, fixing conflicts
* Cleanup and addition of tests for WSGI server
* Merged trunk
* Check that server exists when interacting with /v1.1/servers/<id>/meta resource
* merged rev trunk 1198
* Cleanup of the cleanup
* Cleaned up nova-api binary and logging a bit
* General cleanup and refactor of a lot of the API/WSGI service code
* Adding tests for is\_uuid\_like
* Implements a portion of ec2 ebs boot. What's implemented - block\_device\_mapping option for run instance with volume   (ephemeral device and no device isn't supported yet) - stop/start instance
* updated fixed ip and floating ip exceptions
* Merging trunk
* moving instance existance logic down to api layer
* bunch of docstring changes
* Removes nova/image/local.py (LocalImageService)
* Increased error message readability for the OpenStack API
* merging trunk
* Upstream merge
* Rename: intance\_type\_metadata -> instance\_type\_extra\_specs
* erroneous self in virtual\_interface\_delete\_by\_instance() sqlalchemy api
* Renaming to \_build\_instance\_get
* merged trunk
* merge with trey
* Merged reldan changes
* First implementation of FloatingIpController
* Adds 'joinedload' statements where they need to be to prevent access of a 'detached' object
* syntax
* Merged trunk
* Added metadata joinedloads
* Prep-work to begin on reroute\_compute
* Adding uuid test
* Pep8 Fixes
* Adding UUID test
* merge with nova trunk
* db/block\_device\_mapping\_get\_all\_by\_instance: don't raise
* PEP8 cleanups
* pep8
* The Xen driver supports running instances in PV or HVM modes, but the method it uses to determine which to use is complicated and doesn't work in all cases. The result is that images that need to use HVM mode (such as FreeBSD 64-bit) end up setting a property named 'os' set to 'windows'
* typo
* net base project id now from context, removed incorrect floatnig ip host assignment
* Phew ... ok, this is the last dist-scheduler merge before we get into serious testing and minor tweaks. The heavy lifting is largely done
* merged trunk
* merged trunk rev 1178
* merge with trey
* - fixes bug that prevented custom wsgi serialization
* merging trunk, fixing pep8
* This fixes the server\_metadata create and update functions that were returning req.body (as a string) instead of body (deserialized body dictionary object).  It also adds checks where appropriate to make sure that body is not empty (and return 400 if it is).  Tests updated/added where appropriate
* merging trunk
* trunk merge
* merge trunk
* fix method chaining in database layer to pass right parameters
* Add a method to delete provider firewall rules
* block migration feature added
* floating ips can now move around the network hosts
* Allows Nova to talk to multiple Glance APIs (without the need for an external load-balancer). Chooses a random Glance API for each request
* forgot a comma
* misc argument alterations
* trunk merge and ec2 tests fixed
* Add some docstrings for new agent build DB functions
* Record architecture of image for matching to agent build later. Add code to automatically update agent running on instance on instance creation
* tests working after merge-3 update
* Pull-up from multi\_nic
* merged koelkers tests branch
* Merging trunk
* Merged trunk
* Fix merge conflict
* merged trunk again
* updated docstring for nova-manage network create
* Now forwards create instance requests to child zones. Refactored nova.compute.api.create() to support deferred db entry creation
* MySQL database tables are currently using the MyISAM engine. Created migration script nova/db/sqlalchemy/migrate\_repo/versions/021\_set\_engine\_mysql\_innodb.py to change all current tables to InnoDB
* merged trunk again
* Cleaned up some pylint errors
* removed network\_info shims in vmops
* trunk merge
* merge trunk
* Cleaned up some of the larger pylint errors. Set to ignore some lines that pylint just couldn't understand
* pep8
* Make libvirt snapshotting work with images that don't have an 'architecture' property
* take out the host
* run\_instances will check image for 'available' status before attempting to create a new instance
* Use True/False instead of 1/0 when setting updating 'deleted' column attributes. Fixes casting issues when running nova with Postgres
* merged from trunk
* Use True/False instead of 1/0 when setting updating 'deleted' column attributes.Fixes casting issues when running nova with Postgres
* This branch allows marker and limit parameters to be used on image listing (index and detail) requests.  It parses the parameters from the request, and passes it along to the glance\_client, which can now handle these parameters.  Essentially all of the logic for the pagination is handled in glance, we just pass along the correct parameters and do some error checking
* merge from trunk, resolved conflicts
* Update the OSAPI images controller to use 'serverRef' for image create requests
* Changed the error raise to not be AdminRequired when admin is not, in fact, required
* merge with trey
* Change to a more generic error and update documentation
* Merged trunk
* merge trunk
* merge with trunk
* Fixed incorrect exception
* This branch removes nwfilter rules when instances are terminated to prevent resource leakage and serious eventual performance degradation.  Without this patch, launching instances and restarting nova-compute eventually become very slow
* merge with trunk
* resolve conflicts with trunk
* Update migrate script version to 22
* trunk merge after 2b hit
* Distributed Scheduler developer docs
* merged trunk again
* paramiko is not installed into the venv, but is required by smoketests/base.py.  Added paramiko to tools/pip-requires
* Changes all uses of utcnow to use the version in utils.  This is a simple wrapper for datetime.datetime.utcnow that allows us to use fake values for tests
* Set pylint to ignore correct lines that it could not determine were correct, due to the means by which eventlet.green imported subprocess Minimized the number of these lines to ignore
* LDAP optimization and fix for one small bug caused huge performance leak. Dashboard's benchmarks showed overall x22 boost in page request completion time
* Adds LeastCostScheduler which uses a series of cost functions and associated weights to determine which host to provision to
* trunk merge
* Merged with trunk
* This change set adds the ability to create new servers with an href that points to a server image on any glance server (not only the default one configured).  This means you can create a server with imageRef = http://glance1:9292/images/3  and then also create one with imageRef = http://glance2:9292/images/1.  Using the old way of passing in an image\_id still works as well, and will use the default configured glance server (imageRef = 3 for instance)
* merged trunk
* merge trunk... yay..
* make all uses of utcnow use our testable utils.utcnow
* Fixing conflicts
* This adds the ability to publish nova errors to an error queue
* Sudo chown the vbd device to the nova user before streaming data to it. This resolves an issue where nova-compute required 'root' privs to successfully create nodes with connection\_type=xenapi
* Bugfix #780784. KeyError when creating custom image
* merge with trey
* merged from trunk
* small fixes
* fix pep8 issue from merge
* - move osapi-specific wsgi code from nova/wsgi.py to nova/api/openstack/wsgi.py - refactor wsgi modules to use more object-oriented approach to wsgi request handling:     - Resource object steps up to original Controller position     - Resource coordinates deserialization, dispatch to controller, serialization     - serialization and deserialization broken down to be more testable/flexible
* merge from trunk
* Merged from trunk
* Adds hooks for applying ovs flows when vifs are created and destroyed for XenServer instances
* Fixing a bunch of conflicts
* Incremented version of migration script to reflect changes in trunk
* Basic hook-up to HostFilter and fixed up the passing of InstanceType spec to the scheduler
* Resolving conflict and finish test\_images
* merge
* Merged trunk
* Merged trunk and fixed conflicts
* added pause/suspend implementation to nova.virt.libvirt\_conn
* Update the rebuild\_instance function in the compute manager so that it accepts the arguments that our current compute API sends
* Added the filtering of image queries with image metadata. This is exposing the filtering functionality recently added to Glance. Attempting to filter using the local image service will be ignored
* This enables us to create a new volume from a snapshot with the EC2 api
* Use a new instance\_metadata\_delete\_all DB api call to delete existing metadata when updating a server
* Add vnc\_keymap flag, enable setting keymap for vnc console and fix bug #782611
* Rebased to trunk rev 1120
* trunk merge
* Cleaned up text conflict
* pep8 fixes
* merge trunk
* merge from trunk
* This adds a volume snapshot support with the EC2 api
* Updates so that 'name' can be updated when doing a OS API v1.1 rebuild. Fixed issue where metadata wasn't getting deleted when an empty dict was POST'd on a rebuild
* Use metadata variable when calling \_metadata\_refs
* Fixes to the SQLAlchmeny API such that metadata is saved on an instance\_update. Added integration test to test that instance metadata is updated on a rebuild
* Fixing pep8 problems
* Modified instance\_type\_create to take metadata
* Added test for instance type metadata update
* Adding accessor methods for instance type metadata
* trunk merge
* Fix a description of 'snapshot\_name\_template'
* compute: implement ec2 stop/start instances
* db: add a table for block device mapping
* Adds the ability to make a call that returns multiple times (a call returning a generator). This is also based on the work in rpc-improvements + a bunch of fixes Vish and I worked through to get all the tests to pass so the code is a bit all over the place
* Rename instances.image\_id to instances.image\_ref
* merge with dietz
* Virt tests passing while assuming the old style single nics
* merge trunk
* Essentially adds support for wiring up a swap disk when building
* Merged trunk
* branch 2a merge (including trunk)
* trunk merge
* merging trunk
* merge with dietz
* remove dead/duplicate code
* Added test skipper class
* cleanup the code for merging
* lots of fixes for rpc and extra imports
* almost everything working with fake\_rabbit
* merge with dietz
* Fixing divergence
* Merged trunk
* Fixed the mistyped line referred to in bug 787023
* Merged trunk and resolved conflicts
* Merged with trunk
* Several changes designed to bring the openstack api 1.1 closer to spec - add ram limits to the nova compute quotas - enable injected file limits and injected file size limits to be overridden in the quota database table - expose quota limits as absolute limits in the openstack api 1.1 limits resource - add support for controlling 'unlimited' quotas to nova-manage
* During the API create call, the API would kick off a build and then loop in a greenthread waiting for the scheduler to pick a host for the instance.  After API would see a host was picked, it would cast to the compute node's set\_admin\_password method
* Merged upstream
* merged trunk
* Merged trunk
* Created new libvirt directory, moved libvirt\_conn.py to libvirt/connection.py, moved libvirt templates, broke out firewall and network utilities
* merge against 2a
* trunk merge
* merged recent trunk
* merged recent trunk
* eventlet.spawn\_n() expects the function and arguments, but it expects the arguments unpacked since it uses \*args
* merge with trey
* merge trunk
* moved auto assign floating ip functionality from compute manager to network manager
* need to return the ref
* many tests pass now
* Fixes some minor doc issues - misspelled flags in zones doc and also adds zones doc to an index for easier findability
* Synchronise with Diablo development
* zone1 merge
* uhhh yea
* make sure to get a results, not the query
* merged from trunk
* Renaming service\_image\_id vars to image\_id to reduce confusion. Also some minor cleanup
* port the current create\_networks over to the new network scheme
* merge trunk
* merge branch lp:~rackspace-titan/nova/ram-limits
* Rebased to trunk rev 1101
* merge from trunk
* moved utils functions into nova/image/
* Trunk merge
* Fix bug #744150 by starting nova-api on an unused port
* Removing utils.is\_int()
* merge trunk
* merging trunk
* Merged with trunk
* print information about nova-manage project problems
* merge from trunk
* This is the groundwork for the upcoming distributed scheduler changes. Nothing is actually wired up here, so it shouldn't break any existing code (and all tests pass)
* Merging trunk
* Get rid of old virt/images.py functions that are no longer needed.  Checked for any loose calls to these functions and found none.  All tests pass for me
* Update OSAPI v1.1 extensions so that it supports RequestExtensions. ResponseExtensions were removed since the new RequestExtension covers both use cases. This branch also removes some of the odd serialization code in the RequestExtensionController that converted dictionary objects into webob objects. RequestExtension handlers should now always return proper webob objects
* foo
* Fixed some tests
* merge with trunk
* Added an EC2 API endpoint that'll allow import of public key. Prior, api only allowed generation of new keys
* Add new flag 'max\_kernel\_ramdisk\_size' to specify a maximum size of kernel or ramdisk so we don't copy large files to dom0 and fill up /boot/guest
* Merged with trunk
* merge from trunk
* Merged trunk and resolved horrible horrible conflicts
* waldon's naming feedback
* Merging trunk
* updated the hypervisors and ec2 api to support receiving lists from pluralized mac\_addresses and fixed\_ips
* minor cleanup, plus had to merge because of diverged-branches issue
* merge from trunk
* Fix comments
* merge lp:nova
* default to port 80 if it isnt in the href/uri
* skeleton of forwarding calls to child zones
* merge trunk
* Implements a basic mechanism for pushing notifications out to interested parties. The rationale for implementing notifications this way is that the responsibility for them shouldn't fall to Nova. As such, we simply will be pushing messages to a queue where another worker entirely can be written to push messages around to subscribers
* get real absolute limits in openstack api and verify absolute limit responses
* Merging trunk
* fix pep8 issues
* fixed QuotaTestCases
* fixed ComputeTestCase tests
* made ImageControllerWithGlanceServiceTests pass
* get integrated server\_tests passing
* Removed all utils.import\_object(FLAGS.image\_service) and replaced with utils.get\_default\_image\_service()
* added is\_int function to utils
* Pep8 fixes
* updates to utils methods, initial usage in images.py
* added util functions to get image service
* Adding fill first cost function
* Fixes the naming of the server\_management\_url in auth and tests
* Merging in Sandy's changes adding Noop Cost Fn with tests
* merged trunk
* merge ram-limits
* Fixes improper attribute naming around instance types that broke Resizes
* Added missing metadata join to instance\_get calls
* add ram limits to instance quotas
* Convert instance\_type\_ids in the instances table from strings to integers to enable joins with instance\_types. This in particular fixes a problem when using postgresql
* merge lp:nova
* Re-pull changed notification branch
* failure conditions are being sent back properly now
* Added missing metadata join to instance\_get calls
* Migrate quota schema from hardcoded columns to a key-value approach. The hope is that this change would make it easier to change the quota system without future schema changes. It also adds the concept of quotas that are unlimited
* updated the mac\_address delete function to actually delete the rows, and update fixed\_ips
* Added missing flavorRef and imageRef checks in the os api xml deserialization code along with tests
* This branch splits out the IPv6 address generation into pluggable backends. A new flag named ipv6\_backend specifies which backend to use
* Review changes and merge from trunk
* merge trunk
* Adds proper error handling for images that can't be found and a test for deregister image
* added |fixed\_ip\_get\_all\_by\_mac\_address| and |mac\_address\_get\_by\_fixed\_ip| to db and sqlalchemy APIs
* Merging in trunk
* I'm assuming that openstack doesnt work with python < 2.6 here (which I read somewhere on the wiki).  This patch will check to make sure python >= 2.6 is installed, and also allow it to work with python 2.7 (and greater in the future)
* merge lp:nova
* XenAPI was not implemented to allow for multiple simultaneous XenAPI requests.  A single XenAPIConnection (and thus XenAPISession) is used for all queries.  XenAPISession's wait\_for\_task method would set a self.loop = for looping calls to \_poll\_task until task completion.  Subsequent (parallel) calls to wait\_for\_task for another query would overwrite this.  XenAPISession.\_poll\_task was pulled into the XenAPISession.wait\_for\_task method to avoid having to store self.loop
* Merged trunk
* Merging in Sandy's changes
* merge trunk
* trunk merge
* merge trunk
* fixed\_ip disassociate now also unsets mac\_address\_id
* Make sure imports are in alphabetical order
* merged from trunk
* if a LoopingCall has canceled the loop, break out early instead of sleeping any more than needed
* merged from trunk
* misc related network manager refactor and cleanup
* merged from trunk
* merge from trunk
* rename quota column to 'hard\_limit' to make it simpler to avoid collisions with sql keyword 'limit'
* 1 Set default paths for nova.conf and api-paste.ini to /etc/nova/ 2 Changed countryName policy because https://bugs.launchpad.net/nova/+bug/724317 still affected
* Implement IPv6 address generation that includes account identifier
* merge from trunk and update .mailmap file
* oops fixed a docstring
* more filter alignment
* merge trunk
* align filters on query
* Merged trunk
* Abstract out IPv6 address generation to pluggable backends
* Merged trunk
* extracted xenserver capability reporting from dabo's dist-scheduler branch and added tests
* Enable RightAWS style signature checking using server\_string without port number, add test cases for authenticate() and a new helper routine, and fix lp753660
* Set root password upon XenServer instance creation
* trunk merge
* fix mismerge by 1059
* Host Filtering for Distributed Scheduler (done before weighing)
* Rebased to trunk rev 1057
* merge from trunk
* convert quota table to key-value
* Simple fix for this issue.  Tries to raise an exception passing in a variable that doesn't exist, which causes an error
* Merged trunk
* merge from trunk
* Sanitize get\_console\_output results. See bug #758054
* Merged trunk
* merge with trunk
* merge from trunk
* Merged with current trunk
* Merged trunk
* Adding OSAPI v1.1 limits resource
* Adding support for server rebuild to v1.0 and v1.1 of the Openstack API
* looking for default flagfile
* merging trunk
* merging trunk
* Merged trunk
* Merged trunk
* ensure create image conforms to OS API 1.1 spec
* merge updates from trunk
* merged from trunk
* merging trunk; resolving conflicts; fixing issue with ApiError test failing since r1043
* Implement get\_host\_ip\_addr in the libvirt compute driver
* merging trunk; resolving conflicts
* merging trunk
* Final cleanup of nova/exceptions.py in my series of refactoring branches
* Uses memcached to cache roles so that ldap is actually usable
* Rebased to trunk rev 1035
* converted 1/0 comparison in db to True/False for Postgres cast compatibility
* converted 1/0 comparison to True/False for Postgres compatibility
* Added more unit-test for multi-nic-nova libvirt
* Make the import of distutils.extra non-mandatory in setup.py. Just print a warning that i18n commands are not available..
* further cleanup of nova/exceptions.py
* added eagerloading mac adddresses for instance
* merge with trunk and resolve conflicts
* Refactoring usage of nova.exception.NotFound
* merging trunk
* Make the import of distutils.extra non-mandatory in setup.py. Just print a warning that i18n commands are not available..
* Refactoring the usage of nova.exception.Duplicate
* Rebased to trunk rev 1030
* merged from trunk
* pep8
* merging trunk
* Merged trunk and fixed simple exception conflict
* merging trunk
* Refactoring nova.exception.Invalid usage
* adding gettext to setup.py
* Use runtime XML instead of VM creation time XML for createXML() call in order to ensure volumes are attached after RebootInstances as a workaround, and fix bug #747922
* Rebased to trunk rev 1027, and resolved a conflict in nova/virt/libvirt\_conn.py
* Rebased to trunk rev 1027
* clarifies error when trying to add duplicate instance\_type names or flavorids via nova-manage instance\_type
* merge trunk
* Rework completed. Added test cases, changed helper method name, etc
* merge trunk, resolved conflict
* merge trunk
* Provide option of auto assigning floating ip to each instance. Depend on auto\_assign\_floating\_ip boolean flag value. False by default
* Restore volume state on migration failure to fix lp742256
* Fixes cloudpipe to get the proper ip address
* merging trunk
* Fix bug with content-type and small OpenStack API actions refactor
* merge with trunk
* merge trunk
* merged trunk
* Merged trunk and fixed api servers conflict
* Addressing exception.NotFound across the project
* eager loaded mac\_address attributes for mac address get functions
* Fixed network\_info creation in libvirt driver. Now creating same dict as in xenapi driver
* rebase trunk
* commit to push for testing
* Rebased to trunk rev 1015
* Utility method reworked, etc
* Docstring cleanup and formatting (nova/db dir). Minor style fixes as well
* Docstring cleanup and formatting (nova dir). Minor style fixes as well
* merge trunk
* cleanups per code review
* docstring cleanup, nova dir
* docstring cleanup, nova/db dir
* merge with trunk
* Rebased to trunk rev 1005
* Merged trunk
* trunk merged
* Round 1 of pylint cleanup
* Implement quotas for the new v1.1 server metadata controller
* Fixes cloudpipe to get the proper ip address
* Merged trunk
* Add support for creating a snapshot of a nova volume with euca-create-snapshot
* Add support for creating a snapshot of a nova volume with euca-create-snapshot
* trunk merged
* use 'is not None' instead of '!= None'
* Support admin password when specified in server create requests
* merge lp:nova and resolve conflicts
* use 'is not None' instead of '!= None'
* trunk merged
* not performing floating ip operation with auto allocated ips
* Rebased to trunk rev 995
* Rebased to trunk rev 995
* merge trunk
* trunk merged. conflict resolved
* Add additional logging for WSGI and OpenStack API authentication
* Merged trunk
* merging trunk
* Updated following to RIck's comments
* Blushed up a little bit
* Merged lp:~rackspace-titan/nova/server\_metadata\_quotas as a prereq
* Merged trunk
* migaration and pep8 fixes
* Merged trunk
* merge trunk
* network manager changes, compute changes, various other
* Floating ips auto assignment
* Rebase to trunk rev 937
* merge trunk
* Rebased to trunk rev 973
* merge trunk
* resolved lazy\_match conflict between bin/nova-manage instance and instance\_type by moving instance subcommand under vm command. documented vm command in man page. removed unused instance\_id from vm list subcommand
* Rebased to trunk rev 971
* Reabased to trunk rev 971
* There is a race condition when a VDI is mounted and the device node is created. Sometimes (depending on the configuration of the Linux distribution) nova loses the race and will try to open the block device before it has been created in /dev
* merge trunk
* removes log command from nova-manage as it no longer worked in multi-log setup
* corrects incorrect openstack api responses for metadata (numeric/string conversion issue) and image format status (not uppercase)
* Implement a mechanism to enforce a configurable quota limit for image metadata (properties) within the OS API image metadata controller
* merge trunk
* merge trunk
* Fixes issues with describe instances due to improperly set metadata
* Added support for listing addresses of a server in the openstack api. Now you can GET  \* /servers/1/ips  \* /servers/1/ips/public  \* /servers/1/ips/private Supports v1.0 json and xml. Added corresponding tests
* This fixes how the metadata and addresses collections are serialized in xml responses
* merged trunk
* merged trunk and resolved conflict
* Update instances table to use instance\_type\_id instead of the old instance\_type column which represented the name (ex: m1.small) of an instance type
* Remove <addressSet> and <item> from AllocateAddress response, and fix bug #751176
* Blush up a bit
* Rebased to trunk rev 949
* Rebased to trunk rev 949
* pep8 cleanup
* merged trunk
* Merged trunk
* Support providing an XML namespace on the XML output from the OpenStack API
* Merged with trunk, fixed up test that wasn't checking namespace
* Enable RightAWS style signing on server\_string without port number portion
* Improved unit tests Fixed docstring formatting
* Only create ca\_path directory if it does not already exist
* Make "setup.py install" much more thorough. It now installs tools/ into /usr/share/nova and makes sure api-paste.conf lands in /etc/nova rather than /etc
* merged trunk
* merged trunk
* Moved 'name' from <imageId> to <imageLocation>, corrected <imageType> and fixes bug # 750482
* Separate CA/ dir into code and state
* Add a find\_data\_files method to setup.py. Use it to get tools/ installed under /usr/(local/)/share/nova
* Allow CA code and state to be separated, and make sure CA code gets installed by setup.py install
* Rebased to trunk 942
* merge trunk
* Refactor so that instances.instance\_type is now instances.instance\_type\_id
* merging trunk
* Declares the flag for vncproxy\_topic in compute.api
* fixes incorrect case of OpenStack API status response
* merge trunk
* Added synchronize\_session parameter to a query in fixed\_ip\_disassociate\_all\_by\_timeout() and fix #735974
* Added updated\_at field to update statement according to Jay's comment
* Rebased to trunk 930
* merge trunk
* Add a change password action to /servers in openstack api v1.1, and associated tests
* merge lp:nova
* Rebased to trunk rev 925
* Merged with trunk (after faults change to return correct content-type)
* OpenStack API faults have been changed to now return the appropriated Content-Type header
* Implement quotas for the new v1.1 server metadata controller. Modified the compute API so that metadata is a dict (not an array) to ensure we are using unique key values for metadata. This is isn't explicit in the SPECs but it is implied by the new v1.1 spec since PUT requests modify individual items
* Merged with trunk
* Merged with trunk
* Added synchronize\_session parameter to a query in fixed\_ip\_disassociate\_all\_by\_timeout() and fix #735974
* Merged trunk
* merge trunk
* merged trunk
* The VNC Proxy is an OpenStack component that allows users of Nova to access their instances through a websocket enabled browser (like Google Chrome)
* Support for volumes in the OpenStack API
* Merged with trunk
* add nova-vncproxy to setup.py
* This branch adds support for linux containers (LXC) to nova. It uses the libvirt LXC driver to start and stop the instance
* Glance used to return None when a date field wasn't set, now it returns ''. Glance used to return dates in format "%Y-%m-%dT%H:%M:%S", now it returns "%Y-%m-%dT%H:%M:%S.%f"
* Adds support for versioned requests on /images through the OpenStack API
* Merged trunk
* Added VLAN networking support for XenAPI
* Merged with trunk
* Merged trunk
* merge trunk
* merged from trunk
* merge lp:nova
* merge trunk
* merge trunk
* Merged trunk
* merge with trunk
* merge lp:nova
* Mixins for tests confuse pylint no end, and aren't necessary... you can stop the base-class from being run as a test by prefixing the class name with an underscore
* Merged with trunk
* merge trunk
* merge trunk, fixed conflicts
* merge trunk addressing Trey's comments
* Merged with trunk, resolved conflicts & code-flicts
* merged trunk
* merge trunk
* merge lp:nova
* Adding links container to openstack api v1.1 servers entities
* Merged trunk
* Merged trunk
* merging trunk
* merge trunk
* Merged trunk and fixed broken/conflicted tests
* - add a "links" container to versions entities for Openstack API v1.1 - add testing for the openstack api versions resource and create a view builder
* merging trunk
* This is basic network injection for XenServer, and includes:
* merging trunk
* Implement image metadata controller for the v1.1 OS API
* merging trunk
* merging trunk, resolving conflicts
* Add a "links" container to flavors entities for Openstack API v1.1
* merge trunk
* merge trunk
* merging trunk and resolving conflicts
* Implement metadata resource for Openstack API v1.1. Includes:       -GET /servers/id/meta       -POST /servers/id/meta       -GET /servers/id/meta/key       -PUT /servers/id/meta/key       -DELETE /servers/id/meta/key
* merge trunk, add unit test
* merge trunk
* merge trunk addressing reviewer's comments
* Support for markers for pagination as defined in the 1.1 spec
* merge trunk
* Ports the Tornado version of an S3 server to eventlet and wsgi, first step in deprecating the twistd-based objectstore
* Merged with trunk Updated net injection for xenapi reflecting recent changes for libvirt
* Support for markers for pagination as defined in the 1.1 spec
* port the objectstore tests to the new tests
* update test base class to monkey patch wsgi
* merge trunk
* Implementation of blueprint hypervisor-vmware-vsphere-support.  (Link to blueprint: https://blueprints.launchpad.net/nova/+spec/hypervisor-vmware-vsphere-support)
* Adds serverId to OpenStack API image detail per related\_image blueprint
* Implement API extensions for the Openstack API. Based on the Openstack 1.1 API the following types of extensions are supported:
* Merging trunk
* Adds unit test coverage for XenAPI Rescue & Unrescue
* libvirt driver multi\_nic support. In this phase libvirt can work with and without multi\_nic support, as in multi\_nic support for xenapi: https://code.launchpad.net/~tr3buchet/nova/xs\_multi\_nic/+merge/53458
* Merging trunk
* Merged trunk
* style and spacing  fixed
* Merged with trunk, fix problem with behaviour of (fake) virt driver when instance doesn't reach scheduling
* In this branch we are forwarding incoming requests to child zones when the requested resource is not found in the current zone
* trunk merge
* Fixes a bug that was causing tests to fail on OS X by ensuring that greenthread sleep is called during retry loops
* Merged trunk
* Fix some errors that pylint found in nova/api/openstack/servers.py
* Merged trunk
* Pylint 'Undefined variable' E0602 error fixes
* Made service\_get\_all()'s disabled parameter default to None. Pass False for enabled services; True for disabled services. Calls to this method have been updated to remain consistent
* Merged with trunk
* Merged trunk and resolved conflict in nova/db/sqlalchemy/api.py
* change names for consistency with existing db api
* Merged with trunk
* Aggregates capabilities from Compute, Network, Volume to the ZoneManager in Scheduler
* merged trunk r864
* merging trunk r864
* trunk merged. conflicts resolved
* Merged trunk
* merge trunk
* Small refactor
* merging trunk r863
* Merged trunk
* trunk merge
* merge trunk
* merge trunk
* Pass a fake timing source to live\_migration\_pre in every test that expectes it to fail, shaving off a whole minute of test run time
* merge trunk
* Poll instance states periodically, so that we can detect when something changes 'behind the scenes'
* Merged with conflict and resolved conflict (with my own patch, no less)
* Merged with trunk
* Added a mechanism for versioned controllers for openstack api versions 1.0/1.1. Create servers in the 1.1 api now supports imageRef/flavorRef instead of imageId/flavorId
* Merged trunk
* Merged trunk
* Fix issues with certificate updating & whitespace removal
* Offers the ability to run a periodic\_task that sweeps through rescued instances older than 24 hours and forcibly unrescues them
* Merged trunk
* merge trunk
* Merged with lp:nova, fixed conflicts
* Move all types of locking into utils.synchronize decorator
* Better method name
* small fix
* Added docstring
* Updates the previously merged xs\_migration functionality to allow upsizing of the RAM and disk quotas for a XenServer instance
* Fix lp735636 by standardizing the format of image timestamp properties as datetime objects
* migration gateway\_v6 to network\_info
* fix utils.execute retries for osx
* Merged trunk
* Automatically unrescue instances after a given timeout
* trunk merge
* Unit test cleanup
* trunk merged
* Merged trunk
* Merged trunk
* id -> instance\_id
* merged with trunk Updated xenapi network injection for IPv6 Updated unit tests
* merge trunk
* merge trunk
* Merging trunk
* Merged with lp:nova
* Merged with lp:nova
* Filtering images by user\_id now
* Added space in between # and TODO in #TODO
* Enable flat manager support for ipv6
* Adding a talk bubble to the nova.openstack.org site that points readers to the 2011.1 site and the docs.openstack.org site - similar to the swift.openstack.org site. I believe it helps people see more sites are available, plus they can get to the Bexar site if they want to. Going forward it'll be nice to use this talk bubble to point people to the trunk site from released sites
* Test the login behavior of the OpenStack API.  Uncovered bug732866
* trunk merge
* Renamed check\_instance -> check\_isinstance to make intent clearer
* Fix some crypto strangeness (\n in file\_name field of certificates, wrong IMPL method for certificate\_update)
* pep8 and fixed up zone-list
* Pep8 fix
* Merging trunk
* Adding BASE\_IMAGE\_ATTRS to ImageService
* Changed default for disabled on service\_get\_all to None. Changed calls to service\_get\_all so that the results should still be as they previously were
* Resolved conflicts
* Remove unused global semaphore
* Addressed reviewer's comments
* Merged trunk
* When updating or creating set 'delete = 0'. (thus reactivating a deleted row) Filter by 'deleted' on delete
* merging trunk r843
* merging trunk r843
* merging trunk r843
* Make synchronized decorator not leak semaphores, at the expense of not being truly thread safe (but safe enough for Eventlet style green threads)
* merge trunk
* Make synchronized support both external (file based) locks as well as internal (semaphore based) locks. Attempt to make it native thread safe at the expense of never cleaning up semaphores
* merge with trunk
* xenapi support for multi\_nic. This is a phase of multi\_nic which allows xenapi to work as is and with multi\_nic. The other virt driver(s) need to be updated with the same support
* merge lp:nova
* wrap and log errors getting image ids from local image store
* merge lp:nova
* merging trunk
* Provide more useful exception messages when unable to load the virtual driver
* Openstack api 1.0 flavors resource now implemented to match the spec
* merging trunk r837
* zones3 and trunk merge
* trunk merge
* merge with trunk
* merge trunk
* merge trunk
* merge trunk
* fixes nova-manage instance\_type compatibility with postgres db
* Make smoketests' exit code reveal whether they were succesful
* merge trunk
* fix nova-manage instance\_type list for postgres compatibility
* Merged trunk
* merge lp:nova
* merge trunk
* uses True/False instead of 1/0 for Postgres compatibility
* Cleanup of FakeAuthManager
* Replaced all pylint "disable-msg=" with "disable=" and "enable-msg=" with "enable="
* Re-implementation (or just implementation in many cases) of Limits in the OpenStack API. Limits is now available through /limits and the concept of a limit has been extended to include arbitrary regex / http verb combinations along with correct XML/JSON serialization. Tests included
* merge with trunk
* Mark instance metadata as deleted when we delete the instance
* Fixed 'Undefined variable' errors generated by pylint (E0602)
* Merged trunk
* disable-msg -> disable
* merge trunk
* merge trunk
* merge trunk
* Implement metadata resource for Openstack API v1.1. Includes:     -GET /servers/id/meta     -POST /servers/id/meta     -GET /servers/id/meta/key     -PUT /servers/id/meta/key     -DELETE /servers/id/meta/key
* Merged trunk
* Merged dependant branch lp:~rackspace-titan/nova/openstack-api-versioned-controllers
* fixed up bzr mess
* refactored out middleware, now it's a decorator on service.api
* Fix a couple of things that assume that libvirt == kvm/qemu
* Make utils.execute not overwrite std{in,out,err} args to Popen on retries. Make utils.execute reject unknown kwargs
* merged trunk, merged qos, slight refactor regarding merges
* - general approach for openstack api versioning - openstack api version now preserved in request context - added view builder classes to handle os api responses - added imageRef and flavorRef to os api v1.1 servers - modified addresses container structure in os api v1.1 servers
* merge
* Mark instance metadata as deleted when we delete the instance
* Backfix of bugfix of issue blocking creating servers with metadata
* Add support for network QoS (ratelimiting) for XenServer. Rate is pulled from the flavor (instance\_type) when constructing a vm
* Improved exception handling
* merging parent branch lp:~bcwaldon/nova/osapi-flavors-1\_1
* merging parent branch lp:~rackspace-titan/nova/openstack-api-version-split
* merged trunk
* merge trunk
* Merged trunk
* merge with trunk. moved scheduler\_manager into manager. fixed tests
* pep8
* Remerge trunk
* cleanup
* moved scheduler API check into db.api decorator
* MErge trunk
* foo
* hurr
* hurr
* Log the use of utils.synchronized
* expanding osapi flavors tests; rewriting flavors resource with view builders; adding 1.1 specific links to flavors resources
* Fix lp727225 by adding support for personality files to the openstack api
* merge lp:nova and resolve conflicts
* Merging trunk
* Don't generate insecure passwords where it's easy to use urandom instead
* merge trunk
* merge trunk
* added new class Instances for managaging instances added new method list in class Instances:
* Merged with trunk (and brian's previous fixes to fake auth)
* Add logging to lock check
* Merged trunk
* Use random.SystemRandom for easy secure randoms, configurable symbol set by default including mixed-case
* merge lp:nova
* Fixed bugs in bug fix (plugin call)
* exception fixup
* merged with trunk and removed conflicts
* Merging trunk
* Merged with trunk.  Had to hold bazaar's hand as it got lost again
* Fixed problem with metadata creation (backported fix)
* Clarify the logic in using 32 symbols
* Don't generate insecure passwords where it's easy to use urandom instead
* Fixing API per spec, to get unit-tests to pass
* merge trunk
* Initial implementation of refresh instance states
* Adding instance\_id as Glance image\_property
* removed conflicts and merged with trunk
* committing to share
* NTT's live-migration branch, merged with trunk, conflicts resolved, and migrate file renamed
* Test fixes and some typos
* merge trunk
* merge trunk
* Make nova-dhcpbridge output lease information in dnsmasq's leasesfile format
* Merged my doc changes with trunk
* Make utils.execute not overwrite std{in,out,err} args to Popen on retries. Make utils.execute reject unknown kwargs
* merge trunk
* Merged with trunk
* merged with latest trunk and removed unwanted files
* Use a consistent naming scheme for XenAPI variables
* fixed conflicts after merging with trunk with 787
* Replace raw SQL calls through session.execute() with SQLAlchemy code
* Remove vish comment
* Merged trunk
* This change adds the ability to boot Windows and Linux instances in XenServer using different sets of vm-params
* merge trunk
* Changes the output of status in describe\_volumes from showing the user as the owner of the volume to showing the project as the owner
* merge trunk
* Adds in multi-tenant support to openstack api. Allows for multiple accounts (projects) with admin api for creating accounts & users
* remerge trunk (again). fix issues caused by changes to deserialization calls on controllers
* Minor stylistic updates affecting indentation
* merge from trunk..
* Discovered literal\_column(), which does exactly what I need
* Merged trunk
* merge trunk
* merge lp:nova
* merge trunk
* Add a new IptablesManager that takes care of all uses of iptables
* Last un-magiced session.execute() replaced with SQLAlchemy code..
* PEP8
* Partial revert of one conversion due to phantom magic exception from SQLAlchemy in unrelated code; convert all deletes
* Correct a misspelling
* merge lp:nova
* merge trunk
* Introduces the ZoneManager to the Scheduler which polls the child zones and caches their availability and capabilities
* merge trunk
* merge lp:nova and add stub image service to quota tests as needed
* merged to trunk rev781
* Modifies S3ImageService to wrap LocalImageService or GlanceImageService.  It now pulls the parts out of s3, decrypts them locally, and sends them to the underlying service.  It includes various fixes for image/glance.py, image/local.py and the tests
* merged trunk
* fixed based on reviewer's comment
* Merged trunk
* Replace session.execute() calls performing raw UPDATE statements with SQLAlchemy code, with the exception of fixed\_ip\_disassociate\_all\_by\_timeout()
* merge lp:nova
* merge, resolve conflicts, and update to reflect new standard deserialization function signature
* Fixes doc build after execvp patch
* - Content-Type and Accept headers handled properly - Content-Type added to responses - Query extensions no long cause computeFaults - adding wsgi.Request object - removing request-specific code from wsgi.Serializer
* Fixes bug 726359. Passes unit tests
* merge lp:nova, fix conflicts, fix tests
* merge lp:nova and resolve conflicts
* Hi guys
* Update the create server call in the Openstack API so that it generates an 'adminPass' and calls set\_admin\_password in the compute API. This gets us closer to parity with the Cloud Servers v1.0 spec
* Merged trunk
* execvp passes pep8
* merge trunk
* Add a decorator that lets you synchronise actions across multiple binaries. Like, say, ensuring that only one worker manipulates iptables at a time
* merge lp:nova
* Fixes bug #729400. Invalid values for offset and limit params in http requests now return a 400 response with a useful message in the body. Also added and updated tests
* Fixes uses of process\_input
* merged trunk r771
* Fixed pep8 issues
* remerge trunk
* merge lp:nova and resolve conflicts
* merge trunk
* Merged with trunk Updated exception handling according to spawn refactoring
* execvp: unit tests pass
* merged to trunk rev 769
* execvp: almost passes tests
* Refactoring nova-api to be a service, so that we can reuse it in unit tests
* merge trunk
* Fixes lp730960 - mangled instance creation in virt drivers due to improper merge conflict resolution
* Use disk\_format and container\_format in place of image type
* Merging trunk
* Fix the bug where fakerabbit is doing a sort of prefix matching on the AMQP routing key
* merge trunk
* merged trunk
* Remerged trunk. fixed conflict
* Added ability to remove networks on nova-manage command
* This fix is an updated version of Todd's lp720157. Adds SignatureVersion checking for Amazon EC2 API requests, and resolves bug #720157
* execvp
* Merged trunk
* deleted network\_is\_associated from nova.db api
* added network\_get\_by\_cidr method to nova.db api
* Log failed command execution if there are more retry attempts left
* Implementation for XenServer migrations. There are several places for optimization but I based the current implementation on the chance scheduler just to be safe. Beyond that, a few features are missing, such as ensuring the IP address is transferred along with the migrated instance. This will be added in a subsequent patch. Finally, everything is implemented through the Openstack API resize hooks, but actual resizing of the instance RAM and hard drive space is not yet implemented
* Merged with current trunk
* Resolving excess conflicts due to criss-cross in branch history
* Rebased to nova revision 761
* \* Updated readme file with installation of suds-0.4 through easy\_install. \* Removed pass functions \* Fixed pep8 errors \* Few bug fixes and other commits
* merged trunk
* merge trunk
* remove ensure\_b64\_encoding
* Merged to trunk rev 759
* Merged trunk rev 758
* merge lp:nova
* Merged with Trunk
* This fix changes a tag contained in the DescribeKeyPairs response from <keypairsSet> to <keySet> so that Amazon EC2 access libraries which does more strict syntax checking can work with Nova
* some comments are modified
* Merged to trunk rev 757. Main changes are below. 1. Rename db table ComputeService -> ComputeNode 2. nova-manage option instance\_type is reserved and we cannot use option instance, so change instance -> vm
* Remerged trunk, fixed a few conflicts
* Add in multi-tenant support in openstack api
* merged to trunk rev757
* Merged to rev 757
* merges dynamic instance types blueprint (http://wiki.openstack.org/ConfigureInstanceTypesDynamically) and bundles blueprint (https://blueprints.launchpad.net/nova/+spec/flavors)
* merged trunk
* Very simple change checking for < 0 values in "limit" and "offset" GET parameters. If either are negative, raise a HTTPBadRequest exception. Relevant tests included
* Fixes Bug #715424: nova-manage : create network crashes when subnet range provided is not enough , if the network range cannot fit the parameters passed, a ValueError is raised
* changed \_context
* Provide the ability to rescue and unrescue a XenServer instance
* merged trunk
* Changed ra\_server to gateway\_v6 and removed addressv6 column from fixed\_ips db table
* merging trunk
* Merged trunk
* Fixed pep8 issues, applied jaypipes suggestion
* Rebased to nova revision 752
* Use functools.wraps to make sure wrapped method's metadata (docstring and name) doesn't get mangled
* merge from trunk
* Merged trunk
* merged to trunk rev 752
* Rebased at lp:nova 759
* 1. merged trunk rev749 2. rpc.call returns '/' as '\/', so nova.compute.manager.mktmpfile, nova.compute.manager.confirm.tmpfile, nova.scheduler.driver.Scheduler.mounted\_on\_same\_shared\_storage are modified followed by this changes. 3. nova.tests.test\_virt.py is modified so that other teams modification is easily detected since other team is using nova.db.sqlalchemy.models.ComputeService
* This branch implements the openstack-api-hostid blueprint: "Openstack API support for hostId"
* replaced ugly INSTANCE\_TYPE constant with (slightly less ugly) stubs
* Add a lock\_path flag for lock files
* refactored nova-manage list (-all, <name>) and fixed docs
* merge trunk
* Adds VHD build support for XenServer driver
* Merging trunk to my branch. Fixed a conflict in servers.py
* Merging trunk
* 1) merge trunk 2) removed preconfigure\_xenstore 3) added jkey for broadcast address in inject\_network\_info 4) added 2 flags: 	4.1) xenapi\_inject\_image (default True) 	This flag allows for turning off data injection by mounting the image in the VDI 	(agreed with Trey Morris) 	4.2) xenapi\_agent\_path (default /usr/bin/xe-update-networking) 	This flag specifies the path where the agent should be located. It makes sense only 	if the above flag is True. If the agent is found, data injection is not performed
* merge trunk
* Add utils.synchronized decorator to allow for synchronising method entrance across multiple workers on the same host
* execute: shell=True removed
* Rebased to Nova revision 749
* fixed FIXME
* merge with zones2 fixes and trunk
* trunk merge
* trunk merge, pip-requires and novatools to novaclient changes
* Fixes FlatDHCP by making it inherit from NetworkManager and moving some methods around
* merged trunk
* Add tests for 718999, fix a little brittle code introduced by the committed fix
* Copy over to current trunk my tests, the 401/500 fix, and a couple of fixes to the committed fix which was actually brittle around the edges..
* I'm working on consolidating install instructions specifically (they're the most asked-about right now) and pointing to the docs.openstack.org site for admin docs
* Merged trunk
* Merging trunk, conflicts fixed
* Rebased at lp:nova 740
* merged with trunk
* Cleanup db method names for dealing with auth\_tokens to follow standard naming pattern
* Pass id of token to be deleted to the db api, not the actual object
* Rename auth\_token db methods to follow standard
* Merging trunk, small fixes
* IPV6 FlatManager changes
* Make tests start with a clean database for every test
* merge trunk
* merge trunk
* previous trunk merge
* merge clean db
* merged trunk
* merge trunk
* Merged trunk
* Support HP/LeftHand SANs.  We control the SAN by SSHing and issuing CLIQ commands.  Also improved the way iSCSI volumes are mounted: try to store the iSCSI connection info in the volume entity, in preference to doing discovery.  Also CHAP authentication support
* merge trunk
* Merged with trunk
* Adds colors to output of tests and cleans up run\_tests.py
* Reverted bad-fix to sqlalchemy code
* Merged with trunk
* merged upstream
* merged trunk
* Helper function that supports XPath style selectors to traverse an object tree e.g
* Rename minixpath\_select to get\_from\_path
* Fixes the describe\_availability\_zones to use an elevated context when getting services and the db calls to pass parameters correctly so is\_admin check works
* fix describe\_availability\_zones
* Cope when we pass a non-list to xpath\_select - wrap it in a list
* Fixes existing smoketests and splits out sysadmin tests from netadmin tests
* Created mini XPath implementation, to simplify mapping logic
* move the deletion of the db into fixtures
* merged upstream
* Fixes and optimizes filtering for describe\_security\_groups.  Also adds a unit test
* merged trunk
* merged trunk
* use flags for sqlite db names and fix flags in dhcpbridge
* merged trunk
* The proposed branch prevents FlatManager from executing network initialisation tasks contained in linux\_net.init\_host(), which are unnecessary when flat networking is used
* merged trunk
* merge trunk
* Initial support for per-instance metadata, though the OpenStack API.  Key/value pairs can be specified at instance creation time and are returned in the details view.  Support limits based on quota system
* Merged trunk
* Fixes lots of errors in the unit tests
* Merged trunk
* speed up network tests
* merged trunk
* move db creation into fixtures and clean db for each test
* Lots of test fixing
* Don't blindly concatenate queue name if second portiion is None
* merged trunk
* Merged with trunk, including manual conflict resolution in nova/virt/disk.py and nova/virt/xenapi/vmops.py
* Fix DescribeRegion answer by introducing '{ec2,osapi}\_listen' flags instead of overloading {ec2,osapi}\_host. Get rid of paste\_config\_to\_flags, bin/nova-combined. Adds debug FLAGS dump at start of nova-api
* Also remove nova-combined from setup.py
* Merged trunk
* no, really fix lp721297 this time
* Fixed based on reviewer's comment. 1. Change docstrings format 2. Fix comment grammer mistake, etc
* Fixes various issues regarding verbose logging and logging errors on import
* merged trunk
* Some quick test cleanups, first step towards standardizing the way we start services in tests
* merged to trunk rev709. NEEDS to be fixed based on 3rd reviewer's comment
* Fixed based on reviewer's comment. 1. DB schema change    vcpu/memory/hdd info were stored into Service table.    but reviewer pointed out to me creating new table is better    since Service table has too much columns
* update based on prereq branch
* fixed newline and moved import fake\_flags into run\_tests where it makes more sense
* Merged with head
* remove keyword argument, per review
* add a start\_service method to our test baseclass
* Merged with trunk
* switch to explicit call to logging.setup()
* merged trunk
* Adds translation catalogs and distutils.extra glue code that automates the process of compiling message catalogs into .mo files
* Removing duplicate installation docs and adding flag file information, plus pointing to docs.openstack.org for Admin-audience docs
* PEP8 errors and remove check in authors file for nova-core, since nova-core owns the translation export branch
* Merged trunk
* PEP-8 fixes
* merged with nova trunk revision #706
* get rid of initialized flag
* move the fake initialized into fake flags
* fixes for various logging errors and issues
* Pep8 cleanup
* Introduce IptablesManager in linux\_net. Port every use of iptables in linux\_net to it
* Merging trunk to my branch. Fixed conflicts in Authors file and .mailmap
* Merging trunk
* added functionality to list only fixed ip addresses of one node and added exception handling to list method
* fixed based on reviewer's comment. 1. erase wrapper function(remove/exists/mktempfile) from nova.utils. 2. nova-manage service describeresource(->describe\_resource) 3. nova-manage service updateresource(->update\_resource) 4. erase "my mistake print" statement
* merged trunk
* Correctly pass the associate paramater for project\_get\_network through the IMPL layer in the db api
* Merged with trunk
* Initial support for per-instance metadata, though the OpenStack API. Key/value pairs can be specified at instance creation time and are returned in the details view. Support limits based on quota system
* Added support for feature parity with the current Rackspace Cloud Servers practice of "injecting" files into newly-created instances for configuration, etc. However, this is in no way restricted to only writing files to the guest when it is first created
* Correctly pass the associate paramater to project\_get\_network
* Uncommitted changes using the wrong author, and re-committing under the correct author
* Added http://mynova/v1.0/zones/ api options for add/remove/update/delete zones. child\_zones table added to database and migration. Changed novarc vars from CLOUD\_SERVERS\_\* to NOVA\_\* to work with novatools. See python-novatools on github for help testing this
* merge with zone phase 1
* merged lp:~jk0/nova/dynamicinstancetypes
* changed from 003-004 migration
* Merged trunk
* Hi guys
* Rebased at lp:nova 688
* Update the Openstack API so that it returns 'addresses'
* I have a bug fix, additional tests for the \`limiter\` method, and additional commenting for a couple classes in the OpenStack API. Basically I've just tried to jump in somewhere to get my feet wet. Constructive criticism welcome
* added labels to networks for use in multi-nic added writing network data to xenstore param-list added call to agent to reset network added reset\_network call to openstack api
* Add a command to nova-manage to list fixed ip's
* comments + Englilish, changed copyright in migration, removed network\_get\_all from db.api (vestigial)
* example:
* Merged trunk
* added new functionality to list all defined fixed ips
* Merged trunk and fixed conflict with other Brian in Authors
* Rebased at lp:nova 687
* added i18n of 'No networks defined'
* fixed
* Merging trunk
* Better exceptions
* -from migrate.versioning import exceptions as versioning\_exceptions + +try: +    from migrate.versioning import exceptions as versioning\_exceptions +except ImportError: +    try: +        # python-migration changed location of exceptions after 1.6.3 +        # See LP Bug #717467 +        from migrate import exceptions as versioning\_exceptions +    except ImportError: +        sys.exit(\_("python-migrate is not installed. Exiting."))
* Merged to trunk
* Use RotatingFileHandler instead of FileHandler
* Use a threadpool for handling requests coming in through RPC
* Typos
* Derp
* fixed authors, import sys in migration.py
* Merged trunk
* added functionality to nova-manage to list created networks
* I fail at sessions
* I fail at sessions
* Foo
* Merging trunk part 1
* merge with trunk
* merging trunk back in; updating Authors conflict
* Merged lp:nova
* Fixes tarball contents by adding missing scripts and files to setup.py / MANIFEST.in
* The proposed fix puts a VM which fails to spawn in a (new) 'FAILED' power state. It does not perform a clean-up. This because the user needs to know what has happened to the VM he/she was trying to run. Normally, API users do not have access to log files. In this case, the only way for the user to know what happened to the instance is to query its state (e.g.: doing euca-describe-instances). If we perform a complete clean-up, no information about the instance which failed to spawn will be left
* Use eventlet.green.subprocess instead of standard subprocess
* Adds Distutils.Extra support, removes Babel support, which is half-baked at best
* Adding missing scripts and files to setup.py / MANIFEST.in
* fixed nova-combined debug hack and renamed ChildZone to Zone
* fixed merge conflict
* better filtering
* Added try clause to handle changed location of exceptions after 1.6.3 in python-migrate LP Bug #717467
* Use eventlet.green.subprocess instead of standard subprocess
* merged recent version. no conflict, no big/important change to this branch
* merge jk0 branch (with trunk merge) which added additional columns for instance\_types (which are openstack api specific)
* corrected model for table lookup
* Derp
* merging with trunk
* Merged trunk
* Modified S3ImageService to return the format defined in BaseService to allow EC2 API's DescribeImages to work against Glance
* Merged trunk
* More typos
* More typos
* More typos
* More typos
* fixed exceptions import from python migrate
* This fixes a lazy-load issue in describe-instances, which causes a crash.  The solution is to specifically load the network table when retrieving an instance
* added instance\_type\_purge() to actually remove records from db
* updated tests and added more error checking
* Merged trunk
* joinedload network so describe\_instances continues to work
* First, not all
* Merged to trunk and fixed merge conflict in Authors
* fixed destroy calls
* Forgot the metadata includes
* added get IPs by instance
* forgot to add network\_get\_all\_by\_instance to db.api
* template adjusted to NOVA\_TOOLS, zone db & os api layers added
* trunk merge
* 1. Merged to rev654(?) 2. Fixed bug continuous request.    if user continuouslly send live-migration request to same host,    concurrent request to iptables occurs, and iptables complains.    This version add retry for this issue
* Pass timestamps to the db layer in fixed\_ip\_disassociate\_all\_by\_timeout rather than converting to strings ahead of time, otherwise comparison between timestamps would often fail
* Added support for 'SAN' style volumes.  A SAN's big difference is that the iSCSI target won't normally run on the same host as the volume service
* added support to pull list of ALL instance types even those that are marked deleted
* Fix PEP8 violations
* Don't convert datetime objects to a string using .isoformat(). Leave it to sqlalchmeny (or pysqlite or whatever it is that does the magic) to work it out
* added testing for instance\_types.py and refactored nova-manage to use instance\_types.py instead of going directly to db
* additional error checking for nova-manage instance\_type
* Automates the setup for FlatDHCP regardless of whether the interface has an ip address
* Changes and bug fixes
* merge with lp:nova
* merge source and remove ifconfig
* Catching all socket errors in \_get\_my\_ip, since any socket error is likely enough to cause a failure in detection
* added INSTANCE\_TYPES to test for compatibility with current tests
* require user context for most flavor/instance\_type read calls
* added network\_get\_all\_by\_instance(), call to reset\_network in vmops
* simplified instance\_types db calls to return entire row - we may need these extra columns for some features and there seems to be little downside in including them. still need to fix testing calls
* updated api.create to use instance\_type table
* instance\_types should return in predicatable order (by name currently)
* corrected db.instance\_types to return expect dict instead of lists. updated openstack flavors to expect dicts instead of lists. added deleted column to returned dict
* converted openstack flavors over to use instance\_types table. a few pep changes
* added FIXME(kpepple) comments for all constant usage of INSTANCE\_TYPES. updated api/ec2/admin.py to use the new instance\_types db table
* Added a bunch of stubbed out functionality
* Moved ssh\_execute to utils; moved comments to docstring
* Fixes for Vish & Devin's feedback
* Fixes https://bugs.launchpad.net/nova/+bug/681417
* merging
* Fixed PEP8 test problems, complaining about too many blank lines at line 51
* flagged all INSTANCE\_TYPES usage with FIXME comment. Added basic usage to nova-manage (needs formatting). created api methods
* Fixes bug #709057
* merge trunk
* Merged trunk
* Match the initial db version to the actual Austin release db schema
* 1. Discard nova-manage host list Reason: nova-manage service list can be replacement. Changes: nova-manage
* fix austin->bexar db migration
* incorporate feedback from devin - use sql consistently in instance\_destroy also, set deleted\_at
* merge trunk
* Makes having sphinx to build docs a conditional thing - if you have it, you can get docs. If you don't, you can't
* Fixed a pep8 spacing issue
* fixes for bug #709057
* Working on api / manager / db support for zones
* Adds security group output to describe\_instances
* Use firewall\_driver flag as expected with NWFilterFirewall.  This way, either you use NWFilterFirewall directly, or you use IptablesFirewall, which creates its own instance of NWFilterFirewall for the setup\_basic\_filtering command.  This removes the requirement that LibvirtConnection would always need to know about NWFirewallFilter, and cleans up the area where the flag is used for loading the firewall class
* Added a test that checks for localized strings in the source code that contain position-based string formatting placeholders. If found, an exception message is generated that summarizes the problem, as well as the location of the problematic code. This will prevent future trunk commits from adding localized strings that cannot be properly translated
* Makes sure all instance and volume commands that raise not found are changed to show the ec2\_id instead of the internal id
* Fixed formatting issues in current codebase
* Fixes NotFound messages in api to show the ec2\_id
* adding testcode
* Fix Bug #703037. ra\_server is None
* merge trunk
* Changed method signature of create\_network
* merged r621
* Merged with http://bazaar.launchpad.net/~vishvananda/nova/lp703037
* Merged trunk
* Simple little changes related to openstack api to work better with glance
* This branch updates docs to reflect the db sync addition.  It additionally adds some useful errors to nova-manage to help people that are using old guides.  It wraps sqlalchemy errors in generic DBError. Finally, it updates nova.sh to use current settings
* Add a host argument to virt drivers's init\_host method. It will be set to the name of host it's running on
* merged trunk
* Wraps the NotFound exception at the api layer to print the proper instance id.  Does the same for volume.  Note that euca-describe-volumes doesn't pass in volume ids properly, so you will get no error messages on euca-describe-volumes with improper ids.  We may also need to wrap a few other calls as well
* Fixes issue with SNATTING chain not getting created or added to POSTROUTING when nova-network starts
* Fix for bug #702237
* another trunk merge
* This patch:
* Trunk merged
* Add a host argument to virt driver's init\_host method. It will be set to the name of host it's running on
* Adds conditional around sphinx inclusion
* merge with trunk
* Fixes project and role checking when a user's naming attribute is not uid
* Merged with r606
* Fixed merge conflict
* Localized strings that employ formatting should not use positional arguments, as they prevent the translator from re-ordering the translated text; instead, they should use mappings (i.e., dicts). This change replaces all localized formatted strings that use more than one formatting placeholder with a mapping version
* merged ntt branch
* merged branch to name net\_manager.create\_networks args
* Fix describe\_regions by changing renamed flags.  Also added a test to catch future errors
* Merged trunk
* merged trunk
* merged trunk fixed whitespace in rst
* wrap sqlalchemy exceptions in a generic error
* Wrap instance at api layer to print the proper error.  Use same logic for volumes
* Resolved trunk merge conflicts
* Updated docs for db sync requirements; merged with Vish's similar doc updates
* Change default log formats so that:  \* they include a timestamp (necessary to correlate logs)  \* no longer display version on every line (shorter lines)  \* use [-] instead of [N/A] (shorter lines, less scary-looking)  \* show level before logger name (better human-readability)
* Merged with rev597
* syntax error
* should be writing some kindof network info to the xenstore now, hopefully
* Doc changes for db sync
* Fixes issue with describe\_instances requiring an admin context
* Passing in an elevated context instead of making the call non-elevated
* Added changes to make errors and recovery for volumes more graceful:
* Changing service\_get\_all\_by\_host to not require admin context as it is used for describing instances, which any user in a project can do
* Eagerly load fixed\_ip.network in instance\_get\_by\_id
* merge trunk
* Implement provider-level firewall rules in nwfilter
* Merged trunk
* Refactor run\_tests.sh to allow us to run an extra command after the tests
* Merged trunk
* Eagerly load instance's fixed\_ip.network attribute
* merged trunk changes
* minor code cleanup
* Refactor run\_tests.sh to allow us to run an extra command after the tests
* merged trunk
* merge vish's changes (which merged trunk and fixed a pep8 problem)
* merged trunkand fixed conflicts and pep error
* get\_my\_linklocal raises exception
* Completed first pass at converting all localized strings with multiple format substitutions
* Allows moving from the Austin-style db to the Bexar-style
* move db sync into nosetests package-level fixtures so that the existing nosetests attempt in hudson will pass
* merge from upstream and fix small issues
* merged  to trunk rev572
* Merged trunk
* The live\_migration branch ( https://code.launchpad.net/~nttdata/nova/live-migration/+merge/44940 ) was not ready to be merged
* merge from upstream to fix conflict
* Trunk merge
* Merged trunk
* Implement support for streaming images from Glance when using the XenAPI virtualization backend, as per the bexar-xenapi-support-for-glance blueprint
* Works around the app-armor problem of requiring disks with backing files to be named appropriately by changing the name of our extra disks
* merged trunk
* Add refresh\_security\_group\_\* methods to nova/virt/fake.py, as FakeConnection is the reference for documentation and method signatures that should be implemented by virt connection drivers
* revert live\_migration branch
* Merged trunk
* Risk of Regression: This patch don’t modify existing functionlities, but I have added some.     1. nova.db.service.sqlalchemy.model.Serivce (adding a column to database)     2. nova.service ( nova-compute needes to insert information defined by 1 above)
* Add rules to database, cast refresh message and trickle down to firewall driver
* Fixed error message in get\_my\_linklocal
* Merged trunk
* Merged with trunk revno 572
* Change where paste.deploy factories live and how they are called.  They are now in the nova.wsgi.Application/Middleware classes, and call the \_\_init\_\_ method of their class with kwargs of the local configuration of the paste file
* Further decouple api routing decisions and move into paste.deploy configuration.  This makes paste back the nova-api binary
* Merged trunk
* The Openstack API requires image metadata to be returned immediately after an image-create call
* merge trunk
* Merging trunk
* Merged trunk
* merged trunk rev569
* merged to rev 561 and fixed based on reviewer's comment
* Adds a developer interface with direct access to the internal inter-service APIs and a command-line tool based on reflection to interact with them
* merge from upstream
* pep8 fixes... largely to things from trunk?
* merge from upstream
* This branch fixes two outstanding bugs in compute.  It also fixes a bad method signature in network and removes an unused method in cloud
* Re-removes TrialTestCase.  It was accidentally added in by some merges and causing issues with running tests individually
* merged trial fix again
* undo accidental removal of fake\_flags
* merged lp:~vishvananda/nova/lp703012
* remove TrialTestCase again and fix merge issues
* Merged trunk
* Merged with trunk revno 565
* Implements the blueprint for enabling the setting of the root/admin password on an instance
* OpenStack Compute (Nova) IPv4/IPv6 dual stack support http://wiki.openstack.org/BexarIpv6supportReadme
* Merged to rev.563
* This change introduces support for Sheepdog (distributed block storage system) which is proposed in https://blueprints.launchpad.net/nova/+spec/sheepdog-support
* merge from upstream:
* Merged with r562
* This modifies libvirt to use CoW images instead of raw images.  This is much more efficient and allows us to use the snapshotting capabilities available for qcow2 images.  It also changes local storage to be a separate drive instead of a separate partition
* remove ">>>MERGE" iin nova/db/sqlalchemy/api.py
* merged trunk
* Merged with r561
* Merging Trunk
* Fixed based on the comments from code review. Merged to trunk rev 561
* Add a new method to firewall drivers to tell them to stop filtering a particular instance. Call it when an instance has been destroyed
* merged to trunk rev 561
* Merged trunk
* merge trunk rev560
* Fixes related to how EC2 ids are displayed and dealt with
* Get reviewed and fixed based on comments. Merged latest version
* Merged trunk
* Added unit tests for the Diffie-Hellman class. Merged recent trunk changes
* merged trunk
* Fixed missing \_(). Fixed to follow logging to LOG changes. Fixed merge miss (get\_fixed\_ip was moved away). Update some missing comments
* merge from upstream and fix leaks in console tests
* add support for database migration
* merged with r555
* standardize on hex for ids, allow configurable instance names
* Fix test failures on Python 2.7 by eagerly loading the fixed\_ip attribute on instances. No clue why it doesn't affect python 2.6, though
* Do joinedload\_all('fixed\_ip.floating\_ips') instead of joinedload('fixed\_ip')
* Merging trunk
* Merging trunk, small fixes
* cleaned up prior merge mess
* Merged with r551
* Support IPv6 firewall with IptablesFirewallDriver
* Fixed syntax errors
* Merged with trunk
* Added support of availability zones for compute. models.Service got additional field availability\_zone and was created ZoneScheduler that make decisions based on this field. Also replaced fake 'nova' zone in EC2 cloud api
* Eagerly load fixed\_ip property of instances
* Had to abandon the other branch (~annegentle/nova/newscript) because the diffs weren't working right for me. This is a fresh branch that should be merged correctly with trunk. Thanks for your patience. :)
* Merged with 549
* Change command to get link local address Remove superfluous code
* This branch adds web based serial console access.  Here is an overview of how it works (for libvirt):
* Merged with r548
* Fixed for pep8 Remove temporary debugging
* changed exception class
* Changing DN creation to do searches for entries
* merge trunk, fix conflict
* resolve pylint warnings
* Read Full Spec for implementation details and notes on how to boot an instance using OS API. http://etherpad.openstack.org/B2RK0q1CYj
* Fixed a number of issues with the iptables firewall backend:  \* Port specifications for firewalls come back from the data store as integers, but were compared as strings.  \* --icmp-type was misspelled as --icmp\_type (underscore vs dash)  \* There weren't any unit tests for these issues
* merged trunk changes
* Merging trunk
* Trunk merge and conflcts resolved
* Implementation of xs-console blueprint (adds support for console proxies like xvp)
* Add support for EBS volumes to the live migration feature. Currently, only AoE is supported
* Changed shared\_ip\_group detail routing
* Fixes the metadata forwarding to work by default
* Adds support to nova-manage to modify projects
* merged trunk changes
* merge trunk
* Bugfix
* Adds the requisite infrastructure for automating translation templates import/export to Launchpad
* Added babel/gettext build support
* re-merged in trunk to correct conflict
* Fix describe\_availablity\_zones versobse
* merged changes from trunk
* Add a new firewall backend for libvirt, based on iptables
* Moved get\_my\_ip into flags because that is the only thing it is being used for and use it to set a new flag called my\_ip
* fixes Document make configuration by updating nova version mechanism to conform to rev530 update
* added myself to authors and fixed typo to follow standard
* typo correction
* fixed doc make process for new nova version (rev530) machanism
* merged from upstream and made applicable changes
* Adds a mechanism to programmatically determine the version of Nova. The designated version is defined in nova/version.py. When running python setup.py from a bzr checkout, information about the bzr branch is put into nova/vcsversion.py which is conditionally imported in nova/version.py
* s/canonical\_version/canonical\_version\_string/g
* merged trunk changes
* Fixes issue in trunk with downloading s3 images for instance creation
* Wrap logs so we can: \* use a "context" kwarg to track requests all the way through the system \* use a custom formatter so we get the data we want (configurable with flags) \* allow additional formatting for debug statements for easer debugging \* add an AUDIT level, useful for noticing changes to system components \* use named logs instead of the general logger where it makes sesnse
* Bug #699912: When failing to connect to a data store, Nova doesn't log which data store it tried to connect to
* Bug #699912: When failing to connect to a data store, Nova doesn't log which data store it tried to connect to
* Resolved merge differences
* Additional cleanup prior to pushing
* Merged with trunk
* Less code generation
* merged changes from trunk
* Remove redundant import of nova.context. Use db instance attribute rather than module directly
* Merging trunk
* Removing some FIXMEs
* Reserving image before uploading
* merge
* another merge with trunk to remedy instance\_id issues
* merge
* Include date in API action query
* Review feedback
* This branch implements lock functionality. The lock is stored in the compute worker database. Decorators have been added to the openstack API actions which alter instances in any way
* Review feedback
* Review feedback
* Review feedback
* various cleanup and fixes
* merged trunk
* Include date in action query
* Let documentation get version from nova/version.py as well
* Track version info, and make available for logging
* Merged trunk
* pep8 fix
* merged trunk changes
* commit before merging trunk
* Introduces basic support for spawning, rebooting and destroying vms when using Microsoft Hyper-V as the hypervisor. Images need to be in VHD format. Note that although Hyper-V doesn't accept kernel and ramdisk separate from the image, the nova objectstore api still expects an image to have an associated aki and ari. You can use dummy aki and ari images -- the hyper-v driver won't use them or try to download them. Requires Python's WMI module
* merged trunk changes
* fix some glitches due to someone removing instanc.internal\_id (not that I mind) remove accidental change to nova-combined script
* Fixed trunk merge conflicts as spotted by dubs
* Fix a bunch of pep8 stuff
* This addition to the docs clarifies that it is a requirement for contributors to be listed in the Authors file before their commits can be merged to trunk
* merge trunk
* another merge from trunk to the latest rev
* pulled changes from trunk added console api to openstack api
* This branch contains the internal API cleanup branches I had previously proposed, but combined together and with all the UUID key replacement ripped out. This allows multiple REST interfaces (or other tools) to use the internal API directly, rather than having the logic tied up in the ec2 cloud.py file
* merged trunk changes
* Created a XenAPI plugin that will allow nova code to read/write/delete from xenstore records for a given instance. Added the basic methods for working with xenstore data to the vmops script, as well as plugin support to xenapi\_conn.py
* add in xs-console worker and tests
* missing \_()
* Added xenstore plugin changed
* merged changes from trunk
* Change all 2010 Copyright statements to 2010-2011 in doc source directory only
* merged from trunk
* Removed leftover UUID reference
* Merged trunk
* Merged trunk changes
* Some Bug Fix
* Merged and fiexed conflicts with r515
* Apply logging changes as a giant patch to work around the cloudpipe delete + add issue in the original patch
* Fixes LP688545
* Fixing merge conflicts with new branch
* merged in trunk changes
* Fixes LP688545
* Uses paste.deploy to make application running configurable.  This includes the ability to swap out middlewares, define new endpoints, and generally move away from having code to build wsgi routers and middleware chains into a configurable, extensible method for running wsgi servers
* Add burnin support.  Services are now by default disabled, but can have instances and volumes run on them using availability\_zone = nova:HOSTNAME.  This lets the hardware be put through its paces without being put in the generally available pool of hardware.  There is a 'service' subcommand for nova-manage where you can enable, disable, and list statuses of services
* pep8 fixes
* Several documentation corrections and formatting fixes
* merge in trunk
* merged latest trunk
* merge trunk
* merge trunk
* merged in trunk and xenstore-plugin changes
* Merged trunk
* Merged trunk
* Merged trunk
* Merged trunk
* 最新バージョンにマージ。変更点は以下の通り。 Authorsに自分の所属を追加 utils.pyのgenerate\_uidがおかしいのでインスタンスIDがオーバーフローしていたが、 その処理を一時撤廃。後で試験しなおしとすることにした。
* Merged trunk
* Make InstanceActions and live diagnostics available through the Admin API
* merge trunk
* merge trunk
* Cleans up the output of run\_tests.sh to look closer to Trial
* Merged trunk
* This patch is beginning of XenServer snapshots in nova. It adds:
* merge recent revision(version of 2010/12/28) Change:    1. Use greenthread instead of defer at nova.virt.libvirt\_conn.live\_migration.    2. Move nova.scheduler.manager.live\_migration to nova.scheduler.driver    3. Move nova.scheduler.manager.has\_enough\_resource to nova.scheduler.driver    4. Any check routine in nova-manage.instance.live\_migration is moved to       nova.scheduler.driver.schedule\_live\_migration
* Merging trunk
* removed db.set\_lock, using update\_instance instead
* removed some code i didn't end up using
* fixed merge conflict with trunk
* PEP8 cleanup
* Merged trunk
* Added implementation availability\_zones to EC2 API
* merge
* Changes and error fixes to help ensure basic parity with the Rackspace API. Some features are still missing, such as shared ip groups, and will be added in a later patch set
* initial lock functionality commit
* Merged with trunk
* merge trunk
* Defualt services to enabled
* Add flag --enable\_new\_services to toggle default state of service when created
* merge from trunk
* This commit introduces scripts to apply XenServer host networking protections
* merge from upstream and fix conflicts
* Make action log available through Admin API
* Merging trunk
* Merged trunk
* Added InstanceAction DB functions
* merge trunk
* I've added suspend along with a few changes to power state as well. I can't imagine suspend will be controversial but I've added a new power state for "suspended" to nova.compute.power\_states which libvirt doesn't use and updated the xenapi power mapping to use it for suspended state. I also updated the mappings in nova.api.openstack.servers to map PAUSED to "error" and SUSPENDED to "suspended". Thoughts there are that we don't currently (openstack API v1.0) use pause, so if somehow an instance were to be paused an error occurred somewhere, or someone did something in error. Either way asking the xenserver host for the status would show "paused". Support for more power states needs to be added to the next version of the openstack API
* fix bug #lp694311
* Added stack command-line tool
* Cleans up nova.api.openstack.images and fix it to work with cloudservers api. Previously "cloudservers image-list" wouldn't work, now it will. There are mappings in place to handle s3 or glance/local image service. In the future when the local image service is working, we can probably drop the s3 mappings
* Converted Volume model and operation to use UUIDs
* Merging trunk
* Merged trunk
* Merging trunk, fixing failed tests
* Merged trunk
* merge trunk
* Fixed after Jay's review. Integrated code from Soren (we now use the same 'magic number' for images without kernel & ramdisk
* logs inner exception in nova/utils.py->import\_class
* Fix Bug #693963
* merge trunk
* Merge
* Support IPv6
*     Make nova work even when user has LANG or LC\_ALL configured
* merged trunk, resolved trivial conflict
* fixed merge conflict
* Merged again from trunk
* fixed a few docstrings, added \_() for gettext
* Moves implementation specific Openstack API code from the middleware to the drivers. Also cleans up a few areas and ensures all the API tests are passing again
* Merged trunk
* Trying to remove twisted dependencies, this gets everything working under nosetests
* Merged Monty's branch
* Merged trunk and resolved conflicts
* merged trunk
* merged trunk
* Simplifies and improves ldap schema
* xenapi iscsi support + unittests
* Merged trunk
* Added reference in setup.py so that python setup.py test works now
* merge lp:nova
* merge trunk
*  merge trunk, fixed unittests, added i18n strings, cleanups etc etc
* first merge after i18n
* added tests to ensure the easy api works as a backend for Compute API
* merge from trunk
* Fixes reboot (and rescue) to work even if libvirt doesn't know about the instance and the network doesn't exist
* merged trunk
* Fixes reboot (and rescue) to work even if libvirt doesn't know about the instance and the network doesn't exist
* Adds a flag to use the X-Forwarded-For header to find the ip of the remote server.  This is needed when you have multiple api servers with a load balancing proxy in front.  It is a flag that defaults to False because if you don't have a sanitizing proxy in front, users could masquerade as other ips by passing in the header manually
* Merged trunk
* merged trunk
* Moves the ip allocation requests to the from the api host into calls to the network host made from the compute host
* merged trunk and fixed conflicts
* merged trunk
* Optimize creation of nwfilter rules so they aren't constantly being recreated
* fixed more conflicts
* merged trunk again
* merge trunk and upgrade to cheetah templating
* Optimize nwfilter creation and project filter
* Merging trunk
* fixed conflicts
* WSGI middleware for lockout after failed authentications of ec2 access key
* Puts the creation of nova iptables chains into the source code and cleans up rule creation.  This makes nova play more nicely with other iptables rules that may be created on the host
* Merging trunk
* merge trunk
* Fixes per-project vpns (cloudpipe) and adds manage commands and support for certificate revocation
* merge trunk
* merged i8n and fixed conflicts
* after trunk merge
* Log all XenAPI actions to InstanceActions
* Merged trunk
* merging trunk
* merging trunk
* All merged with trunk and let's see if a new merge prop (with no pre-req) works.
* merging in trunk
* Merged trunk
* PEP8 cleanup
* Log all XenAPI actions
* update db/api.py as well
* don't allocate networks when getting vpn info
* Added InstanceDiagnostics and InstanceActions DB models
* Merged trunk
* merge trunk
* 1) Merged from trunk 2) 'type' parameter in VMHelper.fetch\_image converted in enum 3) Fixed pep8 errors 4) Passed unit tests
* add a few extra joined objects to get instance
* Tests pass after cleaning up allocation process
* Merging trunk
* Add raw disk image support
* Adds support for Pause and Unpause of xenserver instances
* Integrated changes from Soren (raw-disk-images). Updated authors file. All tests passed
* eventlet merge updates
* Some tweaks
* first revision after eventlet merge. Currently xenapi-unittests are broken, but everything else seems to be running okay
* Integrated eventlet\_merge patch
* First pass at converting run\_tests.py to nosetests. The network and objctstore tests don't yet work. Also, we need to manually remove the sqlite file between runs
* merged in project-vpns to get flag changes
* move some flags around
* merged trunk
* merged trunk, fixed conflicts and tests
* This branch removes most of the dependencies on twisted and moves towards the plan described by https://blueprints.launchpad.net/nova/+spec/unified-service-architecture
* pep8 fixes
* Restore code which was changed for testing reasons to the original state. Kudos to Armando for spotting this
* Merged changes from trunk into the branch
* Hostテーブルのカラム名を修正 FlatManager, FlatDHCPManagerに対応
* merged with trunk. fixed compute.pause test
* Make sure we properly close the bzr WorkingTree in our Authors up-to-datedness unit test
* clean up tests and add overriden time method to utils
* merged from upstream
* basic conversion of xs-pause to eventlet done
* brougth clean-up from unittests branch and tests
* Lots of PEP-8 work
* added volume tests and extended fake to support them
* merged upstream
* Merged from trunk and fixed merge issues. Also fixed pep8 issues
* updates per review
* Initial work on i18n.  This adds the installation of the nova domain in gettext to all the "endpoints", which are all the bin/\* files and run\_tests.py
* pep8
* merge trunk
* fixup after merge with trunk
* merge with trey tests
* Added LiveCD info as well as some changes to reflect consolidation of .conf files
* Move security group refresh logic into ComputeAPI
* First round of i18n-ifying strings in Nova
* Initial i18n commit for endpoints. All endpoints must install gettext, which injects the \_ function into the builtins
* Fixed spelling errors in index.rst
* merge-a-tat-tat upstream to this branch
* \* pylint fixes \* code clean-up \* first cut for xenapi unit tests
* merged changes from sandy's branch
* formatting and naming cleanup
* get service unittests runnning again
* Converted the instance table to use a uuid instead of a auto\_increment ID and a random internal\_id. I had to use a String(32) column with hex and not a String(16) with bytes because SQLAlchemy doesn't like non-unicode strings going in for String types. We could try another type, but I didn't want a primary\_key on blob types
* merge with trey
* Make XenServer VM diagnostics available through nova.virt.xenapi
* Merged trunk
* merging sandy's branch
* raw instances can now be launched in xenapi (only as hvm at the moment)
* merge with trunk to pull in admin-api branch
* Flag to define which operations are exposed in the OpenStack API, disabling all others
* Fixed Authors conflict and re-merged with trunk
* intermediate commit to checkpoint progress
* some pylint caught changes to compute
* merge conflict
* merged upstream changes
* Merged trunk
* merged updates to trunk
* merge trunk
* Finished cleaning up the openstack servers API, it no longer touches the database directly. Also cleaned up similar things in ec2 API and refactored a couple methods in nova.compute.api to accommodate this work
* Pushed terminate instance and network manager/topic methods into network.compute.api
* Merged trunk
* Moved the reboot/rescue methods into nova.compute.api
* merged with trunk. All clear!
* コメントを除去 README.live\_migration.txtのレビュー結果を修正
* Added livecd instructions plus fixed references to .conf files
* Added a script to use OpenDJ as an LDAP server instead of OpenLDAP. Also modified nova.sh to add an USE\_OPENDJ option, that will be checked when USE\_LDAP is set
* It looks like Soren fixed the author file, can I hit the commit button?
* merge trunk
* Addresses bug 677475 by changing the DB column for internal\_id in the instances table to be unsigned
* rev439ベースにライブマイグレーションの機能をマージ このバージョンはEBSなし、CPUフラグのチェックなし
* Add iptables based security groups implementation
* merge with lp:~armando-migliaccio/nova/xenapi-refactoring
* merge trunk
* Decreased the maximum value for instance-id generation from uint32 to int32 to avoid truncation when being entered into the instance table.  Reverted fix to make internal\_id column a uint
* Finished cleaning up the openstack servers API, it no longer touches the database directly. Also cleaned up similar things in ec2 API and refactored a couple methods in nova.compute.api to accomodate this work
* Merged reboot-rescue into network-manager
* Merged trunk
* Consolidated the start instance logic in the two API classes into a single method. This also cleans up a number of small discrepencies between the two
* Merged trunk and resolved conflicts
* merge lp:~armando-migliaccio/nova/refactoring
* merge trunk
* Guarantee that the OpenStack API's Server-related responses will always contain a "name" value.  And get rid of a redundant field in models.py
* Oops, internal\_id isn't available until after a save.  This code saves twice; if I moved it into the DB layer we could do it in one save.  However, we're moving to one sqlite db per compute worker, so I'd rather have two saves in order to keep the logic in the right layer
* Add include\_package\_data=True to setup.py
* Broke parts of compute manager out into compute.api to separate what gets run on the API side vs the worker side
* Moving the openldap schema out of nova.sh into it's own files, and adding sun (opends/opendj/sun directory server/fedora ds) schema files
* brought latest changes from trunk
* merged Justin Santa Barbara's raw-disk-image back into the latest trunk
* merged trunk
* Add a templating mechanism in the flag parsing
* brought the xenapi refactoring in plus trunk changes
* Add include\_package\_data=True to setup.py
* A few more changes:  \* Fixed up some flags  \* Put in an updated nova.sh  \* Broke out metadata forwarding so it will work in flatdhcp mode  \* Added descriptive docstrings explaining the networking modes in more detail
* small conflict resolution
* Fix typo "nova.util" -> "nova.utils"
* Fix typo "nova.util" -> "nova.utils"
* Added a .mailmap that maps addresses in bzr to people's real, preferred e-mail addresses. (I made a few guesses along the way, feel free to adjust according to what is actually the preferred e-mail)
* merged trunk, added recent nova.sh
* add vpn ping and optimize vpn list
* Address pep8 complaints
* 
* fixed pep8 violations
* added test for invalid handles
* Adds images (only links one in), start for a nova-manage man file, and also documents all nova-manage commands. Can we merge it in even though the man page build isn't working?
* Improved Pylint Score
* Soren updated setup.py so that the man page builds. Will continue working on man pages for nova-compute and nova-network
* Overwrite build\_sphinx, making it run once for each of the html and man builders
* Update version to 2011.1 as that is the version we expect to release next
* Fixes eventlet race condition in cloud tests
* fix greenthread race conditions in trunk and floating ip leakage
* Testing man page build through conf.py
* Improved Pylint Score
* merged with trunk
* Update version to 2011.1 as that is the version we expect to release next
* Adds nova-debug to tools directory, for debugging of instances that lose networking
* Ryan\_Lane's code to handle /etc/network not existing when we try to inject /etc/network/interfaces into an image
* Changed from fine-grained operation control to binary admin on/off setting
* Lots of documentation and docstring updates
* The docs are just going to be wrong for now.  I'll file a bug upstream
* Change how wsgified doc wrapping happens to fix test
* pep8
* merge with trunk
* merge in anne's changes
* merge to remote
* unify env syntax
* create SPHINX\_DEBUG env var.  Setting this will disable aggressive autodoc generation.  Also provide some sample for P syntax
* fix conf file from earlier merge
* anne's changes to the networking documentation
* Updated Networking doc
* Added a .mailmap that maps addresses in bzr to people's real, preferred e-mail addresses. (I made a few guesses along the way, feel free to adjust according to what is actually the preferred e-mail)
* merge in anne's changes
* home page tweaks
* Updated CSS and community.rst file
* modifications and additions based on doc sprint
* incorporate some feedback from todd and anne
* merge in trunk
* working on novadoc structure
* Use the autodoc tools in the setup.py build\_sphinx toolchain
* Fix include paths so setup.py build\_sphinx works again
* back out stacked merge
* Switch to module-per-file for the module index
* Build autodocs for all our libraries
* Per-project vpns, certificates, and revocation
* Fix docstrings for wsigfied methods
* small tweaks before context switch
* use include to grab todd's quickstart
* add in custom todo, and custom css
* Format TODO items for sphinx todo extension
* additions to home page
* Change directory structure for great justice!
* Getting Started Guide
* have "contents" look the same as other headings
* pep8 whitespace and line length fixes
* merged trunk
* prettier theme
* Change socket type in nova.utils.get\_my\_ip() to SOCK\_DGRAM. This way, we don't actually have to set up a connection. Also, change the destination host to an IP (chose one of Google's DNS's at random) rather than a hostname, so we avoid doing a DNS lookup
* Change socket type in nova.utils.get\_my\_ip() to SOCK\_DGRAM. This way, we don't actually have to set up a connection. Also, change the destination host to an IP (chose one of Google's DNS's at random) rather than a hostname, so we avoid doing a DNS lookup
* ISCSI Volume support
* merged
* merge
* merged trunk
* API endpoint documentation
* basics to get proxied ajaxterm working with virsh
* merged trunk, just in case
* Update database docs
* Add support for google analytics to only the hudson-produced docs
* Changes to conf.py
* Update database page a bit
* Pep-257 cleanups
* merge trunkdoc
* Moves db writes into compute manager class. Cleans up sqlalchemy model/api to remove redundant calls for updating what is really a dict
* Fix wiki link
* merged and fixed conflicts
* updates to auth, concepts, and network, fix of docstring
* cleanup rrd doc generation
* New structure for documentation
* Fixes PEP8 violations from the last few merges
* More PEP8 fixes that were introduced in the last couple commits
* Fixes service unit tests after tornado excision
* renamed target\_id to iscsi\_target
* merged gundlach's excision
* Delete BaseTestCase and with it the last reference to tornado
* Removes some cruft from sqlalchemy/models.py like unused imports and the unused str\_id method
* Adds rescue and unrescue commands
* actually remove the conditional
* fix tests by removing missed reference to prefix and unnecessary conditional in generate\_uid
* add nova-debug to setup.py
* Remove the last vestigial bits of tornado code still in use
* Exceptions in the OpenStack API will be converted to Faults as they should be, rather than barfing a stack trace to the user
* Duplicate the two trivial escaping functions remaining from tornado's code and remove the dependency
* ISCSI Volume support
* merge lp:nova
* merged trunk and fixed conflicts/changes
* part way through porting the codebase off of twisted
* Another pep8 cleanup branch for nova/tests, should be merged after lp:~eday/nova/pep8-fixes-other. After this, the pep8 violation count is 0!
* Another pep8 cleanup branch for nova/api, should be merged after lp:~eday/nova/pep8-fixes
* PEP8 cleanup in nova/db. There should be no functional changes here, just style changes to get violations down
* PEP8 and pylint cleanup. There should be no functional changes here, just style changes to get violations down
* Moves db writes into compute manager class. Cleans up sqlalchemy model/api to remove redundant calls for updating what is really a dict
* Cleanup of doc for dependencies (redis optional, remove tornado, etc). Please check for accuracy
* Made updates based on review comments
* Updated documentation
* Update version set in setup.py to 2010.1 in preparation for Austin release
* Also update version in docs
* Update version to 2010.1 in preparation for Austin release
* \* Fills out the Parallax/Glance API calls for update/create/delete and adds unit tests for them. \* Modifies the ImageController and GlanceImageService/LocalImageService calls to use index and detail routes to comply perfectly with the RS/OpenStack API
* This branch converts incoming data to the api into the proper type
* Fix the --help flag for printing help on twistd-based services
* Make Redis completely optional:
* trivial style change
* prevent leakage of FLAGS changes across tests
* This branch modifies the fixes all of the deprecation warnings about empty context.  It does this by adding the following fixes/features   \* promotes api/context.py to context.py because it is used by the whole system   \* adds more information to the context object   \* passes the context through rpc   \* adds a helper method for promoting to admin context (elevate())   \* modifies most checks to use context.project\_id instead of context.project.id to avoid     trips to the database
* Merged with trunk, fixed broken stuff
* Fixes a few concurrency issues with creating volumes and instances. Most importantly it adds retries to a number of the volume shell commands and it adds a unique constraint on export\_devices and a safe create so that there aren't multiple copies of export devices in the database
* merged trunk
* merged concurrency
* merged trunk
* cleaned up most of the issues
* elevate in proper places, fix a couple of typos
* merged trunk
* Fixes bug 660115
* Fix several problems keeping AuthMiddleware from functioning in the OpenStack API
* Xen support
* Adds flat networking + dhcpserver mode
* This patch removes the ugly network\_index that is used by VlanManager and turns network itself into a pool.  It adds support for creating the networks through an api command:     nova-manage network create # creates all of the networks defined by flags or     nova-manage network create 5 # create the first five networks
* merged upstream
* cleanup leftover addresses
* merged trunk
* merged trunk
* merged trunk
* merged trunk
* Revert the conversion to 64-bit ints stored in a PickleType column, because PickleType is incompatible with having a unique constraint
* Revert 64 bit storage and use 32 bit again.  I didn't notice that we verify that randomly created uids don't already exist in the DB, so the chance of collision isn't really an issue until we get to tens of thousands of machines.  Even then we should only expect a few retries before finding a free ID
* This patch adds support for EC2 security groups using libvirt's nwfilter mechanism, which in turn uses iptables and ebtables on the individual compute nodes. This has a number of benefits:  \* Inter-VM network traffic can take the fastest route through the network without our having to worry about getting it through a central firewall.  \* Not relying on a central firewall also removes a potential SPOF.  \* The filtering load is distributed, offering great scalability
* Change internal\_id from a 32 bit int to a 64 bit int
* 32 bit internal\_ids become 64 bit.  Since there is no 64 bit native type in SqlAlchemy, we use PickleType which uses the Binary SqlAlchemy type under the hood
* Catch exception.NotFound when getting project VPN data
* Adds stubs and tests for GlanceImageService and LocalImageService. Adds basic plumbing for ParallaxClient and TellerClient and hooks that into the GlanceImageService
* Cleanup around the rackspace API for the ec2 to internal\_id transition
* A little more clean up
* Replace model.Instance.ec2\_id with an integer internal\_id so that both APIs can represent the ID to external users
* Fix clause comparing id to internal\_id
* merged trunk and fixed tests
* merge from gundlach ec2 conversion
* Fix broken unit tests
* A shiny, new Auth driver backed by SQLAlchemy. Read it and weep. I did
* Revert r312
* Accidentally renamed volume related stuff
* Bug #653534: NameError on session\_get in sqlalchemy.api.service\_update
* Fixes to address the following issues:
* Bug #654025: nova-manage project zip and nova-manage vpn list broken by change in DB semantics when networks are missing
* Bug #653534: NameError on session\_get in sqlalchemy.api.service\_update
* Adjust db api usage according to recent refactoring
* Refactor sqlalchemy api to perform contextual authorization
* Fix the deprecation warnings for passing no context
* Address a few comments from Todd
* Merged trunk
* Locked down fixed ips and improved network tests
* merged remove-network-index
* Fixed flat network manager with network index gone
* merged trunk
* First attempt at a uuid generator -- but we've lost a 'topic' input so i don't know what that did
* Method cleanup and fixing the servers tests
* merged trunk, removed extra quotas
* Adds support for periodic\_tasks on manager that are regularly called by the service and recovers fixed\_ips that didn't get disassociated properly
* Replace database instance 'ec2\_id' with 'internal\_id' throughout the nova.db package. internal\_id is now an integer -- we need to figure out how to make this a bigint or something
* merged trunk
* Includes changes for creating instances via the Rackspace API. Utilizes much of the existing EC2 functionality to power the Rackspace side of things, at least for now
* Add a DB backend for auth manager
*   Bug #652103: NameError in exception handler in sqlalchemy API layer
* Bug #652103: NameError in exception handler in sqlalchemy API layer
* Cleaned up db/api.py
* Refactored APIRequestContext
* Simplified authorization with decorators" "
* Wired up context auth for keypairs
* Completed quota context auth
* Finished context auth for network
* Finished instance context auth
* Finished instance context auth
* Made network tests pass again
* Wired up context auth for services
* Progress on volumes Fixed foreign keys to respect deleted flag
* Support the pagination interface in RS API -- the &offset and &limit parameters are now recognized
* Update from trunk to handle one-line merge conflict
* Support fault notation in error messages in the RS API
* fix the primary and secondary join
* autocreate the models and use security\_groups
* Began wiring up context authorization
* removed a few extra items
* merged with soren's branch
* fix loading to ignore deleted items
* Add user-editable name & notes/description to volumes, instances, and images
* merged trunk
* fix join and misnamed method
* fix eagerload to be joins that filter by deleted == False
* \* Create an AuthManager#update\_user method to change keys and admin status. \* Refactor the auth\_unittest to not care about test order \* Expose the update\_user method via nova-manage
* Updates the fix-iptables branch with a number of bugfixes
* Makes sure that multiple copies of nova-network don't create multiple copies of the same NetworkIndex
* Fix a few errors in api calls related to mistyped database methods for floating\_ips: specifically describe addresses and and associate address
* Merged Termie's branch that starts tornado removal and fixed rpc test cases for twisted. Nothing is testing the Eventlet version of rpc.call though yet
* Adds a disabled flag to service model and check for it when scheduling instances and volumes
* Adds bpython support to nova-manage shell, because it is super sexy
* Added random ec2 style id's for volumes and instances
* merged and removed duplicated methods
* fixed merge conflicts
* Implementation of the Rackspace servers API controller
* Added checks for uniqueness for ec2 id
* add disabled column to services and check for it in scheduler
* merged network-lease-fix
* merged floating-ips
* move default group creation to api
* Implemented random instance and volume strings for ec2 api
* merge from trunk
* get rid of network indexes and make networks into a pool
* merged trunk
* return a value if possible from export\_device\_create\_safe
* merged floating-ip-by-project
* merged network-lease-fix
* merged trunk
* Stop trying to install nova-api-new (it's gone). Install nova-scheduler
* db api call to get instances by user and user checking in each of the server actions
* Add db api methods for retrieving the networks for which a host is the designated network host
* Merged Termie's branch and fixed rpc test cases for tesited. Nothing is testing the Eventlet version of rpc.call though yet
* Install nova-scheduler
* nova-api-new is no more. Don't attempt to install it
* Put EC2 API -> eventlet back into trunk, fixing the bits that I missed when I put it into trunk on 9/21
* Implementation of Rackspace token based authentication for the Openstack API
* Some more refactoring and another unit test
*  Refactored the auth branch based on review feedback
* Merged gundlach's branch
* merged trunk
* merge from trunk
* typo in instance\_get
* typo in instance\_get
* merged trunk and fixed errors
* cleaned up exception handling for fixed\_ip\_get
* merged trunk
* Delete nova.endpoint module, which used Tornado to serve up the Amazon EC2 API. Replace it with nova.api.ec2 module, which serves up the same API via a WSGI app in Eventlet. Convert relevant unit tests from Twisted to eventlet
* merged trunk
* merged trunk
* Some more refactoring and another unit test
* Implements quotas with overrides for instances, volumes, and floating ips
* Moves keypairs out of ldap and into the common datastore
* allows api servers to have a list of regions, allowing multi-cluster support if you have a shared image store and user database
* merged trunk
* merged trunk
* Refactored the auth branch based on review feedback
* Removes second copy of ProcessExecutionError that creeped in during a bad merge
* Adds timing fields to instances and volumes to track launch times and schedule times
* Adds timing fields to instances and volumes to track launch times and schedule times
* add in support for ajaxterm console access
* Better error message on the failure of a spawned process, and it's a ProcessExecutionException irrespective of how the process is run (twisted or not)
* Proposing merge to get feedback on orm refactoring.  I am very interested in feedback to all of these changes
* Clean up use of ORM to remove the need for scoped\_session
* Filters all get defined when running an instance
* multiple network controllers will not create duplicate indexes
* removed second copy of ProcessExecutionError
* simplified query
* missed a space
* set leased = 0 as well on disassociate update
* speed up the query and make sure allocated is false
* workaround for mysql select in update
* Periodic callback for services and managers.  Added code to automatically disassociate stale ip addresses
* merged trunk
* Integrity error is in a different exc file
* allow multiple volumes to run ensure\_blades without creating duplicates
* merged instance time and added better concurrency
* make fixed\_ip\_get\_by\_address return the instance as well so we don't run into concurrency issues where it is disassociated in between
* speed up generation of dhcp\_hosts and don't run into None errors if instance is deleted
* don't allocate the same floating ip multiple times
* merged trunk
* implement floating\_ip\_get\_all\_by\_project and renamed db methods that get more then one to get\_all\_by instead of get\_by
* merged scheduler
* tests for volumes work
* update query and test
* merged quotas
* use gigabytes and cores
* Security Group API layer cleanup
* merged trunk
* remerged scheduler
* merged trunk
* merged trunk
* merged trunk
* merged trunk
* fixed old key reference and made keypair name constistent -> key\_pair
* fixed tests, added a flag for updating dhcp on disassociate
* simplified network instance association
* fix network association issue
* Finished security group / project refactor
* delete keypairs when a user is deleted
* moved keypairs to db using the same interface
* Refactored to security group api to support projects
* merged orm and put instance in scheduling state
* First pass of nwfilter based security group implementation. It is not where it is supposed to be and it does not actually do anything yet
* Create and delete security groups works. Adding and revoking rules works. DescribeSecurityGroups returns the groups and rules. So, the API seems to be done. Yay
* merged describe\_speed
* added scheduled\_at to instances and volumes
* merged orm
* merged orm
* merged orm
* make the db creates return refs instead of ids
* merged orm, added database methods for getting volume and ip data for projects
* database support for quotas
* merged support code from orm branch
* added floating ip commands and launched\_at terminated\_at, deleted\_at for objects
* merged orm
* remove extraneous get\_host calls that were requiring an extra db trip
* Authorize and Revoke access now works
* list command for floating ips
* merged describe speed
* floating ip commands
* speed up describe by loading fixed and floating ips
* AuthorizeSecurityGroupIngress now works
* Alright, first hole poked all the way through. We can now create security groups and read them back
* don't fail in db if context isn't a dict, since we're still using a class based context in the api
* logging for backend is now info instead of error
* merged orm
* merged orm
* consistent naming for instance\_set\_state
* Tests turn things into inlineCallbacks
* Remove tornado-related code from almost everything
* make timestamps for instances and volumes, includes additions to get deleted objects from db using deleted flag
* updated to the new orm code
* changed a few unused context to \_context
* a few formatting fixes and moved exception
* fixed a few bugs in volume handling
* Last of cleanup, including removing fake\_storage flage
* review db code cleanup
* more fixes to session handling
* few typos in updates
* clean up of session handling
* merged orm
* fix floating\_ip to follow standard create pattern
* merged orm\_deux
* Lots of fixes to make the nova commands work properly and make datamodel work with mysql properly
* removed extra equals
* removed extra file and updated sql note
* more scheduler tests
* merged trunk
* merged orm branch
* merged trunk and cleaned up test
* renamed daemon to service and update db on create and destroy
* merged orm branch
* scheduler + unittests
* removed underscores from used context
* This improves the changelog generated as part of "setup.py sdist". If you look at it now, it says that Tarmac has done everything and every little commit is listed. With this patch, it only logs the "top-most" commit and credits the author rather than the committer
* Moved API tests into a sub-folder of the tests/ and added a stubbed-out test declarations to mirror existing API tickets
* merged orm branch
* pylint cleanup of db classes
* rename node\_name to host
* merged trunk
* Better log formatter for Nova. It's just like gnuchangelog, but logs the author rather than the committer
* Adjust setup.py to match nova-rsapi -> nova-api-new rename
* Fix up setup.py to match nova-rsapi -> nova-api-new rename
* more cleanup and pylint fixes
* pep8 cleanup
* merged trunk, fixed a couple errors
* run and terminate work
* undo change to get\_my\_ip
* all tests pass again
* merged devin's sqlalchemy changes
* Making tests pass
* pylint fixes for /nova/virt/connection.py
* pylint fixes for nova/objectstore/handler.py
* ip addresses work now
* Add Flavors controller supporting
* Resolve conflicts and merge trunk
* instance runs
* tests pass
* Making tests pass
* Refactored orm to support atomic actions
* moved network code into business layer
* split volume into service/manager/driver
* moved models.py
* removed the last few references to models.py
* fixed volume unit tests
* get to look like trunk
* network tests pass again
* Fixes issue with the same ip being assigned to multiple instances
* merged trunk and fixed tests
* move network\_type flag so it is accesible in data layer
* more data layer breakouts, lots of fixes to cloud.py
* merged jesse
* Initial support for Rackspace API /image requests.  They will eventually be backed by Glance
* work towards volumes using db layer
* merge vish
* merge vish
* merge vish
* more cleanup
* getting run/terminate/describe to work
* run instances works
* removed old imports and moved flags
* merge and fixes to creates to all return id
* bunch more fixes
* moving network code and fixing run\_instances
* jesse's run\_instances changes
* fix daemons and move network code
* Rework virt.xenapi's concurrency model.  There were many places where we were inadvertently blocking the reactor thread.  The reworking puts all calls to XenAPI on background threads, so that they won't block the reactor thread
* merged trunk and fixed merge errors
* Refactored network model access into data abstraction layer
* Moves auth.manager to the data layer
* Add db abstraction and unittets for service.py
* Alphabetize the methods in the db layer
* Better error message on subprocess spawn fail, and it's a ProcessExecutionException irrespective of how the process is run
* Check exit codes when spawning processes by default Also pass --fail to curl so that it sets exit code when download fails
* move volume code into datalayer and cleanup
* Added unit tests for WSGI helpers and base WSGI API
* merged termies abstractions
* Move deferredToThread into utils, as suggested by termie
* Data abstraction for compute service
* Merged with trunk
* Merged with trunk
* Merged trunk
* Since pylint=0.19 is our version, force everyone to use the disable-msg syntax
* Changed our minds: keep pylint equal to Ubuntu Lucid version, and use disable-msg throughout
* Newest pylint supports 'disable=', not 'disable-msg='
* merged trunk
* merged refresh from sleepsonthefloor
* See description of change... what's the difference between that message and this message again?
* Fixes quite a few style issues across the entire nova codebase bringing it much closer to the guide described in HACKING
* merge from trunk
* merged trunk and fixed conflicts
* Added documentation for the nova.virt connection interface, a note about the need to chmod the objectstore script, and a reference for the XenAPI module
* rather comprehensive style fixes
* Add new libvirt\_type option "uml" for user-mode-linux.. This switches the libvirt URI to uml:///system and uses a different template for the libvirt xml
* merge in latedt from vish
* Catches and logs exceptions for rpc calls and raises a RemoteError exception on the caller side
* Removes requirement of internet connectivity to run api server
* merged trunk
* merged fix-hostname and fixed conflict
* Improves pep8 compliance and pylint score in network code
* refactor to have base helper class with shared session and engine
* got run\_tests.py to run (with many failed tests)
* Make WSGI routing support routing to WSGI apps or to controller+action
* Merged with trunk
* Fix exception in get\_info
* Merged with trunk
* Merged with trunk
* Implement VIF creation in the xenapi module
* merged trunk
* 2 changes in doing PEP8 & Pylint cleaning:  \* adding pep8 and pylint to the PIP requirements files for Tools  \* light cleaning work (mostly formatting) on nova/endpoints/cloud.py
* More changes to volume to fix concurrency issues.  Also testing updates
* merged trunk, fixed an error with releasing ip
* pylint fixes for /nova/test.py
* Fixes pylint issues in /nova/server.py
* importing merges from hudson branch
* This branch builds off of Todd and Michael's API branches to rework the Rackspace API endpoint and WSGI layers
* Fix up variable names instead of disabling pylint naming rule.  Makes variables able to be a single letter in pylintrc
* Disables warning about TODO in code comments in pylintrc
* More pylint/pep8 cleanup, this time in bin/\* files
* pylint fixes for /nova/test.py
* Pull trunk merge through lp:~ewanmellor/nova/add-contains
* Pull trunk merge through lp:~ewanmellor/nova/xapi-plugin
* Merged with trunk again
* Merged with trunk
* Greater compliance with pep8/pylint style checks
* Merged trunk
* merged with trunk
* Merged Todd and Michael's changes
* Make network its own worker! This separates the network logic from the api server, allowing us to have multiple network controllers. There a lot of stuff in networking that is ugly and should be modified with the datamodel changes. I've attempted not to mess with those things too much to keep the changeset small(ha!)
* merged trunk
* merged trunk
* Fix deprecation warning in AuthManager. \_\_new\_\_ isn't allowed to take args
* Get IP doesn't fail of you not connected to the intetnet
* Merged with trunk
* Added --fail argument to curl invocations, so that HTTP request fails get surfaced as non-zero exit codes
* Merged with trunk
* Merged with trunk
* Fixed assertion "Someone released me too many times: too many tokens!"
* Merged with trunk to resolve merge conflicts
* oops retry and add extra exception check
* Added ChangeLog generation
* Implemented admin api for rbac
* Adds initial support for XenAPI (not yet finished)
* More merges from trunk.  Not everything came over the first time
* Allow driver specification in AuthManager creation
* Fixed pep8 issues in setup.py - thanks redbo
* Releaed 0.9.0, now on 0.9.1
* Added ChangeLog generation
* allow driver to be passed in to auth manager instead of depending solely on flag
* Merged trunk
* Create a model for storing session tokens
* bzr merge lp:nova/trunk
* Tagged 0.9.0 and bumped the version to 0.9.1
* Got the tree set for debian packaging
* Added the gitignore files back in for the folks who are still on the git
* Updated setup.py file to install stuff on a python setup.py install command
* Removed gitignore files
* Merged trunk
* Bump version to 0.9.0
* Makes the compute and volume daemon workers use a common base class called Service. Adds a NetworkService in preparation for splitting out networking code.  General cleanup and standardizarion of naming
* Bump version to 0.9.0. Change author to "OpenStack". Change author\_email to nova@lists.launchpad.net. Change url to http://www.openstack.org/. Change description to "cloud computing fabric controller"
* merged trunk
* Makes the objectstore require authorization, checks it properly, and makes nova-compute provide it when fetching images
* Refactor of auth code
* Adds support scripts for installing deps into a virtualenv
* Move virtualenv installation out of the makefile
* Expiry awareness for SessionToken
* merged trunk
* merged trunk
* Updated doc layout to the Sphinx two-dir layout
* Changes nova-volume to use twisted
* Updated sphinx layout to a two-dir layout like swift. Updated a doc string to get rid of a Sphinx warning
* Merged with trunk, since a lot of useful things have gone in there recently
* renamed xxxnode to xxservice
* Check exit codes when spawning processes by default
* Merged trunk, fixed extra references to fake\_users
* merge with twisted-volume
* Locally administered mac addresses have the second least significant bit of the most significant byte set. If this byte is set then udev on ubuntu doesn't set persistent net rules
* use a locally administered mac address so it isn't saved by udev
* Merged trunk. Fixed new references to UserManager
* Fixes to dhcp lease code to use a flagfile
* merged trunk
* Replace tornado objectstore with twisted web
* merged in trunk and fixed import merge errors
* Add build\_sphinx support
* Added a config file to let setup.py drive building the sphinx docs
* merge with singleton pool
* reorder imports spacing
* remove import of vendor since we have PPA now
* remove vendor
* update copyrights
* fix merge errors
* datetime import typo
* added missing isotime method from utils
* Fixed the os.environ patch (bogus)
* Fixes as per Vish review (whitespace, import statements)
* Got dhcpleasor working, with test ENV for testing, and rpc.cast for real world
* Capture signals from dnsmasq and use them to update network state
* Removed trailing whitespace from header
* Updated licenses
* removed all references to keeper
* Fixes based on code review 27001
* Admin API + Worker Tracking
* Removed trailing whitespace from header
* Updated licenses
* fix fakeldap so it can use redis keeper
* Refactored Instance to get rid of \_s bits, and fixed some bugs in state management
* Flush redis db in setup and teardown of tests
* Update documentation
* make get\_my\_ip return 127.0.0.1 for testing
* whitespace fixes for nova/utils.py
* missed the gitignore
* initial commit
